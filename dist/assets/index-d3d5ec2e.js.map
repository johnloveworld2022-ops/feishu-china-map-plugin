{"version":3,"file":"index-d3d5ec2e.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/data/chinaMap.ts","../../src/components/MapRenderer.tsx","../../src/components/MapControls.tsx","../../src/utils/colorUtils.ts","../../src/components/MapLegend.tsx","../../src/utils/dataTransform.ts","../../src/components/RegionDetailModal.tsx","../../src/components/MapToolbar.tsx","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/zustand/esm/index.mjs","../../node_modules/zustand/esm/middleware.mjs","../../src/services/feishuBitableService.ts","../../src/stores/mapStore.ts","../../src/components/MapContainer.tsx","../../src/components/DataSourceConfig.tsx","../../src/components/RegionMappingConfig.tsx","../../src/services/feishuPluginService.ts","../../src/components/ChinaMapDashboard.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// 简化的中国地图数据\n// 在实际项目中，你应该使用完整的 GeoJSON 数据\nexport const chinaMapData = {\n  type: 'FeatureCollection' as const,\n  features: [\n    {\n      type: 'Feature' as const,\n      properties: {\n        name: '北京市',\n        adcode: '110000'\n      },\n      geometry: {\n        type: 'Polygon' as const,\n        coordinates: [[[116.4, 39.9], [116.5, 39.9], [116.5, 40.0], [116.4, 40.0], [116.4, 39.9]]]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '上海市',\n        adcode: '310000'\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[121.4, 31.2], [121.5, 31.2], [121.5, 31.3], [121.4, 31.3], [121.4, 31.2]]]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '广东省',\n        adcode: '440000'\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[113.2, 23.1], [113.3, 23.1], [113.3, 23.2], [113.2, 23.2], [113.2, 23.1]]]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '浙江省',\n        adcode: '330000'\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[120.1, 30.2], [120.2, 30.2], [120.2, 30.3], [120.1, 30.3], [120.1, 30.2]]]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '江苏省',\n        adcode: '320000'\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[118.7, 32.0], [118.8, 32.0], [118.8, 32.1], [118.7, 32.1], [118.7, 32.0]]]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '四川省',\n        adcode: '510000'\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[104.0, 30.6], [104.1, 30.6], [104.1, 30.7], [104.0, 30.7], [104.0, 30.6]]]\n      }\n    }\n  ]\n};\n\n// 模拟地区数据\nexport const mockRegionData = [\n  {\n    id: '1',\n    name: '上海市',\n    regionType: '华东',\n    manager: {\n      id: 'm1',\n      name: '小黄',\n      contact: '13800138001',\n      email: 'xiaohuang@example.com'\n    },\n    institutions: [\n      {\n        id: 'i1',\n        name: '上海分公司',\n        address: '上海市浦东新区',\n        establishedDate: new Date('2020-01-15'),\n        status: 'active' as const,\n        regionId: '1'\n      },\n      {\n        id: 'i2',\n        name: '上海办事处',\n        address: '上海市黄浦区',\n        establishedDate: new Date('2021-03-20'),\n        status: 'active' as const,\n        regionId: '1'\n      },\n      {\n        id: 'i3',\n        name: '上海研发中心',\n        address: '上海市徐汇区',\n        establishedDate: new Date('2022-06-10'),\n        status: 'active' as const,\n        regionId: '1'\n      }\n    ]\n  },\n  {\n    id: '2',\n    name: '广东省',\n    regionType: '华南',\n    manager: {\n      id: 'm2',\n      name: '小李',\n      contact: '13800138002',\n      email: 'xiaoli@example.com'\n    },\n    institutions: [\n      {\n        id: 'i4',\n        name: '广州分公司',\n        address: '广州市天河区',\n        establishedDate: new Date('2019-08-12'),\n        status: 'active' as const,\n        regionId: '2'\n      },\n      {\n        id: 'i5',\n        name: '深圳办事处',\n        address: '深圳市南山区',\n        establishedDate: new Date('2020-11-05'),\n        status: 'active' as const,\n        regionId: '2'\n      }\n    ]\n  },\n  {\n    id: '3',\n    name: '北京市',\n    regionType: '华北',\n    manager: {\n      id: 'm3',\n      name: '小王',\n      contact: '13800138003',\n      email: 'xiaowang@example.com'\n    },\n    institutions: [\n      {\n        id: 'i6',\n        name: '北京总部',\n        address: '北京市朝阳区',\n        establishedDate: new Date('2018-01-01'),\n        status: 'active' as const,\n        regionId: '3'\n      },\n      {\n        id: 'i7',\n        name: '北京研发部',\n        address: '北京市海淀区',\n        establishedDate: new Date('2019-05-15'),\n        status: 'active' as const,\n        regionId: '3'\n      },\n      {\n        id: 'i8',\n        name: '北京销售部',\n        address: '北京市西城区',\n        establishedDate: new Date('2020-09-20'),\n        status: 'active' as const,\n        regionId: '3'\n      },\n      {\n        id: 'i9',\n        name: '北京客服中心',\n        address: '北京市东城区',\n        establishedDate: new Date('2021-12-01'),\n        status: 'active' as const,\n        regionId: '3'\n      }\n    ]\n  },\n  {\n    id: '4',\n    name: '浙江省',\n    regionType: '华东',\n    manager: {\n      id: 'm4',\n      name: '小张',\n      contact: '13800138004',\n      email: 'xiaozhang@example.com'\n    },\n    institutions: [\n      {\n        id: 'i10',\n        name: '杭州分公司',\n        address: '杭州市西湖区',\n        establishedDate: new Date('2020-04-10'),\n        status: 'active' as const,\n        regionId: '4'\n      }\n    ]\n  },\n  {\n    id: '5',\n    name: '江苏省',\n    regionType: '华东',\n    manager: {\n      id: 'm5',\n      name: '小刘',\n      contact: '13800138005',\n      email: 'xiaoliu@example.com'\n    },\n    institutions: [\n      {\n        id: 'i11',\n        name: '南京分公司',\n        address: '南京市鼓楼区',\n        establishedDate: new Date('2021-07-15'),\n        status: 'active' as const,\n        regionId: '5'\n      },\n      {\n        id: 'i12',\n        name: '苏州办事处',\n        address: '苏州市工业园区',\n        establishedDate: new Date('2022-02-28'),\n        status: 'active' as const,\n        regionId: '5'\n      }\n    ]\n  },\n  {\n    id: '6',\n    name: '四川省',\n    regionType: '华西',\n    manager: {\n      id: 'm6',\n      name: '小陈',\n      contact: '13800138006',\n      email: 'xiaochen@example.com'\n    },\n    institutions: [\n      {\n        id: 'i13',\n        name: '成都分公司',\n        address: '成都市高新区',\n        establishedDate: new Date('2021-10-12'),\n        status: 'active' as const,\n        regionId: '6'\n      }\n    ]\n  }\n];","import React, { useEffect, useRef } from 'react';\nimport * as echarts from 'echarts';\nimport type { MapDataPoint, MapEvent } from '@/types';\nimport { chinaMapData } from '@/data/chinaMap';\n\n\ninterface MapRendererProps {\n  data: MapDataPoint[];\n  onMapEvent?: (event: MapEvent) => void;\n  loading?: boolean;\n  className?: string;\n}\n\n// 生成视觉映射片段\nconst generateVisualMapPieces = (data: MapDataPoint[]) => {\n  if (data.length === 0) return [];\n  \n  const maxValue = Math.max(...data.map(d => d.value), 1);\n  const pieces = [];\n  \n  // 无机构\n  pieces.push({\n    min: 0,\n    max: 0,\n    color: '#f0f0f0',\n    label: '无机构'\n  });\n  \n  // 根据最大值动态生成分段\n  const segments = Math.min(6, maxValue); // 最多6个分段\n  for (let i = 1; i <= segments; i++) {\n    const min = Math.ceil((i - 1) * maxValue / segments) + (i === 1 ? 1 : 0);\n    const max = i === segments ? undefined : Math.ceil(i * maxValue / segments);\n    \n    pieces.push({\n      min,\n      max,\n      color: getSegmentColor(i),\n      label: max ? `${min}-${max}家` : `${min}家以上`\n    });\n  }\n  \n  return pieces;\n};\n\n// 获取分段颜色\nconst getSegmentColor = (segment: number): string => {\n  const colors = ['#c6e48b', '#7bc96f', '#239a3b', '#196127', '#0d4d1a', '#0a3d14'];\n  const index = Math.min(segment - 1, colors.length - 1);\n  return colors[index];\n};\n\nconst MapRenderer: React.FC<MapRendererProps> = ({\n  data,\n  onMapEvent,\n  loading = false,\n  className = ''\n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n  const chartInstance = useRef<echarts.ECharts | null>(null);\n\n  // 初始化图表\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    // 创建图表实例\n    chartInstance.current = echarts.init(chartRef.current);\n\n    // 注册中国地图 - 使用在线地图数据\n    const loadChinaMap = async () => {\n      try {\n        const response = await fetch('https://geo.datav.aliyun.com/areas_v3/bound/100000_full.json');\n        const chinaGeoJson = await response.json();\n        echarts.registerMap('china', chinaGeoJson);\n      } catch (error) {\n        console.warn('在线地图加载失败，使用本地数据:', error);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        echarts.registerMap('china', chinaMapData as any);\n      }\n    };\n    \n    loadChinaMap();\n\n    return () => {\n      chartInstance.current?.dispose();\n    };\n  }, []);\n\n  // 更新图表配置\n  useEffect(() => {\n    if (!chartInstance.current) return;\n\n    // 延迟渲染，确保地图数据已加载\n    const renderMap = () => {\n      const option: echarts.EChartsOption = {\n      title: {\n        text: '中国地图仪表盘',\n        left: 'center',\n        textStyle: {\n          color: '#1f2329',\n          fontSize: 18,\n          fontWeight: 'bold'\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        formatter: (params: any) => {\n          const data = params.data;\n          if (!data) return '';\n          \n          return `\n            <div style=\"padding: 8px;\">\n              <div style=\"font-weight: bold; margin-bottom: 4px;\">${data.name}</div>\n              <div>负责人: ${data.manager}</div>\n              <div>机构数量: ${data.value}</div>\n              <div>管理区域: ${data.regionType}</div>\n            </div>\n          `;\n        },\n        backgroundColor: 'rgba(255, 255, 255, 0.95)',\n        borderColor: '#e3e6ea',\n        borderWidth: 1,\n        textStyle: {\n          color: '#1f2329',\n          fontSize: 12\n        }\n      },\n      visualMap: {\n        type: 'piecewise',\n        pieces: generateVisualMapPieces(data),\n        orient: 'vertical',\n        left: 'left',\n        top: 'bottom',\n        textStyle: {\n          color: '#1f2329',\n          fontSize: 12\n        },\n        itemWidth: 20,\n        itemHeight: 14,\n        itemGap: 5\n      },\n\n      series: [\n        {\n          name: '机构分布',\n          type: 'map',\n          map: 'china',\n          data: data,\n          roam: true,\n          scaleLimit: {\n            min: 0.8,\n            max: 3\n          },\n          itemStyle: {\n            borderColor: '#333',\n            borderWidth: 0.5,\n            areaColor: '#f0f0f0'\n          },\n          emphasis: {\n            itemStyle: {\n              areaColor: '#ffd700',\n              shadowBlur: 10,\n              shadowColor: 'rgba(0, 0, 0, 0.3)',\n              borderWidth: 1,\n              borderColor: '#ff6b35'\n            }\n          },\n          select: {\n            itemStyle: {\n              areaColor: '#ff6b35',\n              borderWidth: 1,\n              borderColor: '#ff4500'\n            }\n          }\n        }\n      ]\n    };\n\n    // 设置加载状态\n    if (loading) {\n      chartInstance.current?.showLoading('default', {\n        text: '加载中...',\n        color: '#3370ff',\n        textColor: '#1f2329',\n        maskColor: 'rgba(255, 255, 255, 0.8)'\n      });\n    } else {\n      chartInstance.current?.hideLoading();\n    }\n\n    // 应用配置\n    chartInstance.current?.setOption(option, true);\n\n    // 绑定事件\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleClick = (params: any) => {\n      if (params.data && onMapEvent) {\n        onMapEvent({\n          type: 'click',\n          data: {\n            regionId: params.data.name,\n            regionName: params.data.name,\n            institutionCount: params.data.value,\n            manager: params.data.manager\n          },\n          timestamp: Date.now()\n        });\n      }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleMouseOver = (params: any) => {\n      if (params.data && onMapEvent) {\n        onMapEvent({\n          type: 'hover',\n          data: {\n            regionId: params.data.name,\n            regionName: params.data.name,\n            institutionCount: params.data.value,\n            manager: params.data.manager\n          },\n          timestamp: Date.now()\n        });\n      }\n    };\n\n    chartInstance.current?.on('click', handleClick);\n    chartInstance.current?.on('mouseover', handleMouseOver);\n\n    return () => {\n      chartInstance.current?.off('click', handleClick);\n      chartInstance.current?.off('mouseover', handleMouseOver);\n    };\n    };\n\n    // 延迟执行渲染\n    setTimeout(renderMap, 100);\n  }, [data, loading, onMapEvent]);\n\n  // 响应式调整和键盘事件\n  useEffect(() => {\n    const handleResize = () => {\n      chartInstance.current?.resize();\n    };\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (!chartInstance.current) return;\n\n      switch (event.key) {\n        case 'Escape':\n          // 重置地图视图\n          chartInstance.current.dispatchAction({\n            type: 'restore'\n          });\n          break;\n        case '+':\n        case '=':\n          // 放大\n          chartInstance.current.dispatchAction({\n            type: 'geoZoom',\n            zoom: 1.2\n          });\n          break;\n        case '-':\n          // 缩小\n          chartInstance.current.dispatchAction({\n            type: 'geoZoom',\n            zoom: 0.8\n          });\n          break;\n        case 'r':\n        case 'R':\n          // 重置到初始状态\n          chartInstance.current.dispatchAction({\n            type: 'geoRestore'\n          });\n          break;\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div \n      ref={chartRef} \n      className={`w-full h-full min-h-[600px] ${className}`}\n      style={{ \n        minHeight: '600px',\n        width: '100%',\n        height: '100%'\n      }}\n    />\n  );\n};\n\nexport default MapRenderer;","import React, { useState } from 'react';\nimport type { RegionData } from '@/types';\n\ninterface MapControlsProps {\n  regions: RegionData[];\n  selectedRegion: string | null;\n  onRegionSelect: (regionId: string | null) => void;\n}\n\nconst MapControls: React.FC<MapControlsProps> = ({\n  regions,\n  selectedRegion,\n  onRegionSelect\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRegionType, setFilterRegionType] = useState<string>('all');\n\n  // 获取所有区域类型\n  const regionTypes = Array.from(new Set(regions.map(region => region.regionType)));\n\n  // 筛选地区\n  const filteredRegions = regions.filter(region => {\n    const matchesSearch = region.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         region.manager.name.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesType = filterRegionType === 'all' || region.regionType === filterRegionType;\n    \n    return matchesSearch && matchesType;\n  });\n\n  // 按机构数量排序\n  const sortedRegions = [...filteredRegions].sort((a, b) => b.institutions.length - a.institutions.length);\n\n  // 选中的地区详情\n  const selectedRegionData = regions.find(region => region.name === selectedRegion);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* 搜索和筛选 */}\n      <div className=\"p-4 space-y-3\">\n        <div>\n          <label className=\"block text-sm font-medium text-feishu-primary mb-1\">\n            搜索地区\n          </label>\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            placeholder=\"输入省份名称或负责人姓名\"\n            className=\"w-full px-3 py-2 border border-feishu-border rounded-md focus:outline-none focus:ring-2 focus:ring-feishu-accent focus:border-transparent\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-feishu-primary mb-1\">\n            管理区域\n          </label>\n          <select\n            value={filterRegionType}\n            onChange={(e) => setFilterRegionType(e.target.value)}\n            className=\"w-full px-3 py-2 border border-feishu-border rounded-md focus:outline-none focus:ring-2 focus:ring-feishu-accent focus:border-transparent\"\n          >\n            <option value=\"all\">全部区域</option>\n            {regionTypes.map(type => (\n              <option key={type} value={type}>{type}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* 地区列表 */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"px-4 pb-2\">\n          <h3 className=\"text-sm font-medium text-feishu-primary mb-2\">\n            地区列表 ({sortedRegions.length})\n          </h3>\n        </div>\n\n        <div className=\"space-y-1 px-4\">\n          {sortedRegions.map(region => (\n            <div\n              key={region.id}\n              onClick={() => onRegionSelect(region.name === selectedRegion ? null : region.name)}\n              className={`p-3 rounded-md cursor-pointer transition-colors ${\n                selectedRegion === region.name\n                  ? 'bg-feishu-accent bg-opacity-10 border border-feishu-accent'\n                  : 'hover:bg-gray-50 border border-transparent'\n              }`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-feishu-primary\">\n                    {region.name}\n                  </div>\n                  <div className=\"text-sm text-feishu-secondary\">\n                    {region.manager.name} · {region.regionType}\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-semibold text-feishu-accent\">\n                    {region.institutions.length}\n                  </div>\n                  <div className=\"text-xs text-feishu-secondary\">\n                    机构\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {sortedRegions.length === 0 && (\n          <div className=\"text-center py-8 text-feishu-secondary\">\n            <div className=\"text-4xl mb-2\">🔍</div>\n            <div>未找到匹配的地区</div>\n          </div>\n        )}\n      </div>\n\n      {/* 选中地区详情 */}\n      {selectedRegionData && (\n        <div className=\"border-t border-feishu-border p-4 bg-white\">\n          <h3 className=\"font-medium text-feishu-primary mb-3\">\n            {selectedRegionData.name} 详情\n          </h3>\n          \n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-feishu-secondary\">负责人:</span>\n              <span className=\"text-feishu-primary\">{selectedRegionData.manager.name}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-feishu-secondary\">联系方式:</span>\n              <span className=\"text-feishu-primary\">{selectedRegionData.manager.contact}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-feishu-secondary\">管理区域:</span>\n              <span className=\"text-feishu-primary\">{selectedRegionData.regionType}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-feishu-secondary\">机构总数:</span>\n              <span className=\"text-feishu-accent font-semibold\">\n                {selectedRegionData.institutions.length}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-feishu-secondary\">活跃机构:</span>\n              <span className=\"text-feishu-success\">\n                {selectedRegionData.institutions.filter(inst => inst.status === 'active').length}\n              </span>\n            </div>\n          </div>\n\n          <button\n            onClick={() => onRegionSelect(null)}\n            className=\"w-full mt-3 feishu-button feishu-button-secondary text-sm\"\n          >\n            关闭详情\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MapControls;","import type { ColorScheme, RegionData } from '@/types';\n\n/**\n * 预定义的地区颜色方案\n */\nexport const REGION_COLOR_SCHEMES: Record<string, ColorScheme> = {\n  '华东': {\n    regionType: '华东',\n    baseColor: '#3b82f6',\n    colorRange: [\n      '#eff6ff', // 0机构 - 最浅\n      '#dbeafe', // 1机构\n      '#bfdbfe', // 2-3机构\n      '#93c5fd', // 4-5机构\n      '#60a5fa', // 6-8机构\n      '#3b82f6', // 9-12机构\n      '#2563eb', // 13-16机构\n      '#1d4ed8', // 17-20机构\n      '#1e40af', // 21+机构 - 最深\n    ],\n    maxInstitutions: 20\n  },\n  '华南': {\n    regionType: '华南',\n    baseColor: '#ef4444',\n    colorRange: [\n      '#fef2f2',\n      '#fee2e2',\n      '#fecaca',\n      '#fca5a5',\n      '#f87171',\n      '#ef4444',\n      '#dc2626',\n      '#b91c1c',\n      '#991b1b',\n    ],\n    maxInstitutions: 20\n  },\n  '华西': {\n    regionType: '华西',\n    baseColor: '#22c55e',\n    colorRange: [\n      '#f0fdf4',\n      '#dcfce7',\n      '#bbf7d0',\n      '#86efac',\n      '#4ade80',\n      '#22c55e',\n      '#16a34a',\n      '#15803d',\n      '#166534',\n    ],\n    maxInstitutions: 20\n  },\n  '华北': {\n    regionType: '华北',\n    baseColor: '#eab308',\n    colorRange: [\n      '#fefce8',\n      '#fef9c3',\n      '#fef08a',\n      '#fde047',\n      '#facc15',\n      '#eab308',\n      '#ca8a04',\n      '#a16207',\n      '#854d0e',\n    ],\n    maxInstitutions: 20\n  },\n  '华中': {\n    regionType: '华中',\n    baseColor: '#8b5cf6',\n    colorRange: [\n      '#faf5ff',\n      '#f3e8ff',\n      '#e9d5ff',\n      '#d8b4fe',\n      '#c084fc',\n      '#a855f7',\n      '#9333ea',\n      '#7c3aed',\n      '#6d28d9',\n    ],\n    maxInstitutions: 20\n  },\n  '东北': {\n    regionType: '东北',\n    baseColor: '#06b6d4',\n    colorRange: [\n      '#ecfeff',\n      '#cffafe',\n      '#a5f3fc',\n      '#67e8f9',\n      '#22d3ee',\n      '#06b6d4',\n      '#0891b2',\n      '#0e7490',\n      '#155e75',\n    ],\n    maxInstitutions: 20\n  },\n  '西北': {\n    regionType: '西北',\n    baseColor: '#f59e0b',\n    colorRange: [\n      '#fffbeb',\n      '#fef3c7',\n      '#fde68a',\n      '#fcd34d',\n      '#fbbf24',\n      '#f59e0b',\n      '#d97706',\n      '#b45309',\n      '#92400e',\n    ],\n    maxInstitutions: 20\n  }\n};\n\n/**\n * 计算地区颜色\n */\nexport const calculateRegionColor = (\n  regionType: string,\n  institutionCount: number,\n  maxCount?: number\n): string => {\n  const colorScheme = REGION_COLOR_SCHEMES[regionType] || REGION_COLOR_SCHEMES['华东'];\n  const actualMaxCount = maxCount || colorScheme.maxInstitutions;\n  \n  // 如果没有机构，返回最浅色\n  if (institutionCount === 0) {\n    return colorScheme.colorRange[0];\n  }\n  \n  // 计算颜色强度（0-1）\n  const intensity = Math.min(institutionCount / actualMaxCount, 1);\n  \n  // 根据强度选择颜色索引\n  const colorIndex = Math.min(\n    Math.floor(intensity * (colorScheme.colorRange.length - 1)) + 1,\n    colorScheme.colorRange.length - 1\n  );\n  \n  return colorScheme.colorRange[colorIndex];\n};\n\n/**\n * 获取所有地区的最大机构数量\n */\nexport const getMaxInstitutionCount = (regions: RegionData[]): number => {\n  if (regions.length === 0) return 1;\n  return Math.max(...regions.map(region => region.institutions.length), 1);\n};\n\n/**\n * 更新颜色方案的最大值\n */\nexport const updateColorSchemeMaxValues = (regions: RegionData[]): Record<string, ColorScheme> => {\n  const updatedSchemes = { ...REGION_COLOR_SCHEMES };\n  \n  // 按地区类型分组计算最大值\n  const regionTypeMaxCounts: Record<string, number> = {};\n  \n  regions.forEach(region => {\n    const currentMax = regionTypeMaxCounts[region.regionType] || 0;\n    regionTypeMaxCounts[region.regionType] = Math.max(currentMax, region.institutions.length);\n  });\n  \n  // 更新每个颜色方案的最大值\n  Object.keys(updatedSchemes).forEach(regionType => {\n    if (regionTypeMaxCounts[regionType]) {\n      updatedSchemes[regionType] = {\n        ...updatedSchemes[regionType],\n        maxInstitutions: Math.max(regionTypeMaxCounts[regionType], 5) // 至少为5，确保颜色分布合理\n      };\n    }\n  });\n  \n  return updatedSchemes;\n};\n\n/**\n * 生成颜色图例数据\n */\nexport const generateColorLegend = (colorScheme: ColorScheme) => {\n  const { colorRange, maxInstitutions } = colorScheme;\n  const legendItems = [];\n  \n  // 生成图例项\n  for (let i = 0; i < colorRange.length; i++) {\n    const minValue = i === 0 ? 0 : Math.ceil((i - 1) * maxInstitutions / (colorRange.length - 2));\n    const maxValue = i === 0 ? 0 : Math.ceil(i * maxInstitutions / (colorRange.length - 2));\n    \n    legendItems.push({\n      color: colorRange[i],\n      label: i === 0 ? '无机构' : \n             i === colorRange.length - 1 ? `${minValue}+` :\n             minValue === maxValue ? `${minValue}` : `${minValue}-${maxValue}`,\n      value: i === 0 ? 0 : maxValue,\n      range: { min: minValue, max: maxValue }\n    });\n  }\n  \n  return legendItems;\n};\n\n/**\n * HSL 颜色转换工具\n */\nexport const hexToHsl = (hex: string): { h: number; s: number; l: number } => {\n  const r = parseInt(hex.slice(1, 3), 16) / 255;\n  const g = parseInt(hex.slice(3, 5), 16) / 255;\n  const b = parseInt(hex.slice(5, 7), 16) / 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = 0;\n  let s = 0;\n  const l = (max + min) / 2;\n\n  if (max !== min) {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    \n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n    }\n    h /= 6;\n  }\n\n  return { h: h * 360, s: s * 100, l: l * 100 };\n};\n\n/**\n * HSL 转 HEX\n */\nexport const hslToHex = (h: number, s: number, l: number): string => {\n  h /= 360;\n  s /= 100;\n  l /= 100;\n\n  const hue2rgb = (p: number, q: number, t: number) => {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1/6) return p + (q - p) * 6 * t;\n    if (t < 1/2) return q;\n    if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n    return p;\n  };\n\n  let r, g, b;\n\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n\n  const toHex = (c: number) => {\n    const hex = Math.round(c * 255).toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  };\n\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n};\n\n/**\n * 生成渐变色\n */\nexport const generateGradientColors = (\n  startColor: string,\n  endColor: string,\n  steps: number\n): string[] => {\n  const startHsl = hexToHsl(startColor);\n  const endHsl = hexToHsl(endColor);\n  \n  const colors: string[] = [];\n  \n  for (let i = 0; i < steps; i++) {\n    const ratio = i / (steps - 1);\n    \n    const h = startHsl.h + (endHsl.h - startHsl.h) * ratio;\n    const s = startHsl.s + (endHsl.s - startHsl.s) * ratio;\n    const l = startHsl.l + (endHsl.l - startHsl.l) * ratio;\n    \n    colors.push(hslToHex(h, s, l));\n  }\n  \n  return colors;\n};\n\n/**\n * 获取对比色（用于文字显示）\n */\nexport const getContrastColor = (backgroundColor: string): string => {\n  const { l } = hexToHsl(backgroundColor);\n  return l > 50 ? '#000000' : '#ffffff';\n};\n\n/**\n * 验证颜色格式\n */\nexport const isValidColor = (color: string): boolean => {\n  const hexPattern = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  return hexPattern.test(color);\n};\n\n/**\n * 获取地区类型的主题色\n */\nexport const getRegionThemeColor = (regionType: string): string => {\n  const scheme = REGION_COLOR_SCHEMES[regionType];\n  return scheme ? scheme.baseColor : REGION_COLOR_SCHEMES['华东'].baseColor;\n};","import React from 'react';\nimport type { ColorScheme } from '@/types';\nimport { generateColorLegend } from '@/utils/colorUtils';\n\ninterface MapLegendProps {\n  colorSchemes: string[];\n  statistics: {\n    totalRegions: number;\n    totalInstitutions: number;\n    activeRegions: number;\n    topRegion: {\n      name: string;\n      institutions: { length: number };\n      manager: { name: string };\n    };\n  };\n  updatedColorSchemes: Record<string, ColorScheme>;\n}\n\nconst MapLegend: React.FC<MapLegendProps> = ({ colorSchemes, statistics, updatedColorSchemes }) => {\n  // 地区标签映射\n  const regionLabels: Record<string, string> = {\n    '华东': '华东地区',\n    '华南': '华南地区',\n    '华西': '华西地区',\n    '华北': '华北地区',\n    '华中': '华中地区',\n    '东北': '东北地区',\n    '西北': '西北地区'\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* 统计信息 */}\n      <div className=\"grid grid-cols-4 gap-4\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-feishu-accent\">\n            {statistics.totalRegions}\n          </div>\n          <div className=\"text-sm text-feishu-secondary\">总地区数</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-feishu-success\">\n            {statistics.totalInstitutions}\n          </div>\n          <div className=\"text-sm text-feishu-secondary\">总机构数</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-feishu-warning\">\n            {statistics.activeRegions}\n          </div>\n          <div className=\"text-sm text-feishu-secondary\">活跃地区</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-feishu-primary truncate\">\n            {statistics.topRegion?.name || '-'}\n          </div>\n          <div className=\"text-sm text-feishu-secondary\">机构最多</div>\n        </div>\n      </div>\n\n      {/* 颜色图例 */}\n      <div className=\"space-y-4\">\n        {colorSchemes.map(regionType => {\n          const colorScheme = updatedColorSchemes[regionType];\n          if (!colorScheme) return null;\n\n          const legendItems = generateColorLegend(colorScheme);\n          const label = regionLabels[regionType] || regionType;\n\n          return (\n            <div key={regionType} className=\"space-y-2\">\n              <div className=\"text-sm font-medium text-feishu-primary\">\n                {label} (最多 {colorScheme.maxInstitutions} 家机构)\n              </div>\n              <div className=\"flex flex-wrap items-center gap-2\">\n                {legendItems.map((item, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-center space-x-1 px-2 py-1 rounded-md bg-gray-50\"\n                  >\n                    <div\n                      className=\"w-4 h-4 rounded border border-gray-300\"\n                      style={{ backgroundColor: item.color }}\n                      title={`${item.label} 机构`}\n                    />\n                    <span className=\"text-xs text-feishu-secondary\">\n                      {item.label}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* 说明文字 */}\n      <div className=\"text-xs text-feishu-secondary bg-feishu-background p-3 rounded-md\">\n        <div className=\"flex items-start space-x-2\">\n          <div className=\"text-feishu-accent\">💡</div>\n          <div>\n            <div className=\"font-medium mb-1\">使用说明:</div>\n            <ul className=\"space-y-1\">\n              <li>• 颜色深浅代表该地区的机构数量，颜色越深表示机构越多</li>\n              <li>• 点击地图上的省份可查看详细信息</li>\n              <li>• 使用右侧控制面板可以搜索和筛选地区</li>\n              <li>• 支持鼠标滚轮缩放和拖拽移动地图</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapLegend;","import type { RegionData, MapDataPoint, Institution, Statistics } from '@/types';\n\n/**\n * 将地区数据转换为地图数据点\n */\nexport const transformRegionToMapData = (regions: RegionData[]): MapDataPoint[] => {\n  return regions.map(region => ({\n    name: region.name,\n    value: region.institutions.length,\n    regionType: region.regionType,\n    manager: region.manager.name,\n    itemStyle: {\n      color: calculateRegionColor(region.regionType, region.institutions.length, getMaxInstitutions(regions))\n    }\n  }));\n};\n\n/**\n * 计算地区颜色\n */\nexport const calculateRegionColor = (\n  regionType: string,\n  institutionCount: number,\n  maxCount: number\n): string => {\n  // 预定义的颜色方案\n  const colorSchemes: Record<string, { base: string; range: string[] }> = {\n    '华东': {\n      base: '#3b82f6',\n      range: ['#eff6ff', '#dbeafe', '#bfdbfe', '#93c5fd', '#60a5fa', '#3b82f6', '#2563eb', '#1d4ed8']\n    },\n    '华南': {\n      base: '#ef4444',\n      range: ['#fef2f2', '#fee2e2', '#fecaca', '#fca5a5', '#f87171', '#ef4444', '#dc2626', '#b91c1c']\n    },\n    '华西': {\n      base: '#22c55e',\n      range: ['#f0fdf4', '#dcfce7', '#bbf7d0', '#86efac', '#4ade80', '#22c55e', '#16a34a', '#15803d']\n    },\n    '华北': {\n      base: '#eab308',\n      range: ['#fefce8', '#fef9c3', '#fef08a', '#fde047', '#facc15', '#eab308', '#ca8a04', '#a16207']\n    }\n  };\n\n  const scheme = colorSchemes[regionType] || colorSchemes['华东'];\n  \n  if (maxCount === 0) return scheme.range[0];\n  \n  // 计算颜色强度（0-1）\n  const intensity = Math.min(institutionCount / maxCount, 1);\n  \n  // 根据强度选择颜色\n  const colorIndex = Math.floor(intensity * (scheme.range.length - 1));\n  \n  return scheme.range[colorIndex];\n};\n\n/**\n * 获取最大机构数量\n */\nexport const getMaxInstitutions = (regions: RegionData[]): number => {\n  return Math.max(...regions.map(region => region.institutions.length), 1);\n};\n\n/**\n * 按地区类型分组数据\n */\nexport const groupByRegionType = (regions: RegionData[]): Record<string, RegionData[]> => {\n  return regions.reduce((groups, region) => {\n    const type = region.regionType;\n    if (!groups[type]) {\n      groups[type] = [];\n    }\n    groups[type].push(region);\n    return groups;\n  }, {} as Record<string, RegionData[]>);\n};\n\n/**\n * 计算统计数据\n */\nexport const calculateStatistics = (regions: RegionData[]): Statistics => {\n  const allInstitutions = regions.flatMap(region => region.institutions);\n  \n  const activeInstitutions = allInstitutions.filter(inst => inst.status === 'active');\n  const inactiveInstitutions = allInstitutions.filter(inst => inst.status === 'inactive');\n  \n  const regionStats = regions.reduce((stats, region) => {\n    const type = region.regionType;\n    if (!stats[type]) {\n      stats[type] = {\n        institutionCount: 0,\n        managerCount: 0\n      };\n    }\n    stats[type].institutionCount += region.institutions.length;\n    stats[type].managerCount += 1;\n    return stats;\n  }, {} as Record<string, { institutionCount: number; managerCount: number }>);\n\n  const topRegion = regions.reduce((top, region) => \n    region.institutions.length > top.institutions.length ? region : top, \n    regions[0] || { institutions: [], name: '', manager: { name: '' } }\n  );\n\n  return {\n    totalRegions: regions.length,\n    totalInstitutions: allInstitutions.length,\n    activeInstitutions: activeInstitutions.length,\n    inactiveInstitutions: inactiveInstitutions.length,\n    totalManagers: regions.length,\n    activeRegions: regions.filter(region => region.institutions.length > 0).length,\n    topRegion: {\n      name: topRegion.name,\n      institutions: { length: topRegion.institutions.length },\n      manager: { name: topRegion.manager.name }\n    },\n    regionStats\n  };\n};\n\n/**\n * 筛选机构数据\n */\nexport const filterInstitutions = (\n  institutions: Institution[],\n  filters: {\n    status?: 'active' | 'inactive';\n    dateRange?: { start: Date; end: Date };\n    searchTerm?: string;\n  }\n): Institution[] => {\n  return institutions.filter(institution => {\n    // 状态筛选\n    if (filters.status && institution.status !== filters.status) {\n      return false;\n    }\n\n    // 日期范围筛选\n    if (filters.dateRange) {\n      const establishedDate = new Date(institution.establishedDate);\n      if (establishedDate < filters.dateRange.start || establishedDate > filters.dateRange.end) {\n        return false;\n      }\n    }\n\n    // 搜索词筛选\n    if (filters.searchTerm) {\n      const searchLower = filters.searchTerm.toLowerCase();\n      const matchesName = institution.name.toLowerCase().includes(searchLower);\n      const matchesAddress = institution.address.toLowerCase().includes(searchLower);\n      if (!matchesName && !matchesAddress) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\n/**\n * 排序地区数据\n */\nexport const sortRegions = (\n  regions: RegionData[],\n  sortBy: 'name' | 'institutionCount' | 'manager',\n  order: 'asc' | 'desc' = 'asc'\n): RegionData[] => {\n  const sorted = [...regions].sort((a, b) => {\n    let comparison = 0;\n\n    switch (sortBy) {\n      case 'name':\n        comparison = a.name.localeCompare(b.name, 'zh-CN');\n        break;\n      case 'institutionCount':\n        comparison = a.institutions.length - b.institutions.length;\n        break;\n      case 'manager':\n        comparison = a.manager.name.localeCompare(b.manager.name, 'zh-CN');\n        break;\n    }\n\n    return order === 'desc' ? -comparison : comparison;\n  });\n\n  return sorted;\n};\n\n/**\n * 格式化数字显示\n */\nexport const formatNumber = (num: number): string => {\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1) + 'M';\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(1) + 'K';\n  }\n  return num.toString();\n};\n\n/**\n * 格式化日期显示\n */\nexport const formatDate = (date: Date | string): string => {\n  const d = new Date(date);\n  return d.toLocaleDateString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  });\n};\n\n/**\n * 生成唯一ID\n */\nexport const generateId = (): string => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\n/**\n * 深拷贝对象\n */\nexport const deepClone = <T>(obj: T): T => {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (obj instanceof Date) {\n    return new Date(obj.getTime()) as unknown as T;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => deepClone(item)) as unknown as T;\n  }\n\n  const cloned = {} as T;\n  Object.keys(obj).forEach(key => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (cloned as any)[key] = deepClone((obj as Record<string, unknown>)[key]);\n  });\n\n  return cloned;\n};\n\n/**\n * 防抖函数\n */\nexport const debounce = <T extends (...args: unknown[]) => unknown>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  \n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n/**\n * 节流函数\n */\nexport const throttle = <T extends (...args: unknown[]) => unknown>(\n  func: T,\n  limit: number\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n  \n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};","import React, { useState } from 'react';\nimport type { RegionData, Institution } from '@/types';\nimport { formatDate } from '@/utils/dataTransform';\nimport { getRegionThemeColor } from '@/utils/colorUtils';\n\ninterface RegionDetailModalProps {\n  region: RegionData | null;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst RegionDetailModal: React.FC<RegionDetailModalProps> = ({\n  region,\n  isOpen,\n  onClose\n}) => {\n  const [activeTab, setActiveTab] = useState<'overview' | 'institutions' | 'manager'>('overview');\n\n  if (!isOpen || !region) return null;\n\n  const themeColor = getRegionThemeColor(region.regionType);\n  const activeInstitutions = region.institutions.filter(inst => inst.status === 'active');\n  const inactiveInstitutions = region.institutions.filter(inst => inst.status === 'inactive');\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n        {/* 头部 */}\n        <div \n          className=\"px-6 py-4 text-white relative\"\n          style={{ backgroundColor: themeColor }}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-2xl font-bold\">{region.name}</h2>\n              <p className=\"text-white text-opacity-90 mt-1\">\n                {region.regionType} · {region.manager.name} 负责\n              </p>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-white hover:text-gray-200 text-2xl font-bold w-8 h-8 flex items-center justify-center rounded-full hover:bg-white hover:bg-opacity-20 transition-colors\"\n            >\n              ×\n            </button>\n          </div>\n        </div>\n\n        {/* 标签页导航 */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"flex space-x-8 px-6\">\n            {[\n              { key: 'overview', label: '概览', icon: '📊' },\n              { key: 'institutions', label: '机构列表', icon: '🏢' },\n              { key: 'manager', label: '负责人信息', icon: '👤' }\n            ].map(tab => (\n              <button\n                key={tab.key}\n                onClick={() => setActiveTab(tab.key as 'overview' | 'institutions' | 'manager')}\n                className={`py-3 px-1 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === tab.key\n                    ? 'border-feishu-accent text-feishu-accent'\n                    : 'border-transparent text-feishu-secondary hover:text-feishu-primary hover:border-gray-300'\n                }`}\n              >\n                <span className=\"mr-2\">{tab.icon}</span>\n                {tab.label}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        {/* 内容区域 */}\n        <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              {/* 统计卡片 */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {region.institutions.length}\n                  </div>\n                  <div className=\"text-sm text-blue-800\">总机构数</div>\n                </div>\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {activeInstitutions.length}\n                  </div>\n                  <div className=\"text-sm text-green-800\">活跃机构</div>\n                </div>\n                <div className=\"bg-red-50 p-4 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-red-600\">\n                    {inactiveInstitutions.length}\n                  </div>\n                  <div className=\"text-sm text-red-800\">停用机构</div>\n                </div>\n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {Math.round((activeInstitutions.length / region.institutions.length) * 100) || 0}%\n                  </div>\n                  <div className=\"text-sm text-purple-800\">活跃率</div>\n                </div>\n              </div>\n\n              {/* 最新机构 */}\n              <div>\n                <h3 className=\"text-lg font-semibold text-feishu-primary mb-3\">\n                  最新成立机构\n                </h3>\n                <div className=\"space-y-2\">\n                  {region.institutions\n                    .sort((a, b) => new Date(b.establishedDate).getTime() - new Date(a.establishedDate).getTime())\n                    .slice(0, 3)\n                    .map(institution => (\n                      <div key={institution.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                        <div>\n                          <div className=\"font-medium text-feishu-primary\">\n                            {institution.name}\n                          </div>\n                          <div className=\"text-sm text-feishu-secondary\">\n                            {institution.address}\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm text-feishu-secondary\">\n                            {formatDate(institution.establishedDate)}\n                          </div>\n                          <div className={`text-xs px-2 py-1 rounded-full ${\n                            institution.status === 'active' \n                              ? 'bg-green-100 text-green-800' \n                              : 'bg-red-100 text-red-800'\n                          }`}>\n                            {institution.status === 'active' ? '活跃' : '停用'}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'institutions' && (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-feishu-primary\">\n                  机构列表 ({region.institutions.length})\n                </h3>\n                <div className=\"flex space-x-2\">\n                  <span className=\"text-sm text-feishu-secondary\">\n                    活跃: {activeInstitutions.length} | 停用: {inactiveInstitutions.length}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                {region.institutions.map(institution => (\n                  <InstitutionCard key={institution.id} institution={institution} />\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'manager' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center text-2xl\">\n                  👤\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-xl font-semibold text-feishu-primary\">\n                    {region.manager.name}\n                  </h3>\n                  <p className=\"text-feishu-secondary mt-1\">\n                    {region.regionType}负责人\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-medium text-feishu-primary\">联系信息</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-feishu-secondary\">📞</span>\n                      <span>{region.manager.contact}</span>\n                    </div>\n                    {region.manager.email && (\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-feishu-secondary\">📧</span>\n                        <span>{region.manager.email}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-medium text-feishu-primary\">管理统计</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-feishu-secondary\">管理地区:</span>\n                      <span>{region.name}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-feishu-secondary\">机构总数:</span>\n                      <span className=\"font-semibold\">{region.institutions.length}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-feishu-secondary\">活跃机构:</span>\n                      <span className=\"text-green-600 font-semibold\">{activeInstitutions.length}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* 底部操作 */}\n        <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end\">\n          <button\n            onClick={onClose}\n            className=\"feishu-button feishu-button-primary\"\n          >\n            关闭\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 机构卡片组件\nconst InstitutionCard: React.FC<{ institution: Institution }> = ({ institution }) => {\n  return (\n    <div className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center space-x-2\">\n            <h4 className=\"font-medium text-feishu-primary\">{institution.name}</h4>\n            <span className={`text-xs px-2 py-1 rounded-full ${\n              institution.status === 'active' \n                ? 'bg-green-100 text-green-800' \n                : 'bg-red-100 text-red-800'\n            }`}>\n              {institution.status === 'active' ? '活跃' : '停用'}\n            </span>\n          </div>\n          <p className=\"text-sm text-feishu-secondary mt-1\">\n            📍 {institution.address}\n          </p>\n          <p className=\"text-sm text-feishu-secondary mt-1\">\n            📅 成立于 {formatDate(institution.establishedDate)}\n          </p>\n          {institution.description && (\n            <p className=\"text-sm text-feishu-secondary mt-2\">\n              {institution.description}\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegionDetailModal;","import React from 'react';\n\ninterface MapToolbarProps {\n  onZoomIn: () => void;\n  onZoomOut: () => void;\n  onReset: () => void;\n  onToggleFullscreen: () => void;\n  isFullscreen: boolean;\n}\n\nconst MapToolbar: React.FC<MapToolbarProps> = ({\n  onZoomIn,\n  onZoomOut,\n  onReset,\n  onToggleFullscreen,\n  isFullscreen\n}) => {\n  return (\n    <div className=\"absolute top-4 right-4 bg-white rounded-lg shadow-feishu border border-feishu-border p-2 space-y-1 z-10\">\n      <button\n        onClick={onZoomIn}\n        className=\"w-8 h-8 flex items-center justify-center hover:bg-gray-100 rounded text-feishu-primary transition-colors\"\n        title=\"放大 (+)\"\n      >\n        🔍+\n      </button>\n      <button\n        onClick={onZoomOut}\n        className=\"w-8 h-8 flex items-center justify-center hover:bg-gray-100 rounded text-feishu-primary transition-colors\"\n        title=\"缩小 (-)\"\n      >\n        🔍-\n      </button>\n      <button\n        onClick={onReset}\n        className=\"w-8 h-8 flex items-center justify-center hover:bg-gray-100 rounded text-feishu-primary transition-colors\"\n        title=\"重置视图 (R)\"\n      >\n        🏠\n      </button>\n      <div className=\"border-t border-feishu-border my-1\"></div>\n      <button\n        onClick={onToggleFullscreen}\n        className=\"w-8 h-8 flex items-center justify-center hover:bg-gray-100 rounded text-feishu-primary transition-colors\"\n        title={isFullscreen ? '退出全屏' : '全屏显示'}\n      >\n        {isFullscreen ? '⤓' : '⤢'}\n      </button>\n    </div>\n  );\n};\n\nexport default MapToolbar;","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import type { RegionData, Institution } from '@/types';\n\n/**\n * 飞书多维表格字段映射接口 - 适配用户实际字段结构\n */\ninterface BitableInstitutionRecord {\n  record_id: string;\n  fields: {\n    '机构名称': string;\n    '所属省份': string;\n    '管理区域': string;  // 用户更新后的字段名，直接对应管理区域\n    '负责人': string;    // 用户更新后的字段名，直接对应负责人\n    // 以下为可选字段，如果用户表格中没有则使用默认值\n    '机构地址'?: string;\n    '负责人联系方式'?: string;\n    '负责人邮箱'?: string;\n    '成立日期'?: string;\n    '状态'?: '活跃' | '停用';\n    '备注'?: string;\n  };\n}\n\n/**\n * 标准化后的字段接口\n */\ninterface StandardizedInstitutionRecord {\n  record_id: string;\n  fields: {\n    '机构名称': string;\n    '机构地址': string;\n    '所属省份': string;\n    '管理区域': string;\n    '负责人': string;\n    '负责人联系方式': string;\n    '负责人邮箱'?: string;\n    '成立日期': string;\n    '状态': '活跃' | '停用';\n    '备注'?: string;\n  };\n}\n\ninterface BitableManagerRecord {\n  record_id: string;\n  fields: {\n    '负责人姓名': string;\n    '管理区域': string;\n    '联系电话': string;\n    '邮箱地址'?: string;\n    '头像'?: string;\n  };\n}\n\n/**\n * 飞书多维表格服务类\n */\nexport class FeishuBitableService {\n  private appToken: string;\n  private tableId: string;\n  private accessToken: string;\n  private baseUrl = (import.meta as any).env?.DEV \n    ? '/api/feishu/open-apis/bitable/v1'  // 开发环境使用代理\n    : 'https://open.feishu.cn/open-apis/bitable/v1';  // 生产环境直接访问\n\n  constructor(appToken: string, tableId: string, accessToken: string) {\n    this.appToken = appToken;\n    this.tableId = tableId;\n    this.accessToken = accessToken;\n  }\n\n  /**\n   * 获取多维表格中的机构数据\n   */\n  async getInstitutionRecords(): Promise<BitableInstitutionRecord[]> {\n    try {\n      const response = await fetch(\n        `${this.baseUrl}/apps/${this.appToken}/tables/${this.tableId}/records?page_size=100`,\n        {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${this.accessToken}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`获取多维表格数据失败: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return data.data.items || [];\n    } catch (error) {\n      console.error('获取多维表格数据失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 检查记录是否为有效记录（非空记录）\n   */\n  private isValidRecord(record: BitableInstitutionRecord): boolean {\n    const fields = record.fields;\n    // 检查关键字段是否存在且非空\n    return !!(\n      fields['机构名称'] && fields['机构名称'].trim() !== '' &&\n      fields['所属省份'] && fields['所属省份'].trim() !== '' &&\n      fields['管理区域'] && fields['管理区域'].trim() !== ''\n    );\n  }\n\n  /**\n   * 将用户的实际字段结构标准化为统一格式\n   */\n  private standardizeRecord(record: BitableInstitutionRecord): StandardizedInstitutionRecord {\n    const fields = record.fields;\n    \n    return {\n      record_id: record.record_id,\n      fields: {\n        '机构名称': fields['机构名称'] || '未命名机构',\n        '机构地址': fields['机构地址'] || `${fields['所属省份'] || '未知省份'}地区`,\n        '所属省份': fields['所属省份'] || '未知省份',\n        '管理区域': fields['管理区域'] || '未分类',  // 直接使用用户的\"管理区域\"字段\n        '负责人': fields['负责人'] || '未指定',      // 直接使用用户的\"负责人\"字段\n        '负责人联系方式': fields['负责人联系方式'] || '联系方式待补充',\n        '负责人邮箱': fields['负责人邮箱'] || '',\n        '成立日期': fields['成立日期'] || '2023-01-01',\n        '状态': fields['状态'] || '活跃',\n        '备注': fields['备注'] || ''\n      }\n    };\n  }\n\n  /**\n   * 获取负责人数据\n   */\n  async getManagerRecords(): Promise<BitableManagerRecord[]> {\n    // 假设负责人数据在另一个表格中\n    // 实际使用时需要传入对应的 tableId\n    return [];\n  }\n\n  /**\n   * 将多维表格数据转换为地图数据格式\n   */\n  transformToRegionData(\n    institutionRecords: BitableInstitutionRecord[],\n    managerRecords: BitableManagerRecord[] = [],\n    regionMapping?: Record<string, string[]> | null\n  ): RegionData[] {\n    // 先过滤出有效记录，然后标准化\n    const validRecords = institutionRecords.filter(record => this.isValidRecord(record));\n    const standardizedRecords = validRecords.map(record => this.standardizeRecord(record));\n    \n    console.log(`📊 数据处理: 原始${institutionRecords.length}条 → 有效${validRecords.length}条 → 标准化${standardizedRecords.length}条`);\n    \n    // 按省份分组机构数据\n    const institutionsByProvince = standardizedRecords.reduce((acc, record) => {\n      const province = record.fields['所属省份'];\n      if (!acc[province]) {\n        acc[province] = [];\n      }\n      acc[province].push(record);\n      return acc;\n    }, {} as Record<string, StandardizedInstitutionRecord[]>);\n\n    // 按管理区域分组负责人\n    const managersByRegion = managerRecords.reduce((acc, record) => {\n      const region = record.fields['管理区域'];\n      acc[region] = record;\n      return acc;\n    }, {} as Record<string, BitableManagerRecord>);\n\n    // 转换为 RegionData 格式\n    const regions: RegionData[] = [];\n\n    Object.entries(institutionsByProvince).forEach(([province, institutions]) => {\n      if (institutions.length === 0 || !province || province === '未知省份') return;\n\n      // 获取该省份的管理区域\n      let regionType: string;\n      \n      if (regionMapping) {\n        // 使用自定义区域映射\n        regionType = Object.entries(regionMapping).find(([, provinces]) => \n          provinces.includes(province)\n        )?.[0] || '未分配';\n      } else {\n        // 使用多维表格中的管理区域字段（已标准化）\n        regionType = institutions[0].fields['管理区域'];\n      }\n      \n      // 获取负责人信息\n      const managerRecord = managersByRegion[regionType];\n      const defaultManager = institutions[0].fields['负责人'];\n\n      // 转换机构数据\n      const transformedInstitutions: Institution[] = institutions.map(inst => ({\n        id: inst.record_id,\n        name: inst.fields['机构名称'],\n        address: inst.fields['机构地址'],\n        establishedDate: new Date(inst.fields['成立日期']),\n        status: inst.fields['状态'] === '活跃' ? 'active' : 'inactive',\n        regionId: province,\n        description: inst.fields['备注']\n      }));\n\n      // 创建地区数据\n      const regionData: RegionData = {\n        id: province,\n        name: province,\n        regionType: regionType,\n        manager: {\n          id: managerRecord?.record_id || `manager_${regionType}`,\n          name: managerRecord?.fields['负责人姓名'] || defaultManager,\n          contact: managerRecord?.fields['联系电话'] || institutions[0].fields['负责人联系方式'],\n          email: managerRecord?.fields['邮箱地址'] || institutions[0].fields['负责人邮箱'],\n          avatar: managerRecord?.fields['头像']\n        },\n        institutions: transformedInstitutions\n      };\n\n      regions.push(regionData);\n    });\n\n    return regions;\n  }\n\n  /**\n   * 实时监听多维表格数据变化\n   */\n  async subscribeToChanges(callback: (regions: RegionData[]) => void): Promise<void> {\n    // 实现 WebSocket 或轮询机制来监听数据变化\n    const pollInterval = 30000; // 30秒轮询一次\n\n    const poll = async () => {\n      try {\n        const institutionRecords = await this.getInstitutionRecords();\n        const managerRecords = await this.getManagerRecords();\n        const regions = this.transformToRegionData(institutionRecords, managerRecords);\n        callback(regions);\n      } catch (error) {\n        console.error('轮询数据失败:', error);\n      }\n    };\n\n    // 立即执行一次\n    await poll();\n\n    // 设置定时轮询\n    setInterval(poll, pollInterval);\n  }\n\n  /**\n   * 更新多维表格中的机构状态\n   */\n  async updateInstitutionStatus(recordId: string, status: '活跃' | '停用'): Promise<void> {\n    try {\n      const response = await fetch(\n        `${this.baseUrl}/apps/${this.appToken}/tables/${this.tableId}/records/${recordId}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${this.accessToken}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            fields: {\n              '状态': status\n            }\n          })\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`更新记录失败: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error('更新多维表格记录失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 在多维表格中添加新机构\n   */\n  async addInstitution(institution: {\n    name: string;\n    address: string;\n    province: string;\n    regionType: string;\n    manager: string;\n    contact: string;\n    email?: string;\n    establishedDate: Date;\n    status: '活跃' | '停用';\n    description?: string;\n  }): Promise<string> {\n    try {\n      const response = await fetch(\n        `${this.baseUrl}/apps/${this.appToken}/tables/${this.tableId}/records`,\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${this.accessToken}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            fields: {\n              '机构名称': institution.name,\n              '机构地址': institution.address,\n              '所属省份': institution.province,\n              '管理区域': institution.regionType,\n              '负责人': institution.manager,\n              '负责人联系方式': institution.contact,\n              '负责人邮箱': institution.email,\n              '成立日期': institution.establishedDate.toISOString().split('T')[0],\n              '状态': institution.status,\n              '备注': institution.description\n            }\n          })\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`添加记录失败: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return data.data.record.record_id;\n    } catch (error) {\n      console.error('添加多维表格记录失败:', error);\n      throw error;\n    }\n  }\n}\n\n/**\n * 创建多维表格服务实例的工厂函数\n */\nexport function createBitableService(config: {\n  appToken: string;\n  tableId: string;\n  accessToken: string;\n}): FeishuBitableService {\n  return new FeishuBitableService(config.appToken, config.tableId, config.accessToken);\n}\n\n/**\n * 多维表格配置示例\n */\nexport const BITABLE_CONFIG_EXAMPLE = {\n  // 多维表格应用 Token（从多维表格 URL 中获取）\n  appToken: 'bascnCMII2ORuAUfTm9IZjXMEuD',\n  \n  // 表格 ID（从多维表格 URL 中获取）\n  tableId: 'tblxI2tWaxP5dG7p',\n  \n  // 访问令牌（通过飞书开放平台获取）\n  accessToken: 'your_access_token_here',\n  \n  // 字段映射说明\n  fieldMapping: {\n    '机构名称': '机构的名称',\n    '机构地址': '机构的详细地址',\n    '所属省份': '机构所在的省份（如：上海市、广东省）',\n    '管理区域': '管理区域类型（华东、华南、华西、华北等）',\n    '负责人': '该机构的负责人姓名',\n    '负责人联系方式': '负责人的电话号码',\n    '负责人邮箱': '负责人的邮箱地址（可选）',\n    '成立日期': '机构成立日期（YYYY-MM-DD 格式）',\n    '状态': '机构状态（活跃 或 停用）',\n    '备注': '额外的备注信息（可选）'\n  }\n};","import { create } from 'zustand';\nimport { devtools, persist } from 'zustand/middleware';\nimport type { RegionData, ColorScheme, LoadingState, FilterOptions, Statistics, UserProfile } from '@/types';\nimport { mockRegionData } from '@/data/chinaMap';\nimport { updateColorSchemeMaxValues, calculateRegionColor } from '@/utils/colorUtils';\nimport { calculateStatistics, sortRegions } from '@/utils/dataTransform';\nimport { FeishuBitableService } from '@/services/feishuBitableService';\n\n// 应用自定义区域映射的辅助函数\nconst applyRegionMapping = (regions: RegionData[], regionMapping: Record<string, string[]>): RegionData[] => {\n  return regions.map(region => {\n    // 根据省份名称查找对应的管理区域\n    const newRegionType = Object.entries(regionMapping).find(([, provinces]) => \n      provinces.includes(region.name)\n    )?.[0];\n    \n    if (newRegionType && newRegionType !== region.regionType) {\n      return {\n        ...region,\n        regionType: newRegionType\n      };\n    }\n    \n    return region;\n  });\n};\n\ninterface MapState {\n  // 数据状态\n  regions: RegionData[];\n  colorSchemes: Record<string, ColorScheme>;\n  statistics: Statistics | null;\n  \n  // UI 状态\n  selectedRegion: RegionData | null;\n  hoveredRegion: string | null;\n  showControls: boolean;\n  showDetailModal: boolean;\n  isFullscreen: boolean;\n  \n  // 筛选和搜索\n  filterOptions: FilterOptions;\n  searchTerm: string;\n  sortBy: 'name' | 'institutionCount' | 'manager';\n  sortOrder: 'asc' | 'desc';\n  \n  // 加载状态\n  loadingState: LoadingState;\n  \n  // 用户信息\n  userProfile: UserProfile | null;\n  \n  // 多维表格配置\n  bitableConfig: {\n    appToken: string;\n    tableId: string;\n    accessToken: string;\n  } | null;\n  \n  // 数据源类型\n  dataSource: 'mock' | 'bitable';\n  \n  // 自定义区域映射\n  regionMapping: Record<string, string[]> | null;\n}\n\ninterface MapActions {\n  // 数据操作\n  loadRegions: () => Promise<void>;\n  loadFromBitable: (config: { appToken: string; tableId: string; accessToken: string }) => Promise<void>;\n  updateRegion: (regionId: string, updates: Partial<RegionData>) => void;\n  refreshData: () => Promise<void>;\n  switchDataSource: (source: 'mock' | 'bitable') => void;\n  \n  // UI 操作\n  setSelectedRegion: (regionId: string | null) => void;\n  setHoveredRegion: (regionId: string | null) => void;\n  toggleControls: () => void;\n  toggleDetailModal: (show?: boolean) => void;\n  toggleFullscreen: () => void;\n  \n  // 筛选和搜索\n  setFilterOptions: (options: Partial<FilterOptions>) => void;\n  setSearchTerm: (term: string) => void;\n  setSorting: (sortBy: MapState['sortBy'], order?: MapState['sortOrder']) => void;\n  clearFilters: () => void;\n  \n  // 计算方法\n  getFilteredRegions: () => RegionData[];\n  getRegionColor: (regionType: string, institutionCount: number) => string;\n  \n  // 用户操作\n  setUserProfile: (profile: UserProfile | null) => void;\n  \n  // 区域映射管理\n  setRegionMapping: (mapping: Record<string, string[]>) => void;\n  getProvinceRegion: (province: string) => string | null;\n  \n  // 错误处理\n  setError: (error: string | null) => void;\n  clearError: () => void;\n}\n\ntype MapStore = MapState & MapActions;\n\nconst initialState: MapState = {\n  regions: [],\n  colorSchemes: {},\n  statistics: null,\n  selectedRegion: null,\n  hoveredRegion: null,\n  showControls: true,\n  showDetailModal: false,\n  isFullscreen: false,\n  filterOptions: {},\n  searchTerm: '',\n  sortBy: 'name',\n  sortOrder: 'asc',\n  loadingState: {\n    isLoading: false,\n    error: null,\n    lastUpdated: null\n  },\n  userProfile: null,\n  bitableConfig: {\n    appToken: 'PGuTbyauXavdl7s8Jpec2lUAnah',\n    tableId: 'tblLawFGl4bUcqHA',\n    accessToken: 't-g10495bGB7VY3MTCZ2IWG6WD7DUIX74OD2RLW26I'\n  },\n  dataSource: 'bitable',  // 默认使用多维表格数据源\n  regionMapping: null\n};\n\nexport const useMapStore = create<MapStore>()(\n  devtools(\n    persist(\n      (set, get) => ({\n        ...initialState,\n\n        // 数据操作\n        loadRegions: async () => {\n          const { dataSource, bitableConfig, regionMapping } = get();\n          \n          set((state) => ({\n            loadingState: { ...state.loadingState, isLoading: true, error: null }\n          }));\n\n          try {\n            let regions: RegionData[];\n\n            if (dataSource === 'bitable' && bitableConfig) {\n              // 从多维表格加载数据\n              const bitableService = new FeishuBitableService(\n                bitableConfig.appToken,\n                bitableConfig.tableId,\n                bitableConfig.accessToken\n              );\n              \n              const institutionRecords = await bitableService.getInstitutionRecords();\n              const managerRecords = await bitableService.getManagerRecords();\n              regions = bitableService.transformToRegionData(institutionRecords, managerRecords, regionMapping);\n            } else {\n              // 使用模拟数据，如果有自定义区域映射则应用\n              await new Promise(resolve => setTimeout(resolve, 1000));\n              regions = regionMapping ? applyRegionMapping(mockRegionData, regionMapping) : mockRegionData;\n            }\n            \n            const colorSchemes = updateColorSchemeMaxValues(regions);\n            const statistics = calculateStatistics(regions);\n\n            set({\n              regions,\n              colorSchemes,\n              statistics,\n              loadingState: {\n                isLoading: false,\n                error: null,\n                lastUpdated: Date.now()\n              }\n            });\n          } catch (error) {\n            set((state) => ({\n              loadingState: {\n                ...state.loadingState,\n                isLoading: false,\n                error: {\n                  code: 'LOAD_ERROR',\n                  message: error instanceof Error ? error.message : '加载数据失败',\n                  details: error instanceof Error ? { message: error.message } : undefined,\n                  timestamp: Date.now()\n                }\n              }\n            }));\n          }\n        },\n\n        loadFromBitable: async (config) => {\n          set({\n            bitableConfig: config,\n            dataSource: 'bitable'\n          });\n          \n          const { loadRegions } = get();\n          await loadRegions();\n        },\n\n        updateRegion: (regionId: string, updates: Partial<RegionData>) => {\n          set((state) => {\n            const updatedRegions = state.regions.map(region =>\n              region.id === regionId ? { ...region, ...updates } : region\n            );\n            \n            return {\n              regions: updatedRegions,\n              statistics: calculateStatistics(updatedRegions),\n              colorSchemes: updateColorSchemeMaxValues(updatedRegions)\n            };\n          });\n        },\n\n        refreshData: async () => {\n          const { loadRegions } = get();\n          await loadRegions();\n        },\n\n        switchDataSource: (source) => {\n          set({ dataSource: source });\n        },\n\n        // UI 操作\n        setSelectedRegion: (regionId: string | null) => {\n          const region = regionId ? get().regions.find(r => r.id === regionId || r.name === regionId) : null;\n          set({ selectedRegion: region });\n        },\n\n        setHoveredRegion: (regionId: string | null) => {\n          set({ hoveredRegion: regionId });\n        },\n\n        toggleControls: () => {\n          set((state) => ({ showControls: !state.showControls }));\n        },\n\n        toggleDetailModal: (show?: boolean) => {\n          set((state) => ({ \n            showDetailModal: show !== undefined ? show : !state.showDetailModal \n          }));\n        },\n\n        toggleFullscreen: () => {\n          set((state) => ({ isFullscreen: !state.isFullscreen }));\n        },\n\n        // 筛选和搜索\n        setFilterOptions: (options: Partial<FilterOptions>) => {\n          set((state) => ({\n            filterOptions: { ...state.filterOptions, ...options }\n          }));\n        },\n\n        setSearchTerm: (term: string) => {\n          set({ searchTerm: term });\n        },\n\n        setSorting: (sortBy: MapState['sortBy'], order: MapState['sortOrder'] = 'asc') => {\n          set({ sortBy, sortOrder: order });\n        },\n\n        clearFilters: () => {\n          set({\n            filterOptions: {},\n            searchTerm: '',\n            sortBy: 'name',\n            sortOrder: 'asc'\n          });\n        },\n\n        // 计算方法\n        getFilteredRegions: () => {\n          const { regions, filterOptions, searchTerm, sortBy, sortOrder } = get();\n          \n          let filtered = regions;\n\n          // 应用搜索\n          if (searchTerm) {\n            filtered = filtered.filter(region =>\n              region.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n              region.manager.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n              region.regionType.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n          }\n\n          // 应用筛选\n          if (filterOptions.regionTypes && filterOptions.regionTypes.length > 0) {\n            filtered = filtered.filter(region =>\n              filterOptions.regionTypes!.includes(region.regionType)\n            );\n          }\n\n          if (filterOptions.managerIds && filterOptions.managerIds.length > 0) {\n            filtered = filtered.filter(region =>\n              filterOptions.managerIds!.includes(region.manager.id)\n            );\n          }\n\n          if (filterOptions.institutionStatus && filterOptions.institutionStatus.length > 0) {\n            filtered = filtered.filter(region =>\n              region.institutions.some(inst =>\n                filterOptions.institutionStatus!.includes(inst.status)\n              )\n            );\n          }\n\n          if (filterOptions.dateRange) {\n            filtered = filtered.filter(region =>\n              region.institutions.some(inst => {\n                const date = new Date(inst.establishedDate);\n                return date >= filterOptions.dateRange!.start && date <= filterOptions.dateRange!.end;\n              })\n            );\n          }\n\n          // 应用排序\n          return sortRegions(filtered, sortBy, sortOrder);\n        },\n\n        getRegionColor: (regionType: string, institutionCount: number) => {\n          const { colorSchemes } = get();\n          const maxCount = Math.max(...Object.values(colorSchemes).map(scheme => scheme.maxInstitutions), 1);\n          return calculateRegionColor(regionType, institutionCount, maxCount);\n        },\n\n        // 用户操作\n        setUserProfile: (profile: UserProfile | null) => {\n          set({ userProfile: profile });\n        },\n\n        // 错误处理\n        setError: (error: string | null) => {\n          set((state) => ({\n            loadingState: {\n              ...state.loadingState,\n              error: error ? {\n                code: 'GENERAL_ERROR',\n                message: error,\n                details: undefined,\n                timestamp: Date.now()\n              } : null\n            }\n          }));\n        },\n\n        clearError: () => {\n          set((state) => ({\n            loadingState: { ...state.loadingState, error: null }\n          }));\n        },\n\n        // 区域映射管理\n        setRegionMapping: (mapping: Record<string, string[]>) => {\n          set({ regionMapping: mapping });\n        },\n\n        getProvinceRegion: (province: string) => {\n          const { regionMapping } = get();\n          if (!regionMapping) return null;\n          \n          for (const [regionName, provinces] of Object.entries(regionMapping)) {\n            if (provinces.includes(province)) {\n              return regionName;\n            }\n          }\n          return null;\n        }\n      }),\n      {\n        name: 'map-store',\n        partialize: (state) => ({\n          // 只持久化部分状态\n          showControls: state.showControls,\n          filterOptions: state.filterOptions,\n          sortBy: state.sortBy,\n          sortOrder: state.sortOrder,\n          userProfile: state.userProfile,\n          regionMapping: state.regionMapping\n        })\n      }\n    ),\n    {\n      name: 'map-store'\n    }\n  )\n);\n\n// 选择器 hooks\nexport const useRegions = () => useMapStore((state) => state.regions);\nexport const useSelectedRegion = () => useMapStore((state) => state.selectedRegion);\nexport const useLoadingState = () => useMapStore((state) => state.loadingState);\nexport const useStatistics = () => useMapStore((state) => state.statistics);\nexport const useFilteredRegions = () => useMapStore((state) => state.getFilteredRegions());\nexport const useUIState = () => useMapStore((state) => ({\n  showControls: state.showControls,\n  showDetailModal: state.showDetailModal,\n  isFullscreen: state.isFullscreen,\n  hoveredRegion: state.hoveredRegion\n}));\n\n// 操作 hooks\nexport const useMapActions = () => useMapStore((state) => ({\n  loadRegions: state.loadRegions,\n  setSelectedRegion: state.setSelectedRegion,\n  setHoveredRegion: state.setHoveredRegion,\n  toggleControls: state.toggleControls,\n  toggleDetailModal: state.toggleDetailModal,\n  toggleFullscreen: state.toggleFullscreen,\n  setFilterOptions: state.setFilterOptions,\n  setSearchTerm: state.setSearchTerm,\n  setSorting: state.setSorting,\n  clearFilters: state.clearFilters,\n  refreshData: state.refreshData,\n  setError: state.setError,\n  clearError: state.clearError\n}));","import React from 'react';\nimport MapRenderer from './MapRenderer';\nimport MapControls from './MapControls';\nimport MapLegend from './MapLegend';\nimport RegionDetailModal from './RegionDetailModal';\nimport MapToolbar from './MapToolbar';\nimport type { MapDataPoint, MapEvent, RegionData } from '@/types';\nimport { calculateRegionColor, getMaxInstitutionCount, updateColorSchemeMaxValues } from '@/utils/colorUtils';\nimport { useSelectedRegion, useUIState, useMapActions, useStatistics } from '@/stores/mapStore';\n\ninterface MapContainerProps {\n  regions: RegionData[];\n  loading?: boolean;\n  onRegionSelect?: (regionId: string) => void;\n}\n\nconst MapContainer: React.FC<MapContainerProps> = ({\n  regions,\n  loading = false,\n  onRegionSelect\n}) => {\n  // 使用状态管理\n  const selectedRegion = useSelectedRegion();\n  const { showControls, showDetailModal, isFullscreen, hoveredRegion } = useUIState();\n  const statistics = useStatistics();\n  const { \n    setSelectedRegion, \n    setHoveredRegion, \n    toggleControls, \n    toggleDetailModal, \n    toggleFullscreen \n  } = useMapActions();\n\n  // 获取全局最大机构数量\n  const maxInstitutionCount = getMaxInstitutionCount(regions);\n  \n  // 更新颜色方案\n  const updatedColorSchemes = updateColorSchemeMaxValues(regions);\n\n  // 转换数据为地图格式\n  const mapData: MapDataPoint[] = regions.map(region => ({\n    name: region.name,\n    value: region.institutions.length,\n    regionType: region.regionType,\n    manager: region.manager.name,\n    itemStyle: {\n      color: calculateRegionColor(region.regionType, region.institutions.length, maxInstitutionCount)\n    }\n  }));\n\n  // 处理地图事件\n  const handleMapEvent = (event: MapEvent) => {\n    switch (event.type) {\n      case 'click':\n        setSelectedRegion(event.data.regionId);\n        toggleDetailModal(true);\n        onRegionSelect?.(event.data.regionId);\n        break;\n      case 'hover':\n        setHoveredRegion(event.data.regionId);\n        break;\n    }\n  };\n\n  // 地图工具栏操作\n  const handleZoomIn = () => {\n    // 这些操作将通过 ref 传递给 MapRenderer\n    console.log('Zoom in');\n  };\n\n  const handleZoomOut = () => {\n    console.log('Zoom out');\n  };\n\n  const handleReset = () => {\n    console.log('Reset view');\n  };\n\n  // 计算统计数据（如果没有从store获取到）\n  const localStatistics = statistics || {\n    totalRegions: regions.length,\n    totalInstitutions: regions.reduce((sum, region) => sum + region.institutions.length, 0),\n    activeRegions: regions.filter(region => region.institutions.length > 0).length,\n    topRegion: regions.reduce((top, region) => \n      region.institutions.length > top.institutions.length ? region : top, \n      regions[0] || { institutions: [], name: '', manager: { name: '' } }\n    )\n  };\n\n  return (\n    <div className=\"relative w-full h-full bg-white rounded-lg shadow-feishu\">\n      {/* 地图头部 */}\n      <div className=\"flex items-center justify-between p-4 border-b border-feishu-border\">\n        <div>\n          <h2 className=\"text-lg font-semibold text-feishu-primary\">\n            中国地图仪表盘\n          </h2>\n          <p className=\"text-sm text-feishu-secondary mt-1\">\n            共 {statistics?.totalRegions || regions.length} 个地区，{statistics?.totalInstitutions || regions.reduce((sum, region) => sum + region.institutions.length, 0)} 家机构\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={toggleControls}\n            className=\"feishu-button feishu-button-secondary text-sm\"\n          >\n            {showControls ? '隐藏控制' : '显示控制'}\n          </button>\n        </div>\n      </div>\n\n      {/* 地图主体 */}\n      <div className=\"relative flex h-[700px]\">\n        {/* 地图渲染区域 */}\n        <div className=\"flex-1 relative\">\n          <MapRenderer\n            data={mapData}\n            onMapEvent={handleMapEvent}\n            loading={loading}\n            className=\"w-full h-full\"\n          />\n          \n          {/* 地图工具栏 */}\n          <MapToolbar\n            onZoomIn={handleZoomIn}\n            onZoomOut={handleZoomOut}\n            onReset={handleReset}\n            onToggleFullscreen={toggleFullscreen}\n            isFullscreen={isFullscreen}\n          />\n          \n          {/* 悬停提示 */}\n          {hoveredRegion && !showDetailModal && (\n            <div className=\"absolute top-4 left-4 bg-white rounded-lg shadow-feishu border border-feishu-border p-3 z-10\">\n              <div className=\"text-sm\">\n                <div className=\"font-medium text-feishu-primary\">\n                  {hoveredRegion}\n                </div>\n                <div className=\"text-feishu-secondary\">\n                  点击查看详细信息\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* 加载遮罩 */}\n          {loading && (\n            <div className=\"absolute inset-0 bg-white bg-opacity-80 flex items-center justify-center\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-feishu-accent\"></div>\n                <span className=\"text-feishu-secondary\">加载地图数据...</span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* 控制面板 */}\n        {showControls && (\n          <div className=\"w-80 border-l border-feishu-border bg-feishu-background\">\n            <MapControls\n              regions={regions}\n              selectedRegion={selectedRegion?.name || null}\n              onRegionSelect={(regionId) => setSelectedRegion(regionId)}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* 地图图例 */}\n      <div className=\"p-4 border-t border-feishu-border\">\n        <MapLegend\n          colorSchemes={Object.keys(regions.reduce((acc, region) => {\n            acc[region.regionType] = true;\n            return acc;\n          }, {} as Record<string, boolean>))}\n          statistics={localStatistics}\n          updatedColorSchemes={updatedColorSchemes}\n        />\n      </div>\n\n      {/* 详细信息弹窗 */}\n      <RegionDetailModal\n        region={selectedRegion}\n        isOpen={showDetailModal}\n        onClose={() => {\n          toggleDetailModal(false);\n          setSelectedRegion(null);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MapContainer;","import React, { useState } from 'react';\nimport { useMapStore } from '@/stores/mapStore';\n\ninterface DataSourceConfigProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst DataSourceConfig: React.FC<DataSourceConfigProps> = ({ isOpen, onClose }) => {\n  const { dataSource, bitableConfig, loadFromBitable, switchDataSource } = useMapStore();\n  \n  const [formData, setFormData] = useState({\n    appToken: bitableConfig?.appToken || 'PGuTbyauXavdl7s8Jpec2lUAnah',\n    tableId: bitableConfig?.tableId || 'tblLawFGl4bUcqHA',\n    accessToken: bitableConfig?.accessToken || 't-g10495bGB7VY3MTCZ2IWG6WD7DUIX74OD2RLW26I'\n  });\n  \n  const [loading, setLoading] = useState(false);\n\n  if (!isOpen) return null;\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      await loadFromBitable(formData);\n      onClose();\n    } catch (error) {\n      console.error('连接多维表格失败:', error);\n      alert('连接多维表格失败，请检查配置信息');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSwitchToMock = () => {\n    switchDataSource('mock');\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-hidden\">\n        {/* 头部 */}\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-bold text-feishu-primary\">数据源配置</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600 text-2xl font-bold\"\n            >\n              ×\n            </button>\n          </div>\n        </div>\n\n        {/* 内容 */}\n        <div className=\"p-6\">\n          <div className=\"space-y-6\">\n            {/* 当前数据源状态 */}\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-blue-600\">📊</span>\n                <div>\n                  <div className=\"font-medium text-blue-800\">\n                    当前数据源: {dataSource === 'bitable' ? '飞书多维表格' : '演示数据'}\n                  </div>\n                  {dataSource === 'bitable' && bitableConfig && (\n                    <div className=\"text-sm text-blue-600 mt-1\">\n                      表格ID: {bitableConfig.tableId}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* 数据源选择 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-feishu-primary\">选择数据源</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {/* 演示数据 */}\n                <div className=\"border border-gray-200 rounded-lg p-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center\">\n                      🎭\n                    </div>\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-medium text-feishu-primary\">演示数据</h4>\n                      <p className=\"text-sm text-feishu-secondary\">使用内置的示例数据</p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={handleSwitchToMock}\n                    className=\"w-full mt-3 feishu-button feishu-button-secondary\"\n                    disabled={dataSource === 'mock'}\n                  >\n                    {dataSource === 'mock' ? '当前使用' : '切换到演示数据'}\n                  </button>\n                </div>\n\n                {/* 多维表格 */}\n                <div className=\"border border-gray-200 rounded-lg p-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      📋\n                    </div>\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-medium text-feishu-primary\">飞书多维表格</h4>\n                      <p className=\"text-sm text-feishu-secondary\">连接真实的业务数据</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 多维表格配置表单 */}\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-feishu-primary\">多维表格配置</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-feishu-primary mb-1\">\n                    应用 Token (App Token)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.appToken}\n                    onChange={(e) => setFormData({ ...formData, appToken: e.target.value })}\n                    placeholder=\"bascnCMII2ORuAUfTm9IZjXMEuD\"\n                    className=\"w-full px-3 py-2 border border-feishu-border rounded-md focus:outline-none focus:ring-2 focus:ring-feishu-accent focus:border-transparent\"\n                    required\n                  />\n                  <p className=\"text-xs text-feishu-secondary mt-1\">\n                    从多维表格 URL 中获取，格式如：https://example.feishu.cn/base/<strong>bascnCMII2ORuAUfTm9IZjXMEuD</strong>\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-feishu-primary mb-1\">\n                    表格 ID (Table ID)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.tableId}\n                    onChange={(e) => setFormData({ ...formData, tableId: e.target.value })}\n                    placeholder=\"tblxI2tWaxP5dG7p\"\n                    className=\"w-full px-3 py-2 border border-feishu-border rounded-md focus:outline-none focus:ring-2 focus:ring-feishu-accent focus:border-transparent\"\n                    required\n                  />\n                  <p className=\"text-xs text-feishu-secondary mt-1\">\n                    从表格 URL 中获取，或在表格设置中查看\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-feishu-primary mb-1\">\n                    访问令牌 (Access Token)\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={formData.accessToken}\n                    onChange={(e) => setFormData({ ...formData, accessToken: e.target.value })}\n                    placeholder=\"请输入访问令牌\"\n                    className=\"w-full px-3 py-2 border border-feishu-border rounded-md focus:outline-none focus:ring-2 focus:ring-feishu-accent focus:border-transparent\"\n                    required\n                  />\n                  <p className=\"text-xs text-feishu-secondary mt-1\">\n                    通过飞书开放平台获取的访问令牌\n                  </p>\n                </div>\n              </div>\n\n              {/* 字段映射说明 */}\n              <div className=\"bg-green-50 p-4 rounded-lg\">\n                <h4 className=\"font-medium text-green-800 mb-2\">✅ 已适配你的字段结构</h4>\n                <div className=\"text-sm text-green-700 space-y-1\">\n                  <div>• <strong>机构名称</strong>: ✅ 完全匹配</div>\n                  <div>• <strong>所属省份</strong>: ✅ 完全匹配</div>\n                  <div>• <strong>所属区域</strong>: ✅ 映射为管理区域</div>\n                  <div>• <strong>管理人</strong>: ✅ 映射为负责人</div>\n                  <div>• <strong>机构地址</strong>: 🔧 自动生成（省份+地区）</div>\n                  <div>• <strong>联系方式</strong>: 🔧 使用默认值</div>\n                  <div>• <strong>成立日期</strong>: 🔧 使用默认值</div>\n                  <div>• <strong>状态</strong>: 🔧 默认为活跃</div>\n                </div>\n                <div className=\"mt-2 text-xs text-green-600\">\n                  🎉 你的多维表格已完美适配，可以直接使用！\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3\">\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className=\"flex-1 feishu-button feishu-button-primary\"\n                >\n                  {loading ? '连接中...' : '连接多维表格'}\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={onClose}\n                  className=\"feishu-button feishu-button-secondary\"\n                >\n                  取消\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceConfig;","import React, { useState } from 'react';\nimport { useMapStore } from '@/stores/mapStore';\n\ninterface RegionMappingConfigProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\n// 中国所有省份列表\nconst ALL_PROVINCES = [\n  '北京市', '上海市', '天津市', '重庆市',\n  '河北省', '山西省', '辽宁省', '吉林省', '黑龙江省',\n  '江苏省', '浙江省', '安徽省', '福建省', '江西省', '山东省',\n  '河南省', '湖北省', '湖南省', '广东省', '海南省',\n  '四川省', '贵州省', '云南省', '陕西省', '甘肃省', '青海省',\n  '台湾省', '内蒙古自治区', '广西壮族自治区', '西藏自治区',\n  '宁夏回族自治区', '新疆维吾尔自治区', '香港特别行政区', '澳门特别行政区'\n];\n\n// 默认管理区域配置\nconst DEFAULT_REGION_MAPPING = {\n  '华东': ['上海市', '江苏省', '浙江省', '安徽省', '福建省', '江西省', '山东省'],\n  '华南': ['广东省', '广西壮族自治区', '海南省', '香港特别行政区', '澳门特别行政区'],\n  '华西': ['四川省', '贵州省', '云南省', '西藏自治区'],\n  '华北': ['北京市', '天津市', '河北省', '山西省', '内蒙古自治区'],\n  '华中': ['河南省', '湖北省', '湖南省'],\n  '东北': ['辽宁省', '吉林省', '黑龙江省'],\n  '西北': ['陕西省', '甘肃省', '青海省', '宁夏回族自治区', '新疆维吾尔自治区'],\n  '其他': ['台湾省']\n};\n\nconst RegionMappingConfig: React.FC<RegionMappingConfigProps> = ({ isOpen, onClose }) => {\n  const { regionMapping, setRegionMapping } = useMapStore();\n  \n  const [localMapping, setLocalMapping] = useState<Record<string, string[]>>(\n    regionMapping || DEFAULT_REGION_MAPPING\n  );\n  \n  const [newRegionName, setNewRegionName] = useState('');\n\n\n  if (!isOpen) return null;\n\n  // 获取已分配的省份\n  const assignedProvinces = Object.values(localMapping).flat();\n  \n  // 获取未分配的省份\n  const unassignedProvinces = ALL_PROVINCES.filter(\n    province => !assignedProvinces.includes(province)\n  );\n\n  // 添加新的管理区域\n  const handleAddRegion = () => {\n    if (newRegionName.trim() && !localMapping[newRegionName.trim()]) {\n      setLocalMapping({\n        ...localMapping,\n        [newRegionName.trim()]: []\n      });\n      setNewRegionName('');\n    }\n  };\n\n  // 删除管理区域\n  const handleDeleteRegion = (regionName: string) => {\n    const newMapping = { ...localMapping };\n    delete newMapping[regionName];\n    setLocalMapping(newMapping);\n  };\n\n  // 将省份添加到管理区域\n  const handleAddProvinceToRegion = (regionName: string, province: string) => {\n    // 先从其他区域移除该省份\n    const newMapping = { ...localMapping };\n    Object.keys(newMapping).forEach(region => {\n      newMapping[region] = newMapping[region].filter((p: string) => p !== province);\n    });\n    \n    // 添加到目标区域\n    newMapping[regionName] = [...newMapping[regionName], province];\n    setLocalMapping(newMapping);\n  };\n\n  // 从管理区域移除省份\n  const handleRemoveProvinceFromRegion = (regionName: string, province: string) => {\n    setLocalMapping({\n      ...localMapping,\n      [regionName]: localMapping[regionName].filter((p: string) => p !== province)\n    });\n  };\n\n  // 保存配置\n  const handleSave = () => {\n    setRegionMapping(localMapping);\n    onClose();\n  };\n\n  // 重置为默认配置\n  const handleReset = () => {\n    setLocalMapping(DEFAULT_REGION_MAPPING);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">\n        {/* 头部 */}\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-bold text-feishu-primary\">管理区域配置</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600 text-2xl font-bold\"\n            >\n              ×\n            </button>\n          </div>\n          <p className=\"text-sm text-feishu-secondary mt-1\">\n            自定义省份与管理区域的对应关系，每个省份只能属于一个管理区域\n          </p>\n        </div>\n\n        {/* 内容 */}\n        <div className=\"p-6 overflow-y-auto max-h-[70vh]\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* 管理区域列表 */}\n            <div className=\"lg:col-span-2 space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-feishu-primary\">管理区域</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"text\"\n                    value={newRegionName}\n                    onChange={(e) => setNewRegionName(e.target.value)}\n                    placeholder=\"输入新区域名称\"\n                    className=\"px-3 py-1 border border-feishu-border rounded text-sm\"\n                    onKeyPress={(e) => e.key === 'Enter' && handleAddRegion()}\n                  />\n                  <button\n                    onClick={handleAddRegion}\n                    className=\"feishu-button feishu-button-primary text-sm\"\n                    disabled={!newRegionName.trim()}\n                  >\n                    添加区域\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                {Object.entries(localMapping).map(([regionName, provinces]) => (\n                  <div key={regionName} className=\"border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <h4 className=\"font-medium text-feishu-primary flex items-center\">\n                        <div \n                          className=\"w-4 h-4 rounded mr-2\"\n                          style={{ \n                            backgroundColor: getRegionColor(regionName)\n                          }}\n                        />\n                        {regionName} ({provinces.length}个省份)\n                      </h4>\n                      <button\n                        onClick={() => handleDeleteRegion(regionName)}\n                        className=\"text-red-500 hover:text-red-700 text-sm\"\n                      >\n                        删除区域\n                      </button>\n                    </div>\n                    \n                    <div className=\"flex flex-wrap gap-2\">\n                      {provinces.map(province => (\n                        <div\n                          key={province}\n                          className=\"flex items-center bg-gray-100 rounded-full px-3 py-1 text-sm\"\n                        >\n                          <span>{province}</span>\n                          <button\n                            onClick={() => handleRemoveProvinceFromRegion(regionName, province)}\n                            className=\"ml-2 text-gray-500 hover:text-red-500\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                      \n                      {provinces.length === 0 && (\n                        <div className=\"text-gray-400 text-sm italic\">\n                          暂无省份，请从右侧添加\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* 未分配省份 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-feishu-primary\">\n                未分配省份 ({unassignedProvinces.length})\n              </h3>\n              \n              <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                {unassignedProvinces.map(province => (\n                  <div key={province} className=\"flex items-center justify-between p-2 border border-gray-200 rounded\">\n                    <span className=\"text-sm\">{province}</span>\n                    <select\n                      value=\"\"\n                      onChange={(e) => {\n                        if (e.target.value) {\n                          handleAddProvinceToRegion(e.target.value, province);\n                        }\n                      }}\n                      className=\"text-xs border border-gray-300 rounded px-2 py-1\"\n                    >\n                      <option value=\"\">分配到...</option>\n                      {Object.keys(localMapping).map(regionName => (\n                        <option key={regionName} value={regionName}>\n                          {regionName}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                ))}\n                \n                {unassignedProvinces.length === 0 && (\n                  <div className=\"text-center text-gray-400 text-sm py-4\">\n                    所有省份都已分配\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* 统计信息 */}\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n            <h4 className=\"font-medium text-blue-800 mb-2\">配置统计</h4>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n              <div>\n                <div className=\"text-blue-600 font-semibold\">{Object.keys(localMapping).length}</div>\n                <div className=\"text-blue-800\">管理区域</div>\n              </div>\n              <div>\n                <div className=\"text-blue-600 font-semibold\">{assignedProvinces.length}</div>\n                <div className=\"text-blue-800\">已分配省份</div>\n              </div>\n              <div>\n                <div className=\"text-blue-600 font-semibold\">{unassignedProvinces.length}</div>\n                <div className=\"text-blue-800\">未分配省份</div>\n              </div>\n              <div>\n                <div className=\"text-blue-600 font-semibold\">{ALL_PROVINCES.length}</div>\n                <div className=\"text-blue-800\">总省份数</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 底部操作 */}\n        <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-between\">\n          <button\n            onClick={handleReset}\n            className=\"feishu-button feishu-button-secondary\"\n          >\n            重置为默认\n          </button>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"feishu-button feishu-button-secondary\"\n            >\n              取消\n            </button>\n            <button\n              onClick={handleSave}\n              className=\"feishu-button feishu-button-primary\"\n            >\n              保存配置\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 获取区域颜色的辅助函数\nconst getRegionColor = (regionName: string): string => {\n  const colorMap: Record<string, string> = {\n    '华东': '#3b82f6',\n    '华南': '#ef4444',\n    '华西': '#22c55e',\n    '华北': '#eab308',\n    '华中': '#8b5cf6',\n    '东北': '#06b6d4',\n    '西北': '#f59e0b',\n    '其他': '#6b7280'\n  };\n  \n  return colorMap[regionName] || '#6b7280';\n};\n\nexport default RegionMappingConfig;","/**\n * 飞书插件服务\n * 处理插件生命周期、确认按键和数据交互\n */\n\ndeclare global {\n  interface Window {\n    h5sdk: any;\n  }\n}\n\nexport interface PluginConfig {\n  width?: number;\n  height?: number;\n  data?: any;\n}\n\nexport class FeishuPluginService {\n  private static instance: FeishuPluginService;\n  private isInitialized = false;\n\n  private onConfirmCallback?: (data: any) => void;\n  private onCancelCallback?: () => void;\n\n  private constructor() {}\n\n  public static getInstance(): FeishuPluginService {\n    if (!FeishuPluginService.instance) {\n      FeishuPluginService.instance = new FeishuPluginService();\n    }\n    return FeishuPluginService.instance;\n  }\n\n  /**\n   * 初始化飞书插件\n   */\n  public async initialize(): Promise<void> {\n    if (this.isInitialized) {\n      return;\n    }\n\n    try {\n      // 检查是否在飞书环境中\n      if (typeof window.h5sdk === 'undefined') {\n        console.warn('飞书 SDK 未加载，使用演示模式');\n        this.initDemoMode();\n        return;\n      }\n\n      // 初始化飞书 SDK\n      await window.h5sdk.ready();\n      \n      // 获取插件配置\n      const config = await this.getPluginConfig();\n      console.log('插件配置:', config);\n\n      // 显示确认按键\n      this.showActionButtons();\n\n      // 设置插件事件监听\n      this.setupEventListeners();\n\n      this.isInitialized = true;\n      console.log('飞书插件初始化成功');\n\n    } catch (error) {\n      console.error('飞书插件初始化失败:', error);\n      this.initDemoMode();\n    }\n  }\n\n  /**\n   * 初始化演示模式\n   */\n  private initDemoMode(): void {\n    console.log('启动演示模式');\n    this.isInitialized = true;\n    \n    // 在演示模式下也显示确认按键\n    setTimeout(() => {\n      this.showActionButtons();\n    }, 1000);\n  }\n\n  /**\n   * 获取插件配置\n   */\n  private async getPluginConfig(): Promise<PluginConfig> {\n    try {\n      if (window.h5sdk && window.h5sdk.bitable) {\n        // 获取多维表格数据\n        const selection = await window.h5sdk.bitable.base.getSelection();\n        return {\n          data: selection,\n          width: 800,\n          height: 600\n        };\n      }\n    } catch (error) {\n      console.error('获取插件配置失败:', error);\n    }\n\n    return {\n      width: 800,\n      height: 600\n    };\n  }\n\n  /**\n   * 显示确认按键\n   */\n  private showActionButtons(): void {\n    const actionContainer = document.getElementById('plugin-actions');\n    if (actionContainer) {\n      actionContainer.style.display = 'block';\n    }\n  }\n\n  /**\n   * 隐藏确认按键\n   */\n  private hideActionButtons(): void {\n    const actionContainer = document.getElementById('plugin-actions');\n    if (actionContainer) {\n      actionContainer.style.display = 'none';\n    }\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  private setupEventListeners(): void {\n    const confirmBtn = document.getElementById('confirm-btn');\n    const cancelBtn = document.getElementById('cancel-btn');\n\n    if (confirmBtn) {\n      confirmBtn.addEventListener('click', () => {\n        this.handleConfirm();\n      });\n    }\n\n    if (cancelBtn) {\n      cancelBtn.addEventListener('click', () => {\n        this.handleCancel();\n      });\n    }\n  }\n\n  /**\n   * 处理确认操作\n   */\n  private async handleConfirm(): Promise<void> {\n    try {\n      console.log('用户点击确认');\n\n      // 获取当前插件数据\n      const currentData = this.getCurrentPluginData();\n\n      // 调用确认回调\n      if (this.onConfirmCallback) {\n        this.onConfirmCallback(currentData);\n      }\n\n      // 如果在飞书环境中，保存数据并关闭插件\n      if (window.h5sdk) {\n        await this.savePluginData(currentData);\n        await window.h5sdk.bridge.close();\n      } else {\n        // 演示模式下的处理\n        this.showMessage('配置已保存（演示模式）', 'success');\n        this.hideActionButtons();\n      }\n\n    } catch (error) {\n      console.error('确认操作失败:', error);\n      this.showMessage('保存失败，请重试', 'error');\n    }\n  }\n\n  /**\n   * 处理取消操作\n   */\n  private async handleCancel(): Promise<void> {\n    try {\n      console.log('用户点击取消');\n\n      // 调用取消回调\n      if (this.onCancelCallback) {\n        this.onCancelCallback();\n      }\n\n      // 如果在飞书环境中，直接关闭插件\n      if (window.h5sdk) {\n        await window.h5sdk.bridge.close();\n      } else {\n        // 演示模式下的处理\n        this.showMessage('已取消配置', 'info');\n        this.hideActionButtons();\n      }\n\n    } catch (error) {\n      console.error('取消操作失败:', error);\n    }\n  }\n\n  /**\n   * 获取当前插件数据\n   */\n  private getCurrentPluginData(): any {\n    // 这里应该收集当前插件的配置数据\n    // 比如地图配置、数据源设置等\n    return {\n      timestamp: Date.now(),\n      config: {\n        dataSource: localStorage.getItem('feishu-map-datasource') || 'demo',\n        regionMapping: JSON.parse(localStorage.getItem('feishu-map-regions') || '{}'),\n        colorScheme: localStorage.getItem('feishu-map-colors') || 'default'\n      }\n    };\n  }\n\n  /**\n   * 保存插件数据\n   */\n  private async savePluginData(data: any): Promise<void> {\n    if (window.h5sdk && window.h5sdk.bitable) {\n      try {\n        // 保存到飞书多维表格或其他存储\n        console.log('保存插件数据:', data);\n        // 这里可以实现具体的数据保存逻辑\n      } catch (error) {\n        console.error('保存数据失败:', error);\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * 显示消息提示\n   */\n  private showMessage(message: string, type: 'success' | 'error' | 'info' = 'info'): void {\n    // 创建消息提示元素\n    const messageEl = document.createElement('div');\n    messageEl.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 12px 24px;\n      border-radius: 4px;\n      color: white;\n      font-size: 14px;\n      z-index: 10000;\n      background: ${type === 'success' ? '#52c41a' : type === 'error' ? '#ff4d4f' : '#1890ff'};\n    `;\n    messageEl.textContent = message;\n\n    document.body.appendChild(messageEl);\n\n    // 3秒后自动移除\n    setTimeout(() => {\n      if (messageEl.parentNode) {\n        messageEl.parentNode.removeChild(messageEl);\n      }\n    }, 3000);\n  }\n\n  /**\n   * 设置确认回调\n   */\n  public onConfirm(callback: (data: any) => void): void {\n    this.onConfirmCallback = callback;\n  }\n\n  /**\n   * 设置取消回调\n   */\n  public onCancel(callback: () => void): void {\n    this.onCancelCallback = callback;\n  }\n\n  /**\n   * 检查是否在飞书环境中\n   */\n  public isInFeishuEnvironment(): boolean {\n    return typeof window.h5sdk !== 'undefined';\n  }\n\n  /**\n   * 获取飞书用户信息\n   */\n  public async getUserInfo(): Promise<any> {\n    if (window.h5sdk && window.h5sdk.bitable) {\n      try {\n        return await window.h5sdk.bitable.bridge.getUserInfo();\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        return null;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 获取多维表格数据\n   */\n  public async getBitableData(): Promise<any> {\n    if (window.h5sdk && window.h5sdk.bitable) {\n      try {\n        const selection = await window.h5sdk.bitable.base.getSelection();\n        if (selection && selection.tableId) {\n          const table = await window.h5sdk.bitable.base.getTableById(selection.tableId);\n          const records = await table.getRecords();\n          return records;\n        }\n      } catch (error) {\n        console.error('获取多维表格数据失败:', error);\n      }\n    }\n    return null;\n  }\n}\n\n// 导出单例实例\nexport const feishuPluginService = FeishuPluginService.getInstance();","import React, { useEffect, useState } from 'react';\nimport MapContainer from './MapContainer';\nimport DataSourceConfig from './DataSourceConfig';\nimport RegionMappingConfig from './RegionMappingConfig';\nimport { useRegions, useLoadingState, useStatistics, useMapActions, useMapStore } from '@/stores/mapStore';\nimport { feishuPluginService } from '@/services/feishuPluginService';\n\nconst ChinaMapDashboard: React.FC = () => {\n  // 使用 Zustand store\n  const regions = useRegions();\n  const loadingState = useLoadingState();\n  const statistics = useStatistics();\n  const { loadRegions, setSelectedRegion } = useMapActions();\n  const { dataSource } = useMapStore();\n  \n  // 本地状态\n  const [showDataSourceConfig, setShowDataSourceConfig] = useState(false);\n  const [showRegionMappingConfig, setShowRegionMappingConfig] = useState(false);\n\n  // 初始化飞书插件和数据加载\n  useEffect(() => {\n    const initializePlugin = async () => {\n      try {\n        // 初始化飞书插件服务\n        await feishuPluginService.initialize();\n        \n        // 设置插件回调\n        feishuPluginService.onConfirm((data) => {\n          console.log('插件确认，保存数据:', data);\n        });\n        \n        feishuPluginService.onCancel(() => {\n          console.log('插件取消');\n        });\n        \n        // 加载地图数据\n        loadRegions();\n        \n        // 如果在飞书环境中，尝试加载多维表格数据\n        if (feishuPluginService.isInFeishuEnvironment()) {\n          const bitableData = await feishuPluginService.getBitableData();\n          if (bitableData) {\n            console.log('获取到多维表格数据:', bitableData);\n            // 这里可以处理多维表格数据\n          }\n        }\n        \n      } catch (error) {\n        console.error('插件初始化失败:', error);\n        // 即使插件初始化失败，也要加载基本数据\n        loadRegions();\n      }\n    };\n    \n    initializePlugin();\n  }, [loadRegions]);\n\n  const handleRegionSelect = (regionId: string) => {\n    setSelectedRegion(regionId);\n    console.log('选中地区:', regionId);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-feishu-background\">\n      <div className=\"container mx-auto p-6\">\n        <header className=\"mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-feishu-primary\">\n                中国地图仪表盘\n              </h1>\n              <p className=\"text-feishu-secondary mt-2 text-lg\">\n                根据地区负责人机构数量进行颜色标记\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-right\">\n                <div className=\"text-sm text-feishu-secondary\">数据源</div>\n                <div className=\"font-medium text-feishu-primary\">\n                  {dataSource === 'bitable' ? '飞书多维表格' : '演示数据'}\n                </div>\n              </div>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setShowRegionMappingConfig(true)}\n                  className=\"feishu-button feishu-button-secondary\"\n                >\n                  🗺️ 区域配置\n                </button>\n                <button\n                  onClick={() => setShowDataSourceConfig(true)}\n                  className=\"feishu-button feishu-button-secondary\"\n                >\n                  ⚙️ 数据源\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n        \n        <div className=\"mb-6\">\n          <MapContainer\n            regions={regions}\n            loading={loadingState.isLoading}\n            onRegionSelect={handleRegionSelect}\n          />\n        </div>\n\n        {/* 错误提示 */}\n        {loadingState.error && (\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-red-500\">⚠️</span>\n              <div>\n                <div className=\"font-medium text-red-800\">加载失败</div>\n                <div className=\"text-sm text-red-600\">{loadingState.error.message}</div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 快速统计卡片 */}\n        {!loadingState.isLoading && regions.length > 0 && statistics && (\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"feishu-card p-4\">\n              <div className=\"text-2xl font-bold text-feishu-accent\">\n                {statistics.totalRegions}\n              </div>\n              <div className=\"text-feishu-secondary\">覆盖省份</div>\n            </div>\n            <div className=\"feishu-card p-4\">\n              <div className=\"text-2xl font-bold text-feishu-success\">\n                {statistics.totalInstitutions}\n              </div>\n              <div className=\"text-feishu-secondary\">总机构数</div>\n            </div>\n            <div className=\"feishu-card p-4\">\n              <div className=\"text-2xl font-bold text-feishu-warning\">\n                {statistics.totalManagers}\n              </div>\n              <div className=\"text-feishu-secondary\">负责人数</div>\n            </div>\n            <div className=\"feishu-card p-4\">\n              <div className=\"text-2xl font-bold text-feishu-primary\">\n                {statistics.activeInstitutions}\n              </div>\n              <div className=\"text-feishu-secondary\">活跃机构</div>\n            </div>\n          </div>\n        )}\n\n        {/* 数据源配置弹窗 */}\n        <DataSourceConfig\n          isOpen={showDataSourceConfig}\n          onClose={() => setShowDataSourceConfig(false)}\n        />\n\n        {/* 区域映射配置弹窗 */}\n        <RegionMappingConfig\n          isOpen={showRegionMappingConfig}\n          onClose={() => setShowRegionMappingConfig(false)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChinaMapDashboard;","import ChinaMapDashboard from './components/ChinaMapDashboard';\n\nfunction App() {\n  return (\n    <div className=\"min-h-screen bg-feishu-background\">\n      <ChinaMapDashboard />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","chinaMapData","mockRegionData","generateVisualMapPieces","data","maxValue","pieces","segments","i","min","max","getSegmentColor","segment","colors","index","MapRenderer","onMapEvent","loading","className","chartRef","useRef","chartInstance","useEffect","echarts.init","chinaGeoJson","echarts.registerMap","error","_a","option","params","_b","_c","handleClick","handleMouseOver","_d","_e","handleResize","handleKeyDown","event","jsx","MapControls","regions","selectedRegion","onRegionSelect","searchTerm","setSearchTerm","useState","filterRegionType","setFilterRegionType","regionTypes","region","sortedRegions","matchesSearch","matchesType","selectedRegionData","jsxs","type","inst","REGION_COLOR_SCHEMES","calculateRegionColor","regionType","institutionCount","maxCount","colorScheme","actualMaxCount","intensity","colorIndex","getMaxInstitutionCount","updateColorSchemeMaxValues","updatedSchemes","regionTypeMaxCounts","currentMax","generateColorLegend","colorRange","maxInstitutions","legendItems","minValue","getRegionThemeColor","scheme","MapLegend","colorSchemes","statistics","updatedColorSchemes","regionLabels","label","item","calculateStatistics","allInstitutions","activeInstitutions","inactiveInstitutions","regionStats","stats","topRegion","top","sortRegions","sortBy","order","comparison","formatDate","date","RegionDetailModal","isOpen","onClose","activeTab","setActiveTab","themeColor","tab","institution","InstitutionCard","MapToolbar","onZoomIn","onZoomOut","onReset","onToggleFullscreen","isFullscreen","createStoreImpl","createState","state","listeners","setState","partial","replace","nextState","previousState","listener","getState","api","initialState","createStore","React","is","x","y","objectIs","useLayoutEffect","useDebugValue","useSyncExternalStore$2","subscribe","getSnapshot","value","_useState","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","nextValue","useSyncExternalStore$1","shim","useSyncExternalStoreShim_production","shimModule","require$$1","useSyncExternalStore","useMemo","withSelector_production","getServerSnapshot","selector","isEqual","instRef","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","identity","arg","useStore","equalityFn","slice","createImpl","useBoundStore","create","trackedConnections","getTrackedConnectionState","name","key","api2","extractConnectionInformation","store","extensionConnector","options","existingConnection","newConnection","devtoolsImpl","fn","devtoolsOptions","set","get","enabled","anonymousActionType","connection","connectionInformation","isRecording","nameOrAction","r","action","setStateFromDevtools","originalIsRecording","store2","didWarnAboutReservedActionType","originalDispatch","message","parseJsonThen","stateFromDevtools","nextLiftedState","lastComputedState","devtools","stringified","parsed","createJSONStorage","getStorage","storage","parse","str2","str","newValue","toThenable","input","result","onFulfilled","_onRejected","_onFulfilled","onRejected","oldImpl","config","baseOptions","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","setItem","errorInSync","thenable","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","storageValue","deserializedStorageValue","migratedState","_a2","newOptions","newImpl","migrationResult","migrated","persistImpl","persist","FeishuBitableService","appToken","tableId","accessToken","__publicField","response","record","fields","institutionRecords","managerRecords","regionMapping","validRecords","standardizedRecords","institutionsByProvince","acc","province","managersByRegion","institutions","provinces","managerRecord","defaultManager","transformedInstitutions","regionData","callback","poll","recordId","status","applyRegionMapping","newRegionType","useMapStore","dataSource","bitableConfig","bitableService","resolve","loadRegions","regionId","updates","updatedRegions","source","show","term","filterOptions","sortOrder","filtered","profile","mapping","regionName","useRegions","useSelectedRegion","useLoadingState","useStatistics","useUIState","useMapActions","MapContainer","showControls","showDetailModal","hoveredRegion","setSelectedRegion","setHoveredRegion","toggleControls","toggleDetailModal","toggleFullscreen","maxInstitutionCount","mapData","handleMapEvent","handleZoomIn","handleZoomOut","handleReset","localStatistics","sum","DataSourceConfig","loadFromBitable","switchDataSource","formData","setFormData","setLoading","handleSubmit","handleSwitchToMock","ALL_PROVINCES","DEFAULT_REGION_MAPPING","RegionMappingConfig","setRegionMapping","localMapping","setLocalMapping","newRegionName","setNewRegionName","assignedProvinces","unassignedProvinces","handleAddRegion","handleDeleteRegion","newMapping","handleAddProvinceToRegion","handleRemoveProvinceFromRegion","handleSave","getRegionColor","_FeishuPluginService","actionContainer","confirmBtn","cancelBtn","currentData","messageEl","selection","FeishuPluginService","feishuPluginService","ChinaMapDashboard","loadingState","showDataSourceConfig","setShowDataSourceConfig","showRegionMappingConfig","setShowRegionMappingConfig","bitableData","handleRegionSelect","App","ReactDOM"],"mappings":";;;;;;;;GASa,IAAIA,GAAEC,EAAiBC,GAAE,OAAO,IAAI,eAAe,EAAEC,GAAE,OAAO,IAAI,gBAAgB,EAAEC,GAAE,OAAO,UAAU,eAAeC,GAAEL,GAAE,mDAAmD,kBAAkBM,GAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,GAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,GAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,IAAZ,SAAgBC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,GAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,GAAE,OAAO,CAAC,YAAkBF,GAAaY,EAAA,IAACR,EAAEQ,EAAA,KAAaR,ECPxWS,EAAA,QAAiBf,uBCDfG,EAAIH,GAEYgB,EAAA,WAAGb,EAAE,WACJa,EAAA,YAAGb,EAAE,YCHnB,MAAMc,GAAe,CAC1B,KAAM,oBACN,SAAU,CACR,CACE,KAAM,UACN,WAAY,CACV,KAAM,MACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,YAAa,CAAC,CAAC,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,EAAI,EAAG,CAAC,MAAO,EAAI,EAAG,CAAC,MAAO,IAAI,CAAC,CAAC,CAC3F,CACF,EACA,CACE,KAAM,UACN,WAAY,CACV,KAAM,MACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,YAAa,CAAC,CAAC,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,CAAC,CAAC,CAC3F,CACF,EACA,CACE,KAAM,UACN,WAAY,CACV,KAAM,MACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,YAAa,CAAC,CAAC,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,CAAC,CAAC,CAC3F,CACF,EACA,CACE,KAAM,UACN,WAAY,CACV,KAAM,MACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,YAAa,CAAC,CAAC,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,CAAC,CAAC,CAC3F,CACF,EACA,CACE,KAAM,UACN,WAAY,CACV,KAAM,MACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,YAAa,CAAC,CAAC,CAAC,MAAO,EAAI,EAAG,CAAC,MAAO,EAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,EAAI,CAAC,CAAC,CAC3F,CACF,EACA,CACE,KAAM,UACN,WAAY,CACV,KAAM,MACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,YAAa,CAAC,CAAC,CAAC,IAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,MAAO,IAAI,EAAG,CAAC,IAAO,IAAI,EAAG,CAAC,IAAO,IAAI,CAAC,CAAC,CAC3F,CACF,CACF,CACF,EAGaC,EAAiB,CAC5B,CACE,GAAI,IACJ,KAAM,MACN,WAAY,KACZ,QAAS,CACP,GAAI,KACJ,KAAM,KACN,QAAS,cACT,MAAO,uBACT,EACA,aAAc,CACZ,CACE,GAAI,KACJ,KAAM,QACN,QAAS,UACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,EACA,CACE,GAAI,KACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,EACA,CACE,GAAI,KACJ,KAAM,SACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,CACF,CACF,EACA,CACE,GAAI,IACJ,KAAM,MACN,WAAY,KACZ,QAAS,CACP,GAAI,KACJ,KAAM,KACN,QAAS,cACT,MAAO,oBACT,EACA,aAAc,CACZ,CACE,GAAI,KACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,EACA,CACE,GAAI,KACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,CACF,CACF,EACA,CACE,GAAI,IACJ,KAAM,MACN,WAAY,KACZ,QAAS,CACP,GAAI,KACJ,KAAM,KACN,QAAS,cACT,MAAO,sBACT,EACA,aAAc,CACZ,CACE,GAAI,KACJ,KAAM,OACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,EACA,CACE,GAAI,KACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,EACA,CACE,GAAI,KACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,EACA,CACE,GAAI,KACJ,KAAM,SACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,CACF,CACF,EACA,CACE,GAAI,IACJ,KAAM,MACN,WAAY,KACZ,QAAS,CACP,GAAI,KACJ,KAAM,KACN,QAAS,cACT,MAAO,uBACT,EACA,aAAc,CACZ,CACE,GAAI,MACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,CACF,CACF,EACA,CACE,GAAI,IACJ,KAAM,MACN,WAAY,KACZ,QAAS,CACP,GAAI,KACJ,KAAM,KACN,QAAS,cACT,MAAO,qBACT,EACA,aAAc,CACZ,CACE,GAAI,MACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,EACA,CACE,GAAI,MACJ,KAAM,QACN,QAAS,UACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,CACF,CACF,EACA,CACE,GAAI,IACJ,KAAM,MACN,WAAY,KACZ,QAAS,CACP,GAAI,KACJ,KAAM,KACN,QAAS,cACT,MAAO,sBACT,EACA,aAAc,CACZ,CACE,GAAI,MACJ,KAAM,QACN,QAAS,SACT,gBAAqB,IAAA,KAAK,YAAY,EACtC,OAAQ,SACR,SAAU,GACZ,CACF,CACF,CACF,ECpPMC,GAA2BC,GAAyB,CACxD,GAAIA,EAAK,SAAW,EAAG,MAAO,GAExB,MAAAC,EAAW,KAAK,IAAI,GAAGD,EAAK,IAAST,GAAAA,EAAE,KAAK,EAAG,CAAC,EAChDW,EAAS,CAAA,EAGfA,EAAO,KAAK,CACV,IAAK,EACL,IAAK,EACL,MAAO,UACP,MAAO,KAAA,CACR,EAGD,MAAMC,EAAW,KAAK,IAAI,EAAGF,CAAQ,EACrC,QAASG,EAAI,EAAGA,GAAKD,EAAUC,IAAK,CAC5B,MAAAC,EAAM,KAAK,MAAMD,EAAI,GAAKH,EAAWE,CAAQ,GAAKC,IAAM,EAAI,EAAI,GAChEE,EAAMF,IAAMD,EAAW,OAAY,KAAK,KAAKC,EAAIH,EAAWE,CAAQ,EAE1ED,EAAO,KAAK,CACV,IAAAG,EACA,IAAAC,EACA,MAAOC,GAAgBH,CAAC,EACxB,MAAOE,EAAM,GAAGD,CAAG,IAAIC,CAAG,IAAM,GAAGD,CAAG,KAAA,CACvC,CACH,CAEO,OAAAH,CACT,EAGMK,GAAmBC,GAA4B,CACnD,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC1EC,EAAQ,KAAK,IAAIF,EAAU,EAAGC,EAAO,OAAS,CAAC,EACrD,OAAOA,EAAOC,CAAK,CACrB,EAEMC,GAA0C,CAAC,CAC/C,KAAAX,EACA,WAAAY,EACA,QAAAC,EAAU,GACV,UAAAC,EAAY,EACd,IAAM,CACE,MAAAC,EAAWC,SAAuB,IAAI,EACtCC,EAAgBD,SAA+B,IAAI,EAGzDE,OAAAA,EAAAA,UAAU,IACHH,EAAS,SAGdE,EAAc,QAAUE,GAAaJ,EAAS,OAAO,GAGhC,SAAY,CAC3B,GAAA,CAEI,MAAAK,EAAe,MADJ,MAAM,MAAM,8DAA8D,GACvD,OAC5BC,EAAY,QAASD,CAAY,QAClCE,EAAO,CACN,QAAA,KAAK,mBAAoBA,CAAK,EAE9BD,EAAY,QAASxB,EAAmB,CAClD,CAAA,KAKK,IAAM,QACX0B,EAAAN,EAAc,UAAd,MAAAM,EAAuB,SAAQ,GArBV,OAuBtB,CAAE,CAAA,EAGLL,EAAAA,UAAU,IAAM,CACd,GAAI,CAACD,EAAc,QAAS,OAmJ5B,WAhJkB,IAAM,eACtB,MAAMO,EAAgC,CACtC,MAAO,CACL,KAAM,UACN,KAAM,SACN,UAAW,CACT,MAAO,UACP,SAAU,GACV,WAAY,MACd,CACF,EACA,QAAS,CACP,QAAS,OAET,UAAYC,GAAgB,CAC1B,MAAMzB,EAAOyB,EAAO,KACpB,OAAKzB,EAEE;AAAA;AAAA,oEAEmDA,EAAK,IAAI;AAAA,0BACnDA,EAAK,OAAO;AAAA,2BACXA,EAAK,KAAK;AAAA,2BACVA,EAAK,UAAU;AAAA;AAAA,YAPd,EAUpB,EACA,gBAAiB,4BACjB,YAAa,UACb,YAAa,EACb,UAAW,CACT,MAAO,UACP,SAAU,EACZ,CACF,EACA,UAAW,CACT,KAAM,YACN,OAAQD,GAAwBC,CAAI,EACpC,OAAQ,WACR,KAAM,OACN,IAAK,SACL,UAAW,CACT,MAAO,UACP,SAAU,EACZ,EACA,UAAW,GACX,WAAY,GACZ,QAAS,CACX,EAEA,OAAQ,CACN,CACE,KAAM,OACN,KAAM,MACN,IAAK,QACL,KAAAA,EACA,KAAM,GACN,WAAY,CACV,IAAK,GACL,IAAK,CACP,EACA,UAAW,CACT,YAAa,OACb,YAAa,GACb,UAAW,SACb,EACA,SAAU,CACR,UAAW,CACT,UAAW,UACX,WAAY,GACZ,YAAa,qBACb,YAAa,EACb,YAAa,SACf,CACF,EACA,OAAQ,CACN,UAAW,CACT,UAAW,UACX,YAAa,EACb,YAAa,SACf,CACF,CACF,CACF,CAAA,EAIEa,GACYU,EAAAN,EAAA,UAAA,MAAAM,EAAS,YAAY,UAAW,CAC5C,KAAM,SACN,MAAO,UACP,UAAW,UACX,UAAW,0BAAA,IAGbG,EAAAT,EAAc,UAAd,MAAAS,EAAuB,eAIXC,EAAAV,EAAA,UAAA,MAAAU,EAAS,UAAUH,EAAQ,IAInC,MAAAI,EAAeH,GAAgB,CAC/BA,EAAO,MAAQb,GACNA,EAAA,CACT,KAAM,QACN,KAAM,CACJ,SAAUa,EAAO,KAAK,KACtB,WAAYA,EAAO,KAAK,KACxB,iBAAkBA,EAAO,KAAK,MAC9B,QAASA,EAAO,KAAK,OACvB,EACA,UAAW,KAAK,IAAI,CAAA,CACrB,CACH,EAIII,EAAmBJ,GAAgB,CACnCA,EAAO,MAAQb,GACNA,EAAA,CACT,KAAM,QACN,KAAM,CACJ,SAAUa,EAAO,KAAK,KACtB,WAAYA,EAAO,KAAK,KACxB,iBAAkBA,EAAO,KAAK,MAC9B,QAASA,EAAO,KAAK,OACvB,EACA,UAAW,KAAK,IAAI,CAAA,CACrB,CACH,EAGY,OAAAK,EAAAb,EAAA,UAAA,MAAAa,EAAS,GAAG,QAASF,IACrBG,EAAAd,EAAA,UAAA,MAAAc,EAAS,GAAG,YAAaF,GAEhC,IAAM,UACGN,EAAAN,EAAA,UAAA,MAAAM,EAAS,IAAI,QAASK,IACtBF,EAAAT,EAAA,UAAA,MAAAS,EAAS,IAAI,YAAaG,EAAe,CACzD,EAIsB,GAAG,CACxB,EAAA,CAAC7B,EAAMa,EAASD,CAAU,CAAC,EAG9BM,EAAAA,UAAU,IAAM,CACd,MAAMc,EAAe,IAAM,QACzBT,EAAAN,EAAc,UAAd,MAAAM,EAAuB,QAAO,EAG1BU,EAAiBC,GAAyB,CAC9C,GAAKjB,EAAc,QAEnB,OAAQiB,EAAM,IAAK,CACjB,IAAK,SAEHjB,EAAc,QAAQ,eAAe,CACnC,KAAM,SAAA,CACP,EACD,MACF,IAAK,IACL,IAAK,IAEHA,EAAc,QAAQ,eAAe,CACnC,KAAM,UACN,KAAM,GAAA,CACP,EACD,MACF,IAAK,IAEHA,EAAc,QAAQ,eAAe,CACnC,KAAM,UACN,KAAM,EAAA,CACP,EACD,MACF,IAAK,IACL,IAAK,IAEHA,EAAc,QAAQ,eAAe,CACnC,KAAM,YAAA,CACP,EACD,KACJ,CAAA,EAGK,cAAA,iBAAiB,SAAUe,CAAY,EACvC,OAAA,iBAAiB,UAAWC,CAAa,EAEzC,IAAM,CACJ,OAAA,oBAAoB,SAAUD,CAAY,EAC1C,OAAA,oBAAoB,UAAWC,CAAa,CAAA,CAEvD,EAAG,CAAE,CAAA,EAGHE,EAAA,IAAC,MAAA,CACC,IAAKpB,EACL,UAAW,+BAA+BD,CAAS,GACnD,MAAO,CACL,UAAW,QACX,MAAO,OACP,OAAQ,MACV,CAAA,CAAA,CAGN,ECpSMsB,GAA0C,CAAC,CAC/C,QAAAC,EACA,eAAAC,EACA,eAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAYC,CAAa,EAAIC,WAAS,EAAE,EACzC,CAACC,EAAkBC,CAAmB,EAAIF,WAAiB,KAAK,EAGhEG,EAAc,MAAM,KAAK,IAAI,IAAIR,EAAQ,IAAcS,GAAAA,EAAO,UAAU,CAAC,CAAC,EAY1EC,EAAgB,CAAC,GATCV,EAAQ,OAAiBS,GAAA,CAC/C,MAAME,EAAgBF,EAAO,KAAK,cAAc,SAASN,EAAW,YAAa,CAAA,GAC5DM,EAAO,QAAQ,KAAK,YAAA,EAAc,SAASN,EAAW,aAAa,EAClFS,EAAcN,IAAqB,OAASG,EAAO,aAAeH,EAExE,OAAOK,GAAiBC,CAAA,CACzB,CAGwC,EAAE,KAAK,CAAC7D,EAAGE,IAAMA,EAAE,aAAa,OAASF,EAAE,aAAa,MAAM,EAGjG8D,EAAqBb,EAAQ,KAAeS,GAAAA,EAAO,OAASR,CAAc,EAG9E,OAAAa,EAAA,KAAC,MAAI,CAAA,UAAU,uBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAChB,EAAA,IAAA,QAAA,CAAM,UAAU,qDAAqD,SAEtE,OAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOK,EACP,SAAWhD,GAAMiD,EAAcjD,EAAE,OAAO,KAAK,EAC7C,YAAY,eACZ,UAAU,2IAAA,CACZ,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAC2C,EAAA,IAAA,QAAA,CAAM,UAAU,qDAAqD,SAEtE,OAAA,EACAgB,EAAA,KAAC,SAAA,CACC,MAAOR,EACP,SAAWnD,GAAMoD,EAAoBpD,EAAE,OAAO,KAAK,EACnD,UAAU,4IAEV,SAAA,CAAC2C,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAI,OAAA,EACvBU,EAAY,IACXO,GAAAjB,EAAA,IAAC,UAAkB,MAAOiB,EAAO,SAApBA,CAAA,EAAAA,CAAyB,CACvC,CAAA,CAAA,CACH,CAAA,EACF,CAAA,EACF,EAGAD,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAhB,EAAAA,IAAC,OAAI,UAAU,YACb,SAACgB,EAAA,KAAA,KAAA,CAAG,UAAU,+CAA+C,SAAA,CAAA,SACpDJ,EAAc,OAAO,GAAA,CAAA,CAC9B,CACF,CAAA,QAEC,MAAI,CAAA,UAAU,iBACZ,SAAAA,EAAc,IACbD,GAAAX,EAAA,IAAC,MAAA,CAEC,QAAS,IAAMI,EAAeO,EAAO,OAASR,EAAiB,KAAOQ,EAAO,IAAI,EACjF,UAAW,mDACTR,IAAmBQ,EAAO,KACtB,6DACA,4CACN,GAEA,SAAAK,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,kCACZ,SAAAW,EAAO,KACV,EACAK,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACZ,SAAA,CAAAL,EAAO,QAAQ,KAAK,MAAIA,EAAO,UAAA,EAClC,CAAA,EACF,EACAK,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAhB,MAAC,MAAI,CAAA,UAAU,mCACZ,SAAAW,EAAO,aAAa,OACvB,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAE/C,KAAA,CAAA,EACF,CAAA,EACF,CAAA,EAzBKW,EAAO,EA2Bf,CAAA,EACH,EAECC,EAAc,SAAW,GACvBI,EAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAE,KAAA,EACjCA,EAAAA,IAAC,OAAI,SAAQ,UAAA,CAAA,CAAA,EACf,CAAA,EAEJ,EAGCe,GACCC,EAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,uCACX,SAAA,CAAmBD,EAAA,KAAK,KAAA,EAC3B,EAEAC,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAI,OAAA,QAC3C,OAAK,CAAA,UAAU,sBAAuB,SAAAe,EAAmB,QAAQ,KAAK,CAAA,EACzE,EACAC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,QAC5C,OAAK,CAAA,UAAU,sBAAuB,SAAAe,EAAmB,QAAQ,QAAQ,CAAA,EAC5E,EACAC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,EAC5CA,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAuB,WAAmB,WAAW,CAAA,EACvE,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,QAC5C,OAAK,CAAA,UAAU,mCACb,SAAAe,EAAmB,aAAa,OACnC,CAAA,EACF,EACAC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,EAC5CA,EAAA,IAAA,OAAA,CAAK,UAAU,sBACb,SAAmBe,EAAA,aAAa,OAAOG,GAAQA,EAAK,SAAW,QAAQ,EAAE,OAC5E,CAAA,EACF,CAAA,EACF,EAEAlB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMI,EAAe,IAAI,EAClC,UAAU,4DACX,SAAA,MAAA,CAED,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ,EC7Jae,EAAoD,CAC/D,GAAM,CACJ,WAAY,KACZ,UAAW,UACX,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACA,gBAAiB,EACnB,EACA,GAAM,CACJ,WAAY,KACZ,UAAW,UACX,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACA,gBAAiB,EACnB,EACA,GAAM,CACJ,WAAY,KACZ,UAAW,UACX,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACA,gBAAiB,EACnB,EACA,GAAM,CACJ,WAAY,KACZ,UAAW,UACX,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACA,gBAAiB,EACnB,EACA,GAAM,CACJ,WAAY,KACZ,UAAW,UACX,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACA,gBAAiB,EACnB,EACA,GAAM,CACJ,WAAY,KACZ,UAAW,UACX,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACA,gBAAiB,EACnB,EACA,GAAM,CACJ,WAAY,KACZ,UAAW,UACX,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACA,gBAAiB,EACnB,CACF,EAKaC,EAAuB,CAClCC,EACAC,EACAC,IACW,CACX,MAAMC,EAAcL,EAAqBE,CAAU,GAAKF,EAAqB,GACvEM,EAAiBF,GAAYC,EAAY,gBAG/C,GAAIF,IAAqB,EAChB,OAAAE,EAAY,WAAW,CAAC,EAIjC,MAAME,EAAY,KAAK,IAAIJ,EAAmBG,EAAgB,CAAC,EAGzDE,EAAa,KAAK,IACtB,KAAK,MAAMD,GAAaF,EAAY,WAAW,OAAS,EAAE,EAAI,EAC9DA,EAAY,WAAW,OAAS,CAAA,EAG3B,OAAAA,EAAY,WAAWG,CAAU,CAC1C,EAKaC,GAA0B1B,GACjCA,EAAQ,SAAW,EAAU,EAC1B,KAAK,IAAI,GAAGA,EAAQ,OAAcS,EAAO,aAAa,MAAM,EAAG,CAAC,EAM5DkB,EAA8B3B,GAAuD,CAC1F,MAAA4B,EAAiB,CAAE,GAAGX,GAGtBY,EAA8C,CAAA,EAEpD,OAAA7B,EAAQ,QAAkBS,GAAA,CACxB,MAAMqB,EAAaD,EAAoBpB,EAAO,UAAU,GAAK,EACzCoB,EAAApB,EAAO,UAAU,EAAI,KAAK,IAAIqB,EAAYrB,EAAO,aAAa,MAAM,CAAA,CACzF,EAGD,OAAO,KAAKmB,CAAc,EAAE,QAAsBT,GAAA,CAC5CU,EAAoBV,CAAU,IAChCS,EAAeT,CAAU,EAAI,CAC3B,GAAGS,EAAeT,CAAU,EAC5B,gBAAiB,KAAK,IAAIU,EAAoBV,CAAU,EAAG,CAAC,CAAA,EAEhE,CACD,EAEMS,CACT,EAKaG,GAAuBT,GAA6B,CACzD,KAAA,CAAE,WAAAU,EAAY,gBAAAC,CAAoB,EAAAX,EAClCY,EAAc,CAAA,EAGpB,QAASnE,EAAI,EAAGA,EAAIiE,EAAW,OAAQjE,IAAK,CACpC,MAAAoE,EAAWpE,IAAM,EAAI,EAAI,KAAK,MAAMA,EAAI,GAAKkE,GAAmBD,EAAW,OAAS,EAAE,EACtFpE,EAAWG,IAAM,EAAI,EAAI,KAAK,KAAKA,EAAIkE,GAAmBD,EAAW,OAAS,EAAE,EAEtFE,EAAY,KAAK,CACf,MAAOF,EAAWjE,CAAC,EACnB,MAAOA,IAAM,EAAI,MACVA,IAAMiE,EAAW,OAAS,EAAI,GAAGG,CAAQ,IACzCA,IAAavE,EAAW,GAAGuE,CAAQ,GAAK,GAAGA,CAAQ,IAAIvE,CAAQ,GACtE,MAAOG,IAAM,EAAI,EAAIH,EACrB,MAAO,CAAE,IAAKuE,EAAU,IAAKvE,CAAS,CAAA,CACvC,CACH,CAEO,OAAAsE,CACT,EAiHaE,GAAuBjB,GAA+B,CAC3D,MAAAkB,EAASpB,EAAqBE,CAAU,EAC9C,OAAOkB,EAASA,EAAO,UAAYpB,EAAqB,GAAM,SAChE,EC/SMqB,GAAsC,CAAC,CAAE,aAAAC,EAAc,WAAAC,EAAY,oBAAAC,KAA0B,OAEjG,MAAMC,EAAuC,CAC3C,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,MAAA,EAIN,OAAA5B,EAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,wCACZ,SAAA0C,EAAW,aACd,EACC1C,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAI,OAAA,CAAA,EACrD,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA0C,EAAW,kBACd,EACC1C,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAI,OAAA,CAAA,EACrD,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA0C,EAAW,cACd,EACC1C,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAI,OAAA,CAAA,EACrD,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAhB,MAAC,OAAI,UAAU,iDACZ,WAAWZ,EAAAsD,EAAA,YAAA,YAAAtD,EAAW,OAAQ,IACjC,EACCY,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAI,OAAA,CAAA,EACrD,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,YACZ,SAAAyC,EAAa,IAAkBpB,GAAA,CACxB,MAAAG,EAAcmB,EAAoBtB,CAAU,EAClD,GAAI,CAACG,EAAoB,OAAA,KAEnB,MAAAY,EAAcH,GAAoBT,CAAW,EAC7CqB,EAAQD,EAAavB,CAAU,GAAKA,EAGxC,OAAAL,EAAA,KAAC,MAAqB,CAAA,UAAU,YAC9B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACZ,SAAA,CAAA6B,EAAM,QAAMrB,EAAY,gBAAgB,OAAA,EAC3C,EACAxB,EAAAA,IAAC,OAAI,UAAU,oCACZ,WAAY,IAAI,CAAC8C,EAAMvE,IACtByC,EAAA,KAAC,MAAA,CAEC,UAAU,8DAEV,SAAA,CAAAhB,EAAA,IAAC,MAAA,CACC,UAAU,yCACV,MAAO,CAAE,gBAAiB8C,EAAK,KAAM,EACrC,MAAO,GAAGA,EAAK,KAAK,KAAA,CACtB,EACC9C,EAAA,IAAA,OAAA,CAAK,UAAU,gCACb,WAAK,MACR,CAAA,CAAA,EAVKzB,CAYR,CAAA,EACH,CAAA,CAAA,EApBQ8C,CAqBV,CAEH,CAAA,EACH,QAGC,MAAI,CAAA,UAAU,oEACb,SAACL,EAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAqB,SAAE,KAAA,SACrC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,MAAA,CAAI,UAAU,mBAAmB,SAAK,QAAA,EACvCgB,EAAAA,KAAC,KAAG,CAAA,UAAU,YACZ,SAAA,CAAAhB,EAAAA,IAAC,MAAG,SAA2B,6BAAA,CAAA,EAC/BA,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,EACrBA,EAAAA,IAAC,MAAG,SAAmB,qBAAA,CAAA,EACvBA,EAAAA,IAAC,MAAG,SAAiB,mBAAA,CAAA,CAAA,EACvB,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EChCa+C,EAAuB7C,GAAsC,CACxE,MAAM8C,EAAkB9C,EAAQ,QAAQS,GAAUA,EAAO,YAAY,EAE/DsC,EAAqBD,EAAgB,OAAe9B,GAAAA,EAAK,SAAW,QAAQ,EAC5EgC,EAAuBF,EAAgB,OAAe9B,GAAAA,EAAK,SAAW,UAAU,EAEhFiC,EAAcjD,EAAQ,OAAO,CAACkD,EAAOzC,IAAW,CACpD,MAAMM,EAAON,EAAO,WAChB,OAACyC,EAAMnC,CAAI,IACbmC,EAAMnC,CAAI,EAAI,CACZ,iBAAkB,EAClB,aAAc,CAAA,GAGlBmC,EAAMnC,CAAI,EAAE,kBAAoBN,EAAO,aAAa,OAC9CyC,EAAAnC,CAAI,EAAE,cAAgB,EACrBmC,CACT,EAAG,CAAwE,CAAA,EAErEC,EAAYnD,EAAQ,OAAO,CAACoD,EAAK3C,IACrCA,EAAO,aAAa,OAAS2C,EAAI,aAAa,OAAS3C,EAAS2C,EAChEpD,EAAQ,CAAC,GAAK,CAAE,aAAc,CAAI,EAAA,KAAM,GAAI,QAAS,CAAE,KAAM,GAAK,CAAA,EAG7D,MAAA,CACL,aAAcA,EAAQ,OACtB,kBAAmB8C,EAAgB,OACnC,mBAAoBC,EAAmB,OACvC,qBAAsBC,EAAqB,OAC3C,cAAehD,EAAQ,OACvB,cAAeA,EAAQ,OAAOS,GAAUA,EAAO,aAAa,OAAS,CAAC,EAAE,OACxE,UAAW,CACT,KAAM0C,EAAU,KAChB,aAAc,CAAE,OAAQA,EAAU,aAAa,MAAO,EACtD,QAAS,CAAE,KAAMA,EAAU,QAAQ,IAAK,CAC1C,EACA,YAAAF,CAAA,CAEJ,EA4CaI,GAAc,CACzBrD,EACAsD,EACAC,EAAwB,QAET,CAAC,GAAGvD,CAAO,EAAE,KAAK,CAACjD,EAAGE,IAAM,CACzC,IAAIuG,EAAa,EAEjB,OAAQF,EAAQ,CACd,IAAK,OACHE,EAAazG,EAAE,KAAK,cAAcE,EAAE,KAAM,OAAO,EACjD,MACF,IAAK,mBACHuG,EAAazG,EAAE,aAAa,OAASE,EAAE,aAAa,OACpD,MACF,IAAK,UACHuG,EAAazG,EAAE,QAAQ,KAAK,cAAcE,EAAE,QAAQ,KAAM,OAAO,EACjE,KACJ,CAEO,OAAAsG,IAAU,OAAS,CAACC,EAAaA,CAAA,CACzC,EAqBUC,GAAcC,GACf,IAAI,KAAKA,CAAI,EACd,mBAAmB,QAAS,CACnC,KAAM,UACN,MAAO,UACP,IAAK,SAAA,CACN,ECzMGC,GAAsD,CAAC,CAC3D,OAAAlD,EACA,OAAAmD,EACA,QAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAWC,CAAY,EAAI1D,WAAkD,UAAU,EAE1F,GAAA,CAACuD,GAAU,CAACnD,EAAe,OAAA,KAEzB,MAAAuD,EAAa5B,GAAoB3B,EAAO,UAAU,EAClDsC,EAAqBtC,EAAO,aAAa,OAAeO,GAAAA,EAAK,SAAW,QAAQ,EAChFgC,EAAuBvC,EAAO,aAAa,OAAeO,GAAAA,EAAK,SAAW,UAAU,EAE1F,aACG,MAAI,CAAA,UAAU,iFACb,SAACF,EAAA,KAAA,MAAA,CAAI,UAAU,+EAEb,SAAA,CAAAhB,EAAA,IAAC,MAAA,CACC,UAAU,gCACV,MAAO,CAAE,gBAAiBkE,CAAW,EAErC,SAAAlD,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAhB,EAAA,IAAC,KAAG,CAAA,UAAU,qBAAsB,SAAAW,EAAO,KAAK,EAChDK,EAAAA,KAAC,IAAE,CAAA,UAAU,kCACV,SAAA,CAAOL,EAAA,WAAW,MAAIA,EAAO,QAAQ,KAAK,KAAA,EAC7C,CAAA,EACF,EACAX,EAAA,IAAC,SAAA,CACC,QAAS+D,EACT,UAAU,+JACX,SAAA,GAAA,CAED,CAAA,EACF,CAAA,CACF,QAGC,MAAI,CAAA,UAAU,2BACb,SAAC/D,EAAA,IAAA,MAAA,CAAI,UAAU,sBACZ,SAAA,CACC,CAAE,IAAK,WAAY,MAAO,KAAM,KAAM,IAAK,EAC3C,CAAE,IAAK,eAAgB,MAAO,OAAQ,KAAM,IAAK,EACjD,CAAE,IAAK,UAAW,MAAO,QAAS,KAAM,IAAK,CAAA,EAC7C,IACAmE,GAAAnD,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMiD,EAAaE,EAAI,GAA8C,EAC9E,UAAW,8DACTH,IAAcG,EAAI,IACd,0CACA,0FACN,GAEA,SAAA,CAAAnE,EAAA,IAAC,OAAK,CAAA,UAAU,OAAQ,SAAAmE,EAAI,KAAK,EAChCA,EAAI,KAAA,CAAA,EATAA,EAAI,GAAA,CAWZ,EACH,CACF,CAAA,EAGAnD,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACZ,SAAA,CAAAgD,IAAc,YACbhD,OAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAhB,MAAC,MAAI,CAAA,UAAU,mCACZ,SAAAW,EAAO,aAAa,OACvB,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAI,OAAA,CAAA,EAC7C,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,oCACZ,SAAAiD,EAAmB,OACtB,EACCjD,EAAA,IAAA,MAAA,CAAI,UAAU,yBAAyB,SAAI,OAAA,CAAA,EAC9C,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,kCACZ,SAAAkD,EAAqB,OACxB,EACClD,EAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,SAAI,OAAA,CAAA,EAC5C,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qCACZ,SAAA,CAAA,KAAK,MAAOiC,EAAmB,OAAStC,EAAO,aAAa,OAAU,GAAG,GAAK,EAAE,GAAA,EACnF,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,0BAA0B,SAAG,MAAA,CAAA,EAC9C,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,iDAAiD,SAE/D,SAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,WAAO,aACL,KAAK,CAAC/C,EAAGE,IAAM,IAAI,KAAKA,EAAE,eAAe,EAAE,QAAQ,EAAI,IAAI,KAAKF,EAAE,eAAe,EAAE,QAAS,CAAA,EAC5F,MAAM,EAAG,CAAC,EACV,IAAImH,GACFpD,OAAA,MAAA,CAAyB,UAAU,8DAClC,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,kCACZ,SAAAoE,EAAY,KACf,EACCpE,EAAA,IAAA,MAAA,CAAI,UAAU,gCACZ,WAAY,QACf,CAAA,EACF,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAhB,MAAC,OAAI,UAAU,gCACZ,SAAW2D,GAAAS,EAAY,eAAe,EACzC,EACCpE,EAAA,IAAA,MAAA,CAAI,UAAW,kCACdoE,EAAY,SAAW,SACnB,8BACA,yBACN,GACG,SAAAA,EAAY,SAAW,SAAW,KAAO,KAC5C,CAAA,EACF,CApBQ,CAAA,EAAAA,EAAY,EAqBtB,CACD,EACL,CAAA,EACF,CAAA,EACF,EAGDJ,IAAc,gBACZhD,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,4CAA4C,SAAA,CAAA,SACjDL,EAAO,aAAa,OAAO,GAAA,EACpC,QACC,MAAI,CAAA,UAAU,iBACb,SAACK,EAAA,KAAA,OAAA,CAAK,UAAU,gCAAgC,SAAA,CAAA,OACzCiC,EAAmB,OAAO,UAAQC,EAAqB,MAAA,CAAA,CAC9D,CACF,CAAA,CAAA,EACF,EAEClD,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,WAAO,aAAa,IACnBoE,GAAApE,EAAAA,IAACqE,GAAqC,CAAA,YAAAD,CAAA,EAAhBA,EAAY,EAA8B,CACjE,EACH,CAAA,EACF,EAGDJ,IAAc,WACZhD,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,+EAA+E,SAE9F,KAAA,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAhB,MAAC,KAAG,CAAA,UAAU,4CACX,SAAAW,EAAO,QAAQ,KAClB,EACAK,EAAAA,KAAC,IAAE,CAAA,UAAU,6BACV,SAAA,CAAOL,EAAA,WAAW,KAAA,EACrB,CAAA,EACF,CAAA,EACF,EAEAK,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,kCAAkC,SAAI,OAAA,EACpDgB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAE,KAAA,EACzCA,EAAA,IAAA,OAAA,CAAM,SAAOW,EAAA,QAAQ,QAAQ,CAAA,EAChC,EACCA,EAAO,QAAQ,OACbK,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAE,KAAA,EACzCA,EAAA,IAAA,OAAA,CAAM,SAAOW,EAAA,QAAQ,MAAM,CAAA,EAC9B,CAAA,EAEJ,CAAA,EACF,EAEAK,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,kCAAkC,SAAI,OAAA,EACpDgB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,EAC7CA,EAAAA,IAAC,OAAM,CAAA,SAAAW,EAAO,IAAK,CAAA,CAAA,EACrB,EACAK,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,QAC5C,OAAK,CAAA,UAAU,gBAAiB,SAAAW,EAAO,aAAa,OAAO,CAAA,EAC9D,EACAK,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,EAC5CA,EAAA,IAAA,OAAA,CAAK,UAAU,+BAAgC,WAAmB,OAAO,CAAA,EAC5E,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,EAEJ,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,iEACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS+D,EACT,UAAU,sCACX,SAAA,IAAA,CAAA,EAGH,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EAGMM,GAA0D,CAAC,CAAE,YAAAD,KAE/DpE,EAAAA,IAAC,MAAI,CAAA,UAAU,0EACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,mCACb,SAAAgB,EAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAhB,EAAA,IAAC,KAAG,CAAA,UAAU,kCAAmC,SAAAoE,EAAY,KAAK,EACjEpE,EAAA,IAAA,OAAA,CAAK,UAAW,kCACfoE,EAAY,SAAW,SACnB,8BACA,yBACN,GACG,SAAAA,EAAY,SAAW,SAAW,KAAO,KAC5C,CAAA,EACF,EACApD,EAAAA,KAAC,IAAE,CAAA,UAAU,qCAAqC,SAAA,CAAA,MAC5CoD,EAAY,OAAA,EAClB,EACApD,EAAAA,KAAC,IAAE,CAAA,UAAU,qCAAqC,SAAA,CAAA,UACxC2C,GAAWS,EAAY,eAAe,CAAA,EAChD,EACCA,EAAY,aACXpE,EAAA,IAAC,KAAE,UAAU,qCACV,WAAY,YACf,CAAA,EAEJ,EACF,CACF,CAAA,EC3PEsE,GAAwC,CAAC,CAC7C,SAAAC,EACA,UAAAC,EACA,QAAAC,EACA,mBAAAC,EACA,aAAAC,CACF,IAEI3D,EAAA,KAAC,MAAI,CAAA,UAAU,0GACb,SAAA,CAAAhB,EAAA,IAAC,SAAA,CACC,QAASuE,EACT,UAAU,2GACV,MAAM,SACP,SAAA,KAAA,CAED,EACAvE,EAAA,IAAC,SAAA,CACC,QAASwE,EACT,UAAU,2GACV,MAAM,SACP,SAAA,KAAA,CAED,EACAxE,EAAA,IAAC,SAAA,CACC,QAASyE,EACT,UAAU,2GACV,MAAM,WACP,SAAA,IAAA,CAED,EACAzE,EAAAA,IAAC,MAAI,CAAA,UAAU,oCAAqC,CAAA,EACpDA,EAAA,IAAC,SAAA,CACC,QAAS0E,EACT,UAAU,2GACV,MAAOC,EAAe,OAAS,OAE9B,WAAe,IAAM,GAAA,CACxB,CACF,CAAA,CAAA,EChDEC,EAAmBC,GAAgB,CACvC,IAAIC,EACJ,MAAMC,EAA4B,IAAI,IAChCC,EAAW,CAACC,EAASC,IAAY,CACrC,MAAMC,EAAY,OAAOF,GAAY,WAAaA,EAAQH,CAAK,EAAIG,EACnE,GAAI,CAAC,OAAO,GAAGE,EAAWL,CAAK,EAAG,CAChC,MAAMM,EAAgBN,EACtBA,EAASI,IAA4B,OAAOC,GAAc,UAAYA,IAAc,MAAQA,EAAY,OAAO,OAAO,CAAA,EAAIL,EAAOK,CAAS,EAC1IJ,EAAU,QAASM,GAAaA,EAASP,EAAOM,CAAa,CAAC,CAC/D,CACL,EACQE,EAAW,IAAMR,EAcjBS,EAAM,CAAE,SAAAP,EAAU,SAAAM,EAAU,gBAbV,IAAME,EAaqB,UAZhCH,IACjBN,EAAU,IAAIM,CAAQ,EACf,IAAMN,EAAU,OAAOM,CAAQ,GAUsB,QAR9C,IAAM,CAMpBN,EAAU,MAAK,CACnB,GAEQS,EAAeV,EAAQD,EAAYG,EAAUM,EAAUC,CAAG,EAChE,OAAOA,CACT,EACME,GAAeZ,GAAgBA,EAAcD,EAAgBC,CAAW,EAAID;;;;;;;;GClBlF,IAAIc,EAAQjJ,EACZ,SAASkJ,GAAGC,EAAGC,EAAG,CAChB,OAAQD,IAAMC,IAAYD,IAAN,GAAW,EAAIA,IAAM,EAAIC,IAAQD,IAAMA,GAAKC,IAAMA,CACxE,CACA,IAAIC,GAA0B,OAAO,OAAO,IAA7B,WAAkC,OAAO,GAAKH,GAC3DpF,GAAWmF,EAAM,SACjB3G,GAAY2G,EAAM,UAClBK,GAAkBL,EAAM,gBACxBM,GAAgBN,EAAM,cACxB,SAASO,GAAuBC,EAAWC,EAAa,CACtD,IAAIC,EAAQD,EAAa,EACvBE,EAAY9F,GAAS,CAAE,KAAM,CAAE,MAAO6F,EAAO,YAAaD,CAAW,EAAI,EACzEjF,EAAOmF,EAAU,CAAC,EAAE,KACpBC,EAAcD,EAAU,CAAC,EAC3B,OAAAN,GACE,UAAY,CACV7E,EAAK,MAAQkF,EACblF,EAAK,YAAciF,EACnBI,EAAuBrF,CAAI,GAAKoF,EAAY,CAAE,KAAMpF,CAAI,CAAE,CAC3D,EACD,CAACgF,EAAWE,EAAOD,CAAW,CAClC,EACEpH,GACE,UAAY,CACV,OAAAwH,EAAuBrF,CAAI,GAAKoF,EAAY,CAAE,KAAMpF,CAAI,CAAE,EACnDgF,EAAU,UAAY,CAC3BK,EAAuBrF,CAAI,GAAKoF,EAAY,CAAE,KAAMpF,CAAI,CAAE,CAClE,CAAO,CACF,EACD,CAACgF,CAAS,CACd,EACEF,GAAcI,CAAK,EACZA,CACT,CACA,SAASG,EAAuBrF,EAAM,CACpC,IAAIsF,EAAoBtF,EAAK,YAC7BA,EAAOA,EAAK,MACZ,GAAI,CACF,IAAIuF,EAAYD,IAChB,MAAO,CAACV,GAAS5E,EAAMuF,CAAS,CACjC,MAAe,CACd,MAAO,EACR,CACH,CACA,SAASC,GAAuBR,EAAWC,EAAa,CACtD,OAAOA,EAAW,CACpB,CACA,IAAIQ,GACc,OAAO,OAAvB,KACgB,OAAO,OAAO,SAA9B,KACgB,OAAO,OAAO,SAAS,cAAvC,IACID,GACAT,GACsBW,GAAA,qBACflB,EAAM,uBAAjB,OAAwCA,EAAM,qBAAuBiB,GC9DrEE,GAAA,QAAiBpK;;;;;;;;GCQnB,IAAIiJ,EAAQjJ,EACVkK,GAAOG,GACT,SAASnB,GAAGC,EAAGC,EAAG,CAChB,OAAQD,IAAMC,IAAYD,IAAN,GAAW,EAAIA,IAAM,EAAIC,IAAQD,IAAMA,GAAKC,IAAMA,CACxE,CACA,IAAIC,GAA0B,OAAO,OAAO,IAA7B,WAAkC,OAAO,GAAKH,GAC3DoB,GAAuBJ,GAAK,qBAC5B9H,GAAS6G,EAAM,OACf3G,GAAY2G,EAAM,UAClBsB,GAAUtB,EAAM,QAChBM,GAAgBN,EAAM,cACxBuB,GAAA,iCAA2C,SACzCf,EACAC,EACAe,EACAC,EACAC,EACA,CACA,IAAIC,EAAUxI,GAAO,IAAI,EACzB,GAAawI,EAAQ,UAAjB,KAA0B,CAC5B,IAAInG,EAAO,CAAE,SAAU,GAAI,MAAO,MAClCmG,EAAQ,QAAUnG,CACtB,MAASA,EAAOmG,EAAQ,QACtBA,EAAUL,GACR,UAAY,CACV,SAASM,EAAiBC,EAAc,CACtC,GAAI,CAACC,EAAS,CAIZ,GAHAA,EAAU,GACVC,EAAmBF,EACnBA,EAAeJ,EAASI,CAAY,EACrBH,IAAX,QAAsBlG,EAAK,SAAU,CACvC,IAAIwG,EAAmBxG,EAAK,MAC5B,GAAIkG,EAAQM,EAAkBH,CAAY,EACxC,OAAQI,EAAoBD,CAC/B,CACD,OAAQC,EAAoBJ,CAC7B,CAED,GADAG,EAAmBC,EACf7B,GAAS2B,EAAkBF,CAAY,EAAG,OAAOG,EACrD,IAAIE,EAAgBT,EAASI,CAAY,EACzC,OAAeH,IAAX,QAAsBA,EAAQM,EAAkBE,CAAa,GACvDH,EAAmBF,EAAeG,IAC5CD,EAAmBF,EACXI,EAAoBC,EAC7B,CACD,IAAIJ,EAAU,GACZC,EACAE,EACAE,EACaX,IAAX,OAA+B,KAAOA,EAC1C,MAAO,CACL,UAAY,CACV,OAAOI,EAAiBnB,EAAW,CAAE,CACtC,EACQ0B,IAAT,KACI,OACA,UAAY,CACV,OAAOP,EAAiBO,EAAsB,CAAE,CACjD,CACb,CACK,EACD,CAAC1B,EAAae,EAAmBC,EAAUC,CAAO,CACtD,EACE,IAAIhB,EAAQW,GAAqBb,EAAWmB,EAAQ,CAAC,EAAGA,EAAQ,CAAC,CAAC,EAClE,OAAAtI,GACE,UAAY,CACVmC,EAAK,SAAW,GAChBA,EAAK,MAAQkF,CACd,EACD,CAACA,CAAK,CACV,EACEJ,GAAcI,CAAK,EACZA,CACT,ECjFE0B,GAAA,QAAiBrL,qCCEb,CAAE,cAAAuJ,EAAe,EAAG+B,EACpB,CAAE,iCAAAC,EAAkC,EAAGC,GAE7C,MAAMC,GAAYC,GAAQA,EAC1B,SAASC,GAAS7C,EAAK4B,EAAWe,GAAUG,EAAY,CAOtD,MAAMC,EAAQN,GACZzC,EAAI,UACJA,EAAI,SACJA,EAAI,gBAAkBA,EAAI,gBAC1B4B,EACAkB,CACJ,EACE,OAAArC,GAAcsC,CAAK,EACZA,CACT,CACA,MAAMC,EAAc1D,GAAgB,CAMlC,MAAMU,EAAM,OAAOV,GAAgB,WAAaY,GAAYZ,CAAW,EAAIA,EACrE2D,EAAgB,CAACrB,EAAUkB,IAAeD,GAAS7C,EAAK4B,EAAUkB,CAAU,EAClF,cAAO,OAAOG,EAAejD,CAAG,EACzBiD,CACT,EACMC,GAAU5D,GAAgBA,EAAc0D,EAAW1D,CAAW,EAAI0D,EC3BlEG,EAAqC,IAAI,IACzCC,EAA6BC,GAAS,CAC1C,MAAMrD,EAAMmD,EAAmB,IAAIE,CAAI,EACvC,OAAKrD,EACE,OAAO,YACZ,OAAO,QAAQA,EAAI,MAAM,EAAE,IAAI,CAAC,CAACsD,EAAKC,CAAI,IAAM,CAACD,EAAKC,EAAK,SAAU,CAAA,CAAC,CAC1E,EAHmB,EAInB,EACMC,GAA+B,CAACC,EAAOC,EAAoBC,IAAY,CAC3E,GAAIF,IAAU,OACZ,MAAO,CACL,KAAM,YACN,WAAYC,EAAmB,QAAQC,CAAO,CACpD,EAEE,MAAMC,EAAqBT,EAAmB,IAAIQ,EAAQ,IAAI,EAC9D,GAAIC,EACF,MAAO,CAAE,KAAM,UAAW,MAAAH,EAAO,GAAGG,CAAkB,EAExD,MAAMC,EAAgB,CACpB,WAAYH,EAAmB,QAAQC,CAAO,EAC9C,OAAQ,CAAE,CACd,EACE,OAAAR,EAAmB,IAAIQ,EAAQ,KAAME,CAAa,EAC3C,CAAE,KAAM,UAAW,MAAAJ,EAAO,GAAGI,CAAa,CACnD,EACMC,GAAe,CAACC,EAAIC,EAAkB,CAAE,IAAK,CAACC,EAAKC,EAAKlE,IAAQ,CACpE,KAAM,CAAE,QAAAmE,EAAS,oBAAAC,EAAqB,MAAAX,EAAO,GAAGE,CAAS,EAAGK,EAC5D,IAAIN,EACJ,GAAI,CACFA,GAAsBS,GAA6B,KAAsE,OAAO,4BACjI,MAAY,CACZ,CACD,GAAI,CAACT,EAMH,OAAOK,EAAGE,EAAKC,EAAKlE,CAAG,EAEzB,KAAM,CAAE,WAAAqE,EAAY,GAAGC,CAAuB,EAAGd,GAA6BC,EAAOC,EAAoBC,CAAO,EAChH,IAAIY,EAAc,GAClBvE,EAAI,SAAW,CAACT,EAAOI,EAAS6E,IAAiB,CAC/C,MAAMC,EAAIR,EAAI1E,EAAOI,CAAO,EAC5B,GAAI,CAAC4E,EAAa,OAAOE,EACzB,MAAMC,EAASF,IAAiB,OAAS,CAAE,KAAMJ,GAAuB,WAAa,EAAG,OAAOI,GAAiB,SAAW,CAAE,KAAMA,CAAY,EAAKA,EACpJ,OAAIf,IAAU,QACZY,GAAc,MAAgBA,EAAW,KAAKK,EAAQR,EAAG,CAAE,EACpDO,IAETJ,GAAc,MAAgBA,EAAW,KACvC,CACE,GAAGK,EACH,KAAM,GAAGjB,CAAK,IAAIiB,EAAO,IAAI,EAC9B,EACD,CACE,GAAGtB,EAA0BO,EAAQ,IAAI,EACzC,CAACF,CAAK,EAAGzD,EAAI,SAAU,CACxB,CACP,EACWyE,EACX,EACE,MAAME,EAAuB,IAAIjN,IAAM,CACrC,MAAMkN,EAAsBL,EAC5BA,EAAc,GACdN,EAAI,GAAGvM,CAAC,EACR6M,EAAcK,CAClB,EACQ3E,EAAe8D,EAAG/D,EAAI,SAAUkE,EAAKlE,CAAG,EAc9C,GAbIsE,EAAsB,OAAS,YACjCD,GAAc,MAAgBA,EAAW,KAAKpE,CAAY,GAE1DqE,EAAsB,OAAOA,EAAsB,KAAK,EAAItE,EAC5DqE,GAAc,MAAgBA,EAAW,KACvC,OAAO,YACL,OAAO,QAAQC,EAAsB,MAAM,EAAE,IAAI,CAAC,CAAChB,EAAKuB,CAAM,IAAM,CAClEvB,EACAA,IAAQgB,EAAsB,MAAQrE,EAAe4E,EAAO,SAAU,CAChF,CAAS,CACF,CACP,GAEM7E,EAAI,sBAAwB,OAAOA,EAAI,UAAa,WAAY,CAClE,IAAI8E,EAAiC,GACrC,MAAMC,EAAmB/E,EAAI,SAC7BA,EAAI,SAAW,IAAItI,IAAM,CAOvBqN,EAAiB,GAAGrN,CAAC,CAC3B,CACG,CACD,OAAA2M,EAAW,UAAWW,GAAY,CAChC,IAAInL,EACJ,OAAQmL,EAAQ,KAAI,CAClB,IAAK,SACH,GAAI,OAAOA,EAAQ,SAAY,SAAU,CACvC,QAAQ,MACN,yDACZ,EACU,MACD,CACD,OAAOC,EACLD,EAAQ,QACPN,GAAW,CACV,GAAIA,EAAO,OAAS,aAAc,CAChC,GAAIjB,IAAU,OAAQ,CACpBkB,EAAqBD,EAAO,KAAK,EACjC,MACD,CACG,OAAO,KAAKA,EAAO,KAAK,EAAE,SAAW,GACvC,QAAQ,MACN;AAAA;AAAA;AAAA;AAAA,qBAKlB,EAEc,MAAMQ,EAAoBR,EAAO,MAAMjB,CAAK,EAC5C,GAAoCyB,GAAsB,KACxD,OAEE,KAAK,UAAUlF,EAAI,SAAU,CAAA,IAAM,KAAK,UAAUkF,CAAiB,GACrEP,EAAqBO,CAAiB,EAExC,MACD,CACIlF,EAAI,sBACL,OAAOA,EAAI,UAAa,YAC5BA,EAAI,SAAS0E,CAAM,CACpB,CACX,EACM,IAAK,WACH,OAAQM,EAAQ,QAAQ,KAAI,CAC1B,IAAK,QAEH,OADAL,EAAqB1E,CAAY,EAC7BwD,IAAU,OACLY,GAAc,KAAO,OAASA,EAAW,KAAKrE,EAAI,SAAQ,CAAE,EAE9DqE,GAAc,KAAO,OAASA,EAAW,KAAKjB,EAA0BO,EAAQ,IAAI,CAAC,EAC9F,IAAK,SACH,GAAIF,IAAU,OAAQ,CACpBY,GAAc,MAAgBA,EAAW,KAAKrE,EAAI,SAAQ,CAAE,EAC5D,MACD,CACD,OAAOqE,GAAc,KAAO,OAASA,EAAW,KAAKjB,EAA0BO,EAAQ,IAAI,CAAC,EAC9F,IAAK,WACH,OAAOsB,EAAcD,EAAQ,MAAQzF,GAAU,CAC7C,GAAIkE,IAAU,OAAQ,CACpBkB,EAAqBpF,CAAK,EAC1B8E,GAAc,MAAgBA,EAAW,KAAKrE,EAAI,SAAQ,CAAE,EAC5D,MACD,CACD2E,EAAqBpF,EAAMkE,CAAK,CAAC,EACjCY,GAAc,MAAgBA,EAAW,KAAKjB,EAA0BO,EAAQ,IAAI,CAAC,CACnG,CAAa,EACH,IAAK,gBACL,IAAK,iBACH,OAAOsB,EAAcD,EAAQ,MAAQzF,GAAU,CAC7C,GAAIkE,IAAU,OAAQ,CACpBkB,EAAqBpF,CAAK,EAC1B,MACD,CACG,KAAK,UAAUS,EAAI,SAAU,CAAA,IAAM,KAAK,UAAUT,EAAMkE,CAAK,CAAC,GAChEkB,EAAqBpF,EAAMkE,CAAK,CAAC,CAEjD,CAAa,EACH,IAAK,eAAgB,CACnB,KAAM,CAAE,gBAAA0B,CAAe,EAAKH,EAAQ,QAC9BI,GAAqBvL,EAAKsL,EAAgB,eAAe,MAAM,EAAE,EAAE,CAAC,IAAM,KAAO,OAAStL,EAAG,MACnG,GAAI,CAACuL,EAAmB,OAEtBT,EADElB,IAAU,OACS2B,EAEAA,EAAkB3B,CAAK,CAFN,EAIxCY,GAAc,MAAgBA,EAAW,KACvC,KAEAc,CACd,EACY,MACD,CACD,IAAK,kBACH,OAAOZ,EAAc,CAACA,CACzB,CACD,MACH,CACL,CAAG,EACMtE,CACT,EACMoF,GAAWvB,GACXmB,EAAgB,CAACK,EAAarO,IAAM,CACxC,IAAIsO,EACJ,GAAI,CACFA,EAAS,KAAK,MAAMD,CAAW,CAChC,OAAQxN,EAAG,CACV,QAAQ,MACN,kEACAA,CACN,CACG,CACGyN,IAAW,QAAQtO,EAAEsO,CAAM,CACjC,EA6BA,SAASC,GAAkBC,EAAY9B,EAAS,CAC9C,IAAI+B,EACJ,GAAI,CACFA,EAAUD,EAAU,CACrB,MAAY,CACX,MACD,CAsBD,MArBuB,CACrB,QAAUpC,GAAS,CACjB,IAAIxJ,EACJ,MAAM8L,EAASC,GACTA,IAAS,KACJ,KAEF,KAAK,MAAMA,EAAMjC,GAAW,KAAO,OAASA,EAAQ,OAAO,EAE9DkC,GAAOhM,EAAK6L,EAAQ,QAAQrC,CAAI,IAAM,KAAOxJ,EAAK,KACxD,OAAIgM,aAAe,QACVA,EAAI,KAAKF,CAAK,EAEhBA,EAAME,CAAG,CACjB,EACD,QAAS,CAACxC,EAAMyC,IAAaJ,EAAQ,QACnCrC,EACA,KAAK,UAAUyC,EAAUnC,GAAW,KAAO,OAASA,EAAQ,QAAQ,CACrE,EACD,WAAaN,GAASqC,EAAQ,WAAWrC,CAAI,CACjD,CAEA,CACA,MAAM0C,EAAchC,GAAQiC,GAAU,CACpC,GAAI,CACF,MAAMC,EAASlC,EAAGiC,CAAK,EACvB,OAAIC,aAAkB,QACbA,EAEF,CACL,KAAKC,EAAa,CAChB,OAAOH,EAAWG,CAAW,EAAED,CAAM,CACtC,EACD,MAAME,EAAa,CACjB,OAAO,IACR,CACP,CACG,OAAQrO,EAAG,CACV,MAAO,CACL,KAAKsO,EAAc,CACjB,OAAO,IACR,EACD,MAAMC,EAAY,CAChB,OAAON,EAAWM,CAAU,EAAEvO,CAAC,CAChC,CACP,CACG,CACH,EACMwO,GAAU,CAACC,EAAQC,IAAgB,CAACvC,EAAKC,EAAKlE,IAAQ,CAC1D,IAAI2D,EAAU,CACZ,WAAY,IAAM,aAClB,UAAW,KAAK,UAChB,YAAa,KAAK,MAClB,WAAapE,GAAUA,EACvB,QAAS,EACT,MAAO,CAACkH,EAAgBC,KAAkB,CACxC,GAAGA,EACH,GAAGD,CACT,GACI,GAAGD,CACP,EACMG,EAAc,GAClB,MAAMC,EAAqC,IAAI,IACzCC,EAA2C,IAAI,IACrD,IAAInB,EACJ,GAAI,CACFA,EAAU/B,EAAQ,YACnB,MAAY,CACZ,CACD,GAAI,CAAC+B,EACH,OAAOa,EACL,IAAIO,IAAS,CACX,QAAQ,KACN,uDAAuDnD,EAAQ,IAAI,gDAC7E,EACQM,EAAI,GAAG6C,CAAI,CACZ,EACD5C,EACAlE,CACN,EAEE,MAAM+G,EAAoBhB,EAAWpC,EAAQ,SAAS,EAChDqD,EAAU,IAAM,CACpB,MAAMzH,EAAQoE,EAAQ,WAAW,CAAE,GAAGO,EAAK,CAAA,CAAE,EAC7C,IAAI+C,EACJ,MAAMC,EAAWH,EAAkB,CAAE,MAAAxH,EAAO,QAASoE,EAAQ,OAAS,CAAA,EAAE,KACrEwD,GAAoBzB,EAAQ,QAAQ/B,EAAQ,KAAMwD,CAAe,CACxE,EAAM,MAAOrP,GAAM,CACbmP,EAAcnP,CACpB,CAAK,EACD,GAAImP,EACF,MAAMA,EAER,OAAOC,CACX,EACQE,EAAgBpH,EAAI,SAC1BA,EAAI,SAAW,CAACT,EAAOI,IAAY,CACjCyH,EAAc7H,EAAOI,CAAO,EACvBqH,EAAO,CAChB,EACE,MAAMK,EAAed,EACnB,IAAIO,IAAS,CACX7C,EAAI,GAAG6C,CAAI,EACNE,EAAO,CACb,EACD9C,EACAlE,CACJ,EACE,IAAIsH,EACJ,MAAMC,EAAU,IAAM,CACpB,IAAI1N,EACJ,GAAI,CAAC6L,EAAS,OACdiB,EAAc,GACdC,EAAmB,QAASY,GAAOA,EAAGtD,EAAK,CAAA,CAAC,EAC5C,MAAMuD,IAA4B5N,EAAK8J,EAAQ,qBAAuB,KAAO,OAAS9J,EAAG,KAAK8J,EAASO,EAAG,CAAE,IAAM,OAClH,OAAO6B,EAAWL,EAAQ,QAAQ,KAAKA,CAAO,CAAC,EAAE/B,EAAQ,IAAI,EAAE,KAAM+D,GAAiB,CACpF,GAAIA,EACF,OAAO/D,EAAQ,YAAY+D,CAAY,CAE/C,CAAK,EAAE,KAAMC,GAA6B,CACpC,GAAIA,EACF,GAAI,OAAOA,EAAyB,SAAY,UAAYA,EAAyB,UAAYhE,EAAQ,QAAS,CAChH,GAAIA,EAAQ,QACV,OAAOA,EAAQ,QACbgE,EAAyB,MACzBA,EAAyB,OACvC,EAEU,QAAQ,MACN,uFACZ,CACA,KACU,QAAOA,EAAyB,KAG1C,CAAK,EAAE,KAAMC,GAAkB,CACzB,IAAIC,EACJ,OAAAP,EAAmB3D,EAAQ,MACzBiE,GACCC,EAAM3D,EAAG,IAAO,KAAO2D,EAAMR,CACtC,EACMpD,EAAIqD,EAAkB,EAAI,EACnBN,EAAO,CACpB,CAAK,EAAE,KAAK,IAAM,CACZS,GAA2B,MAAgBA,EAAwBH,EAAkB,MAAM,EAC3FX,EAAc,GACdE,EAAyB,QAASW,GAAOA,EAAGF,CAAgB,CAAC,CACnE,CAAK,EAAE,MAAOxP,GAAM,CACd2P,GAA2B,MAAgBA,EAAwB,OAAQ3P,CAAC,CAClF,CAAK,CACL,EACE,OAAAkI,EAAI,QAAU,CACZ,WAAa8H,GAAe,CAC1BnE,EAAU,CACR,GAAGA,EACH,GAAGmE,CACX,EACUA,EAAW,aACbpC,EAAUoC,EAAW,aAExB,EACD,aAAc,IAAM,CAClBpC,GAAW,MAAgBA,EAAQ,WAAW/B,EAAQ,IAAI,CAC3D,EACD,WAAY,IAAMA,EAClB,UAAW,IAAM4D,EAAS,EAC1B,YAAa,IAAMZ,EACnB,UAAYa,IACVZ,EAAmB,IAAIY,CAAE,EAClB,IAAM,CACXZ,EAAmB,OAAOY,CAAE,CACpC,GAEI,kBAAoBA,IAClBX,EAAyB,IAAIW,CAAE,EACxB,IAAM,CACXX,EAAyB,OAAOW,CAAE,CAC1C,EAEA,EACED,IACOD,GAAoBD,CAC7B,EACMU,GAAU,CAACxB,EAAQC,IAAgB,CAACvC,EAAKC,EAAKlE,IAAQ,CAC1D,IAAI2D,EAAU,CACZ,QAAS6B,GAAkB,IAAM,YAAY,EAC7C,WAAajG,GAAUA,EACvB,QAAS,EACT,MAAO,CAACkH,EAAgBC,KAAkB,CACxC,GAAGA,EACH,GAAGD,CACT,GACI,GAAGD,CACP,EACMG,EAAc,GAClB,MAAMC,EAAqC,IAAI,IACzCC,EAA2C,IAAI,IACrD,IAAInB,EAAU/B,EAAQ,QACtB,GAAI,CAAC+B,EACH,OAAOa,EACL,IAAIO,IAAS,CACX,QAAQ,KACN,uDAAuDnD,EAAQ,IAAI,gDAC7E,EACQM,EAAI,GAAG6C,CAAI,CACZ,EACD5C,EACAlE,CACN,EAEE,MAAMgH,EAAU,IAAM,CACpB,MAAMzH,EAAQoE,EAAQ,WAAW,CAAE,GAAGO,EAAK,CAAA,CAAE,EAC7C,OAAOwB,EAAQ,QAAQ/B,EAAQ,KAAM,CACnC,MAAApE,EACA,QAASoE,EAAQ,OACvB,CAAK,CACL,EACQyD,EAAgBpH,EAAI,SAC1BA,EAAI,SAAW,CAACT,EAAOI,IAAY,CACjCyH,EAAc7H,EAAOI,CAAO,EACvBqH,EAAO,CAChB,EACE,MAAMK,EAAed,EACnB,IAAIO,IAAS,CACX7C,EAAI,GAAG6C,CAAI,EACNE,EAAO,CACb,EACD9C,EACAlE,CACJ,EACEA,EAAI,gBAAkB,IAAMqH,EAC5B,IAAIC,EACJ,MAAMC,EAAU,IAAM,CACpB,IAAI1N,EAAIG,EACR,GAAI,CAAC0L,EAAS,OACdiB,EAAc,GACdC,EAAmB,QAASY,GAAO,CACjC,IAAIK,EACJ,OAAOL,GAAIK,EAAM3D,EAAK,IAAK,KAAO2D,EAAMR,CAAY,CAC1D,CAAK,EACD,MAAMI,IAA4BzN,EAAK2J,EAAQ,qBAAuB,KAAO,OAAS3J,EAAG,KAAK2J,GAAU9J,EAAKqK,EAAK,IAAK,KAAOrK,EAAKwN,CAAY,IAAM,OACrJ,OAAOtB,EAAWL,EAAQ,QAAQ,KAAKA,CAAO,CAAC,EAAE/B,EAAQ,IAAI,EAAE,KAAMgE,GAA6B,CAChG,GAAIA,EACF,GAAI,OAAOA,EAAyB,SAAY,UAAYA,EAAyB,UAAYhE,EAAQ,QAAS,CAChH,GAAIA,EAAQ,QACV,MAAO,CACL,GACAA,EAAQ,QACNgE,EAAyB,MACzBA,EAAyB,OAC1B,CACf,EAEU,QAAQ,MACN,uFACZ,CACA,KACU,OAAO,CAAC,GAAOA,EAAyB,KAAK,EAGjD,MAAO,CAAC,GAAO,MAAM,CAC3B,CAAK,EAAE,KAAMK,GAAoB,CAC3B,IAAIH,EACJ,KAAM,CAACI,EAAUL,CAAa,EAAII,EAMlC,GALAV,EAAmB3D,EAAQ,MACzBiE,GACCC,EAAM3D,EAAG,IAAO,KAAO2D,EAAMR,CACtC,EACMpD,EAAIqD,EAAkB,EAAI,EACtBW,EACF,OAAOjB,EAAO,CAEtB,CAAK,EAAE,KAAK,IAAM,CACZS,GAA2B,MAAgBA,EAAwBH,EAAkB,MAAM,EAC3FA,EAAmBpD,EAAG,EACtByC,EAAc,GACdE,EAAyB,QAASW,GAAOA,EAAGF,CAAgB,CAAC,CACnE,CAAK,EAAE,MAAOxP,GAAM,CACd2P,GAA2B,MAAgBA,EAAwB,OAAQ3P,CAAC,CAClF,CAAK,CACL,EACE,OAAAkI,EAAI,QAAU,CACZ,WAAa8H,GAAe,CAC1BnE,EAAU,CACR,GAAGA,EACH,GAAGmE,CACX,EACUA,EAAW,UACbpC,EAAUoC,EAAW,QAExB,EACD,aAAc,IAAM,CAClBpC,GAAW,MAAgBA,EAAQ,WAAW/B,EAAQ,IAAI,CAC3D,EACD,WAAY,IAAMA,EAClB,UAAW,IAAM4D,EAAS,EAC1B,YAAa,IAAMZ,EACnB,UAAYa,IACVZ,EAAmB,IAAIY,CAAE,EAClB,IAAM,CACXZ,EAAmB,OAAOY,CAAE,CACpC,GAEI,kBAAoBA,IAClBX,EAAyB,IAAIW,CAAE,EACxB,IAAM,CACXX,EAAyB,OAAOW,CAAE,CAC1C,EAEA,EACO7D,EAAQ,eACX4D,IAEKD,GAAoBD,CAC7B,EACMa,GAAc,CAAC3B,EAAQC,IACvB,eAAgBA,GAAe,cAAeA,GAAe,gBAAiBA,EAMzEF,GAAQC,EAAQC,CAAW,EAE7BuB,GAAQxB,EAAQC,CAAW,EAE9B2B,GAAUD,GC7gBT,MAAME,EAAqB,CAQhC,YAAYC,EAAkBC,EAAiBC,EAAqB,CAP5DC,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,eAEJ,+CAGF,KAAK,SAAWH,EAChB,KAAK,QAAUC,EACf,KAAK,YAAcC,CACrB,CAKA,MAAM,uBAA6D,CAC7D,GAAA,CACF,MAAME,EAAW,MAAM,MACrB,GAAG,KAAK,OAAO,SAAS,KAAK,QAAQ,WAAW,KAAK,OAAO,yBAC5D,CACE,OAAQ,MACR,QAAS,CACP,cAAiB,UAAU,KAAK,WAAW,GAC3C,eAAgB,kBAClB,CACF,CAAA,EAGE,GAAA,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,eAAeA,EAAS,UAAU,EAAE,EAI/C,OADM,MAAMA,EAAS,QAChB,KAAK,OAAS,SACnB7O,EAAO,CACN,cAAA,MAAM,cAAeA,CAAK,EAC5BA,CACR,CACF,CAKQ,cAAc8O,EAA2C,CAC/D,MAAMC,EAASD,EAAO,OAEf,MAAA,CAAC,EACNC,EAAO,MAAWA,EAAO,KAAQ,SAAW,IAC5CA,EAAO,MAAWA,EAAO,KAAQ,KAAK,IAAM,IAC5CA,EAAO,MAAWA,EAAO,KAAQ,KAAW,IAAA,GAEhD,CAKQ,kBAAkBD,EAAiE,CACzF,MAAMC,EAASD,EAAO,OAEf,MAAA,CACL,UAAWA,EAAO,UAClB,OAAQ,CACN,KAAQC,EAAO,MAAW,QAC1B,KAAQA,EAAO,MAAW,GAAGA,EAAO,MAAW,MAAM,KACrD,KAAQA,EAAO,MAAW,OAC1B,KAAQA,EAAO,MAAW,MAC1B,IAAOA,EAAO,KAAU,MACxB,QAAWA,EAAO,SAAc,UAChC,MAASA,EAAO,OAAY,GAC5B,KAAQA,EAAO,MAAW,aAC1B,GAAMA,EAAO,IAAS,KACtB,GAAMA,EAAO,IAAS,EACxB,CAAA,CAEJ,CAKA,MAAM,mBAAqD,CAGzD,MAAO,EACT,CAKA,sBACEC,EACAC,EAAyC,CAAA,EACzCC,EACc,CAEd,MAAMC,EAAeH,EAAmB,UAAiB,KAAK,cAAcF,CAAM,CAAC,EAC7EM,EAAsBD,EAAa,OAAc,KAAK,kBAAkBL,CAAM,CAAC,EAE7E,QAAA,IAAI,cAAcE,EAAmB,MAAM,SAASG,EAAa,MAAM,UAAUC,EAAoB,MAAM,GAAG,EAGtH,MAAMC,EAAyBD,EAAoB,OAAO,CAACE,EAAKR,IAAW,CACnE,MAAAS,EAAWT,EAAO,OAAO,KAC3B,OAACQ,EAAIC,CAAQ,IACXD,EAAAC,CAAQ,EAAI,IAEdD,EAAAC,CAAQ,EAAE,KAAKT,CAAM,EAClBQ,CACT,EAAG,CAAqD,CAAA,EAGlDE,EAAmBP,EAAe,OAAO,CAACK,EAAKR,IAAW,CACxD,MAAAtN,EAASsN,EAAO,OAAO,KAC7B,OAAAQ,EAAI9N,CAAM,EAAIsN,EACPQ,CACT,EAAG,CAA0C,CAAA,EAGvCvO,EAAwB,CAAA,EAEvB,cAAA,QAAQsO,CAAsB,EAAE,QAAQ,CAAC,CAACE,EAAUE,CAAY,IAAM,OAC3E,GAAIA,EAAa,SAAW,GAAK,CAACF,GAAYA,IAAa,OAAQ,OAG/D,IAAArN,EAEAgN,EAEWhN,IAAAjC,EAAA,OAAO,QAAQiP,CAAa,EAAE,KAAK,CAAC,CAAG,CAAAQ,CAAS,IAC3DA,EAAU,SAASH,CAAQ,CAAA,IADhB,YAAAtP,EAET,KAAM,MAGViC,EAAauN,EAAa,CAAC,EAAE,OAAO,KAIhC,MAAAE,EAAgBH,EAAiBtN,CAAU,EAC3C0N,EAAiBH,EAAa,CAAC,EAAE,OAAO,IAGxCI,EAAyCJ,EAAa,IAAa1N,IAAA,CACvE,GAAIA,EAAK,UACT,KAAMA,EAAK,OAAO,KAClB,QAASA,EAAK,OAAO,KACrB,gBAAiB,IAAI,KAAKA,EAAK,OAAO,IAAO,EAC7C,OAAQA,EAAK,OAAO,KAAU,KAAO,SAAW,WAChD,SAAUwN,EACV,YAAaxN,EAAK,OAAO,EACzB,EAAA,EAGI+N,EAAyB,CAC7B,GAAIP,EACJ,KAAMA,EACN,WAAArN,EACA,QAAS,CACP,IAAIyN,GAAA,YAAAA,EAAe,YAAa,WAAWzN,CAAU,GACrD,MAAMyN,GAAA,YAAAA,EAAe,OAAO,QAAYC,EACxC,SAASD,GAAA,YAAAA,EAAe,OAAO,OAAWF,EAAa,CAAC,EAAE,OAAO,QACjE,OAAOE,GAAA,YAAAA,EAAe,OAAO,OAAWF,EAAa,CAAC,EAAE,OAAO,MAC/D,OAAQE,GAAA,YAAAA,EAAe,OAAO,EAChC,EACA,aAAcE,CAAA,EAGhB9O,EAAQ,KAAK+O,CAAU,CAAA,CACxB,EAEM/O,CACT,CAKA,MAAM,mBAAmBgP,EAA0D,CAIjF,MAAMC,EAAO,SAAY,CACnB,GAAA,CACI,MAAAhB,EAAqB,MAAM,KAAK,wBAChCC,EAAiB,MAAM,KAAK,oBAC5BlO,EAAU,KAAK,sBAAsBiO,EAAoBC,CAAc,EAC7Ec,EAAShP,CAAO,QACTf,EAAO,CACN,QAAA,MAAM,UAAWA,CAAK,CAChC,CAAA,EAIF,MAAMgQ,EAAK,EAGX,YAAYA,EAAM,GAAY,CAChC,CAKA,MAAM,wBAAwBC,EAAkBC,EAAoC,CAC9E,GAAA,CACF,MAAMrB,EAAW,MAAM,MACrB,GAAG,KAAK,OAAO,SAAS,KAAK,QAAQ,WAAW,KAAK,OAAO,YAAYoB,CAAQ,GAChF,CACE,OAAQ,MACR,QAAS,CACP,cAAiB,UAAU,KAAK,WAAW,GAC3C,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,OAAQ,CACN,GAAMC,CACR,CAAA,CACD,CACH,CAAA,EAGE,GAAA,CAACrB,EAAS,GACZ,MAAM,IAAI,MAAM,WAAWA,EAAS,UAAU,EAAE,QAE3C7O,EAAO,CACN,cAAA,MAAM,cAAeA,CAAK,EAC5BA,CACR,CACF,CAKA,MAAM,eAAeiF,EAWD,CACd,GAAA,CACF,MAAM4J,EAAW,MAAM,MACrB,GAAG,KAAK,OAAO,SAAS,KAAK,QAAQ,WAAW,KAAK,OAAO,WAC5D,CACE,OAAQ,OACR,QAAS,CACP,cAAiB,UAAU,KAAK,WAAW,GAC3C,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,OAAQ,CACN,KAAQ5J,EAAY,KACpB,KAAQA,EAAY,QACpB,KAAQA,EAAY,SACpB,KAAQA,EAAY,WACpB,IAAOA,EAAY,QACnB,QAAWA,EAAY,QACvB,MAASA,EAAY,MACrB,KAAQA,EAAY,gBAAgB,cAAc,MAAM,GAAG,EAAE,CAAC,EAC9D,GAAMA,EAAY,OAClB,GAAMA,EAAY,WACpB,CAAA,CACD,CACH,CAAA,EAGE,GAAA,CAAC4J,EAAS,GACZ,MAAM,IAAI,MAAM,WAAWA,EAAS,UAAU,EAAE,EAI3C,OADM,MAAMA,EAAS,QAChB,KAAK,OAAO,gBACjB7O,EAAO,CACN,cAAA,MAAM,cAAeA,CAAK,EAC5BA,CACR,CACF,CACF,CCtUA,MAAMmQ,GAAqB,CAACpP,EAAuBmO,IAC1CnO,EAAQ,IAAcS,GAAA,OAE3B,MAAM4O,GAAgBnQ,EAAA,OAAO,QAAQiP,CAAa,EAAE,KAAK,CAAC,CAAA,CAAGQ,CAAS,IACpEA,EAAU,SAASlO,EAAO,IAAI,KADV,YAAAvB,EAElB,GAEA,OAAAmQ,GAAiBA,IAAkB5O,EAAO,WACrC,CACL,GAAGA,EACH,WAAY4O,CAAA,EAIT5O,CAAA,CACR,EAiFG6E,GAAyB,CAC7B,QAAS,CAAC,EACV,aAAc,CAAC,EACf,WAAY,KACZ,eAAgB,KAChB,cAAe,KACf,aAAc,GACd,gBAAiB,GACjB,aAAc,GACd,cAAe,CAAC,EAChB,WAAY,GACZ,OAAQ,OACR,UAAW,MACX,aAAc,CACZ,UAAW,GACX,MAAO,KACP,YAAa,IACf,EACA,YAAa,KACb,cAAe,CACb,SAAU,8BACV,QAAS,mBACT,YAAa,4CACf,EACA,WAAY,UACZ,cAAe,IACjB,EAEagK,EAAc/G,GAAiB,EAC1CmC,GACE8C,GACE,CAAClE,EAAKC,KAAS,CACb,GAAGjE,GAGH,YAAa,SAAY,CACvB,KAAM,CAAE,WAAAiK,EAAY,cAAAC,EAAe,cAAArB,GAAkB5E,EAAI,EAEzDD,EAAK1E,IAAW,CACd,aAAc,CAAE,GAAGA,EAAM,aAAc,UAAW,GAAM,MAAO,IAAK,CACpE,EAAA,EAEE,GAAA,CACE,IAAA5E,EAEA,GAAAuP,IAAe,WAAaC,EAAe,CAE7C,MAAMC,EAAiB,IAAIhC,GACzB+B,EAAc,SACdA,EAAc,QACdA,EAAc,WAAA,EAGVvB,EAAqB,MAAMwB,EAAe,wBAC1CvB,EAAiB,MAAMuB,EAAe,oBAC5CzP,EAAUyP,EAAe,sBAAsBxB,EAAoBC,EAAgBC,CAAa,CAAA,MAGhG,MAAM,IAAI,QAAQuB,GAAW,WAAWA,EAAS,GAAI,CAAC,EACtD1P,EAAUmO,EAAgBiB,GAAmB3R,EAAgB0Q,CAAa,EAAI1Q,EAG1E,MAAA8E,EAAeZ,EAA2B3B,CAAO,EACjDwC,EAAaK,EAAoB7C,CAAO,EAE1CsJ,EAAA,CACF,QAAAtJ,EACA,aAAAuC,EACA,WAAAC,EACA,aAAc,CACZ,UAAW,GACX,MAAO,KACP,YAAa,KAAK,IAAI,CACxB,CAAA,CACD,QACMvD,EAAO,CACdqK,EAAK1E,IAAW,CACd,aAAc,CACZ,GAAGA,EAAM,aACT,UAAW,GACX,MAAO,CACL,KAAM,aACN,QAAS3F,aAAiB,MAAQA,EAAM,QAAU,SAClD,QAASA,aAAiB,MAAQ,CAAE,QAASA,EAAM,OAAY,EAAA,OAC/D,UAAW,KAAK,IAAI,CACtB,CACF,CACA,EAAA,CACJ,CACF,EAEA,gBAAiB,MAAO2M,GAAW,CAC7BtC,EAAA,CACF,cAAesC,EACf,WAAY,SAAA,CACb,EAEK,KAAA,CAAE,YAAA+D,GAAgBpG,IACxB,MAAMoG,EAAY,CACpB,EAEA,aAAc,CAACC,EAAkBC,IAAiC,CAChEvG,EAAK1E,GAAU,CACP,MAAAkL,EAAiBlL,EAAM,QAAQ,IAAInE,GACvCA,EAAO,KAAOmP,EAAW,CAAE,GAAGnP,EAAQ,GAAGoP,CAAA,EAAYpP,CAAA,EAGhD,MAAA,CACL,QAASqP,EACT,WAAYjN,EAAoBiN,CAAc,EAC9C,aAAcnO,EAA2BmO,CAAc,CAAA,CACzD,CACD,CACH,EAEA,YAAa,SAAY,CACjB,KAAA,CAAE,YAAAH,GAAgBpG,IACxB,MAAMoG,EAAY,CACpB,EAEA,iBAAmBI,GAAW,CACxBzG,EAAA,CAAE,WAAYyG,CAAA,CAAQ,CAC5B,EAGA,kBAAoBH,GAA4B,CAC9C,MAAMnP,EAASmP,EAAWrG,EAAI,EAAE,QAAQ,KAAU,GAAA,EAAE,KAAOqG,GAAY,EAAE,OAASA,CAAQ,EAAI,KAC1FtG,EAAA,CAAE,eAAgB7I,CAAA,CAAQ,CAChC,EAEA,iBAAmBmP,GAA4B,CACzCtG,EAAA,CAAE,cAAesG,CAAA,CAAU,CACjC,EAEA,eAAgB,IAAM,CACpBtG,EAAK1E,IAAW,CAAE,aAAc,CAACA,EAAM,YAAe,EAAA,CACxD,EAEA,kBAAoBoL,GAAmB,CACrC1G,EAAK1E,IAAW,CACd,gBAAiBoL,IAAS,OAAYA,EAAO,CAACpL,EAAM,eACpD,EAAA,CACJ,EAEA,iBAAkB,IAAM,CACtB0E,EAAK1E,IAAW,CAAE,aAAc,CAACA,EAAM,YAAe,EAAA,CACxD,EAGA,iBAAmBoE,GAAoC,CACrDM,EAAK1E,IAAW,CACd,cAAe,CAAE,GAAGA,EAAM,cAAe,GAAGoE,CAAQ,CACpD,EAAA,CACJ,EAEA,cAAgBiH,GAAiB,CAC3B3G,EAAA,CAAE,WAAY2G,CAAA,CAAM,CAC1B,EAEA,WAAY,CAAC3M,EAA4BC,EAA+B,QAAU,CAChF+F,EAAI,CAAE,OAAAhG,EAAQ,UAAWC,CAAO,CAAA,CAClC,EAEA,aAAc,IAAM,CACd+F,EAAA,CACF,cAAe,CAAC,EAChB,WAAY,GACZ,OAAQ,OACR,UAAW,KAAA,CACZ,CACH,EAGA,mBAAoB,IAAM,CACxB,KAAM,CAAE,QAAAtJ,EAAS,cAAAkQ,EAAe,WAAA/P,EAAY,OAAAmD,EAAQ,UAAA6M,CAAA,EAAc5G,IAElE,IAAI6G,EAAWpQ,EAGf,OAAIG,IACFiQ,EAAWA,EAAS,OAAO3P,GACzBA,EAAO,KAAK,YAAY,EAAE,SAASN,EAAW,YAAa,CAAA,GAC3DM,EAAO,QAAQ,KAAK,YAAY,EAAE,SAASN,EAAW,YAAY,CAAC,GACnEM,EAAO,WAAW,cAAc,SAASN,EAAW,YAAA,CAAa,CAAA,GAKjE+P,EAAc,aAAeA,EAAc,YAAY,OAAS,IAClEE,EAAWA,EAAS,OAClB3P,GAAAyP,EAAc,YAAa,SAASzP,EAAO,UAAU,CAAA,GAIrDyP,EAAc,YAAcA,EAAc,WAAW,OAAS,IAChEE,EAAWA,EAAS,UAClBF,EAAc,WAAY,SAASzP,EAAO,QAAQ,EAAE,CAAA,GAIpDyP,EAAc,mBAAqBA,EAAc,kBAAkB,OAAS,IAC9EE,EAAWA,EAAS,OAAO3P,GACzBA,EAAO,aAAa,KAClBO,GAAAkP,EAAc,kBAAmB,SAASlP,EAAK,MAAM,CACvD,CAAA,GAIAkP,EAAc,YAChBE,EAAWA,EAAS,OAClB3P,GAAAA,EAAO,aAAa,KAAaO,GAAA,CAC/B,MAAM0C,EAAO,IAAI,KAAK1C,EAAK,eAAe,EAC1C,OAAO0C,GAAQwM,EAAc,UAAW,OAASxM,GAAQwM,EAAc,UAAW,GAAA,CACnF,CAAA,GAKE7M,GAAY+M,EAAU9M,EAAQ6M,CAAS,CAChD,EAEA,eAAgB,CAAChP,EAAoBC,IAA6B,CAC1D,KAAA,CAAE,aAAAmB,GAAiBgH,IACnBlI,EAAW,KAAK,IAAI,GAAG,OAAO,OAAOkB,CAAY,EAAE,IAAIF,GAAUA,EAAO,eAAe,EAAG,CAAC,EAC1F,OAAAnB,EAAqBC,EAAYC,EAAkBC,CAAQ,CACpE,EAGA,eAAiBgP,GAAgC,CAC3C/G,EAAA,CAAE,YAAa+G,CAAA,CAAS,CAC9B,EAGA,SAAWpR,GAAyB,CAClCqK,EAAK1E,IAAW,CACd,aAAc,CACZ,GAAGA,EAAM,aACT,MAAO3F,EAAQ,CACb,KAAM,gBACN,QAASA,EACT,QAAS,OACT,UAAW,KAAK,IAAI,CAAA,EAClB,IACN,CACA,EAAA,CACJ,EAEA,WAAY,IAAM,CAChBqK,EAAK1E,IAAW,CACd,aAAc,CAAE,GAAGA,EAAM,aAAc,MAAO,IAAK,CACnD,EAAA,CACJ,EAGA,iBAAmB0L,GAAsC,CACnDhH,EAAA,CAAE,cAAegH,CAAA,CAAS,CAChC,EAEA,kBAAoB9B,GAAqB,CACjC,KAAA,CAAE,cAAAL,GAAkB5E,IAC1B,GAAI,CAAC4E,EAAsB,OAAA,KAE3B,SAAW,CAACoC,EAAY5B,CAAS,IAAK,OAAO,QAAQR,CAAa,EAC5D,GAAAQ,EAAU,SAASH,CAAQ,EACtB,OAAA+B,EAGJ,OAAA,IACT,CAAA,GAEF,CACE,KAAM,YACN,WAAa3L,IAAW,CAEtB,aAAcA,EAAM,aACpB,cAAeA,EAAM,cACrB,OAAQA,EAAM,OACd,UAAWA,EAAM,UACjB,YAAaA,EAAM,YACnB,cAAeA,EAAM,aAAA,EAEzB,CACF,EACA,CACE,KAAM,WACR,CACF,CACF,EAGa4L,GAAa,IAAMlB,EAAa1K,GAAUA,EAAM,OAAO,EACvD6L,GAAoB,IAAMnB,EAAa1K,GAAUA,EAAM,cAAc,EACrE8L,GAAkB,IAAMpB,EAAa1K,GAAUA,EAAM,YAAY,EACjE+L,GAAgB,IAAMrB,EAAa1K,GAAUA,EAAM,UAAU,EAE7DgM,GAAa,IAAMtB,EAAa1K,IAAW,CACtD,aAAcA,EAAM,aACpB,gBAAiBA,EAAM,gBACvB,aAAcA,EAAM,aACpB,cAAeA,EAAM,aACvB,EAAE,EAGWiM,GAAgB,IAAMvB,EAAa1K,IAAW,CACzD,YAAaA,EAAM,YACnB,kBAAmBA,EAAM,kBACzB,iBAAkBA,EAAM,iBACxB,eAAgBA,EAAM,eACtB,kBAAmBA,EAAM,kBACzB,iBAAkBA,EAAM,iBACxB,iBAAkBA,EAAM,iBACxB,cAAeA,EAAM,cACrB,WAAYA,EAAM,WAClB,aAAcA,EAAM,aACpB,YAAaA,EAAM,YACnB,SAAUA,EAAM,SAChB,WAAYA,EAAM,UACpB,EAAE,ECtZIkM,GAA4C,CAAC,CACjD,QAAA9Q,EACA,QAAAxB,EAAU,GACV,eAAA0B,CACF,IAAM,CAEJ,MAAMD,EAAiBwQ,KACjB,CAAE,aAAAM,EAAc,gBAAAC,EAAiB,aAAAvM,EAAc,cAAAwM,CAAA,EAAkBL,KACjEpO,EAAamO,KACb,CACJ,kBAAAO,EACA,iBAAAC,EACA,eAAAC,EACA,kBAAAC,EACA,iBAAAC,GACET,GAAc,EAGZU,EAAsB7P,GAAuB1B,CAAO,EAGpDyC,EAAsBd,EAA2B3B,CAAO,EAGxDwR,EAA0BxR,EAAQ,IAAeS,IAAA,CACrD,KAAMA,EAAO,KACb,MAAOA,EAAO,aAAa,OAC3B,WAAYA,EAAO,WACnB,QAASA,EAAO,QAAQ,KACxB,UAAW,CACT,MAAOS,EAAqBT,EAAO,WAAYA,EAAO,aAAa,OAAQ8Q,CAAmB,CAChG,CACA,EAAA,EAGIE,EAAkB5R,GAAoB,CAC1C,OAAQA,EAAM,KAAM,CAClB,IAAK,QACeqR,EAAArR,EAAM,KAAK,QAAQ,EACrCwR,EAAkB,EAAI,EACLnR,GAAA,MAAAA,EAAAL,EAAM,KAAK,UAC5B,MACF,IAAK,QACcsR,EAAAtR,EAAM,KAAK,QAAQ,EACpC,KACJ,CAAA,EAII6R,EAAe,IAAM,CAEzB,QAAQ,IAAI,SAAS,CAAA,EAGjBC,EAAgB,IAAM,CAC1B,QAAQ,IAAI,UAAU,CAAA,EAGlBC,EAAc,IAAM,CACxB,QAAQ,IAAI,YAAY,CAAA,EAIpBC,EAAkBrP,GAAc,CACpC,aAAcxC,EAAQ,OACtB,kBAAmBA,EAAQ,OAAO,CAAC8R,EAAKrR,IAAWqR,EAAMrR,EAAO,aAAa,OAAQ,CAAC,EACtF,cAAeT,EAAQ,OAAOS,GAAUA,EAAO,aAAa,OAAS,CAAC,EAAE,OACxE,UAAWT,EAAQ,OAAO,CAACoD,EAAK3C,IAC9BA,EAAO,aAAa,OAAS2C,EAAI,aAAa,OAAS3C,EAAS2C,EAChEpD,EAAQ,CAAC,GAAK,CAAE,aAAc,CAAI,EAAA,KAAM,GAAI,QAAS,CAAE,KAAM,GAAK,CACpE,CAAA,EAIA,OAAAc,EAAA,KAAC,MAAI,CAAA,UAAU,2DAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sEACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,4CAA4C,SAE1D,UAAA,EACAgB,EAAAA,KAAC,IAAE,CAAA,UAAU,qCAAqC,SAAA,CAAA,MAC7C0B,GAAA,YAAAA,EAAY,eAAgBxC,EAAQ,OAAO,SAAMwC,GAAA,YAAAA,EAAY,oBAAqBxC,EAAQ,OAAO,CAAC8R,EAAKrR,IAAWqR,EAAMrR,EAAO,aAAa,OAAQ,CAAC,EAAE,MAAA,EAC5J,CAAA,EACF,EAEAX,EAAAA,IAAC,MAAI,CAAA,UAAU,8BACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAASsR,EACT,UAAU,gDAET,WAAe,OAAS,MAAA,CAAA,EAE7B,CAAA,EACF,EAGAtQ,EAAAA,KAAC,MAAI,CAAA,UAAU,0BAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAhB,EAAA,IAACxB,GAAA,CACC,KAAMkT,EACN,WAAYC,EACZ,QAAAjT,EACA,UAAU,eAAA,CACZ,EAGAsB,EAAA,IAACsE,GAAA,CACC,SAAUsN,EACV,UAAWC,EACX,QAASC,EACT,mBAAoBN,EACpB,aAAA7M,CAAA,CACF,EAGCwM,GAAiB,CAACD,GAChBlR,EAAA,IAAA,MAAA,CAAI,UAAU,+FACb,SAAAgB,EAAA,KAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,kCACZ,SACHmR,EAAA,EACCnR,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAEvC,WAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIDtB,SACE,MAAI,CAAA,UAAU,2EACb,SAACsC,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAChB,EAAAA,IAAA,MAAA,CAAI,UAAU,mEAAoE,CAAA,EAClFA,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAS,YAAA,CAAA,CAAA,CACnD,CACF,CAAA,CAAA,EAEJ,EAGCiR,GACCjR,EAAA,IAAC,MAAI,CAAA,UAAU,0DACb,SAAAA,EAAA,IAACC,GAAA,CACC,QAAAC,EACA,gBAAgBC,GAAA,YAAAA,EAAgB,OAAQ,KACxC,eAAiB2P,GAAasB,EAAkBtB,CAAQ,CAAA,CAAA,EAE5D,CAAA,EAEJ,EAGA9P,EAAAA,IAAC,MAAI,CAAA,UAAU,oCACb,SAAAA,EAAA,IAACwC,GAAA,CACC,aAAc,OAAO,KAAKtC,EAAQ,OAAO,CAACuO,EAAK9N,KACzC8N,EAAA9N,EAAO,UAAU,EAAI,GAClB8N,GACN,CAA6B,CAAA,CAAC,EACjC,WAAYsD,EACZ,oBAAApP,CAAA,CAAA,EAEJ,EAGA3C,EAAA,IAAC6D,GAAA,CACC,OAAQ1D,EACR,OAAQ+Q,EACR,QAAS,IAAM,CACbK,EAAkB,EAAK,EACvBH,EAAkB,IAAI,CACxB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,ECxLMa,GAAoD,CAAC,CAAE,OAAAnO,EAAQ,QAAAC,KAAc,CACjF,KAAM,CAAE,WAAA0L,EAAY,cAAAC,EAAe,gBAAAwC,EAAiB,iBAAAC,CAAA,EAAqB3C,IAEnE,CAAC4C,EAAUC,CAAW,EAAI9R,WAAS,CACvC,UAAUmP,GAAA,YAAAA,EAAe,WAAY,8BACrC,SAASA,GAAA,YAAAA,EAAe,UAAW,mBACnC,aAAaA,GAAA,YAAAA,EAAe,cAAe,4CAAA,CAC5C,EAEK,CAAChR,EAAS4T,CAAU,EAAI/R,WAAS,EAAK,EAE5C,GAAI,CAACuD,EAAe,OAAA,KAEd,MAAAyO,EAAe,MAAOlV,GAAuB,CACjDA,EAAE,eAAe,EACjBiV,EAAW,EAAI,EAEX,GAAA,CACF,MAAMJ,EAAgBE,CAAQ,EACtBrO,UACD5E,EAAO,CACN,QAAA,MAAM,YAAaA,CAAK,EAChC,MAAM,kBAAkB,CAAA,QACxB,CACAmT,EAAW,EAAK,CAClB,CAAA,EAGIE,EAAqB,IAAM,CAC/BL,EAAiB,MAAM,EACfpO,GAAA,EAGV,aACG,MAAI,CAAA,UAAU,iFACb,SAAC/C,EAAA,KAAA,MAAA,CAAI,UAAU,+EAEb,SAAA,CAAAhB,EAAAA,IAAC,OAAI,UAAU,qCACb,SAACgB,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,wCAAwC,SAAK,QAAA,EAC3DA,EAAA,IAAC,SAAA,CACC,QAAS+D,EACT,UAAU,uDACX,SAAA,GAAA,CAED,CAAA,CAAA,CACF,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,MACb,SAAC/C,EAAA,KAAA,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAhB,EAAAA,IAAC,OAAI,UAAU,4BACb,SAACgB,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAE,KAAA,SACjC,MACC,CAAA,SAAA,CAACgB,EAAAA,KAAA,MAAA,CAAI,UAAU,4BAA4B,SAAA,CAAA,UACjCyO,IAAe,UAAY,SAAW,MAAA,EAChD,EACCA,IAAe,WAAaC,GAC1B1O,EAAA,KAAA,MAAA,CAAI,UAAU,6BAA6B,SAAA,CAAA,SACnC0O,EAAc,OAAA,EACvB,CAAA,EAEJ,CAAA,CAAA,CACF,CACF,CAAA,EAGA1O,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,4CAA4C,SAAK,QAAA,EAE/DgB,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,oEAAoE,SAEnF,KAAA,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,kCAAkC,SAAI,OAAA,EACnDA,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAS,YAAA,CAAA,EACxD,CAAA,EACF,EACAA,EAAA,IAAC,SAAA,CACC,QAASwS,EACT,UAAU,oDACV,SAAU/C,IAAe,OAExB,SAAAA,IAAe,OAAS,OAAS,SAAA,CACpC,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,wCACb,SAACzO,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,oEAAoE,SAEnF,KAAA,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,kCAAkC,SAAM,SAAA,EACrDA,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAS,YAAA,CAAA,EACxD,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAAA,EACF,EAGCgB,EAAA,KAAA,OAAA,CAAK,SAAUuR,EAAc,UAAU,YACtC,SAAA,CAACvS,EAAA,IAAA,KAAA,CAAG,UAAU,4CAA4C,SAAM,SAAA,EAEhEgB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAChB,EAAA,IAAA,QAAA,CAAM,UAAU,qDAAqD,SAEtE,uBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOoS,EAAS,SAChB,SAAW/U,GAAMgV,EAAY,CAAE,GAAGD,EAAU,SAAU/U,EAAE,OAAO,MAAO,EACtE,YAAY,8BACZ,UAAU,4IACV,SAAQ,EAAA,CACV,EACA2D,EAAAA,KAAC,IAAE,CAAA,UAAU,qCAAqC,SAAA,CAAA,oDACChB,EAAAA,IAAC,UAAO,SAA2B,6BAAA,CAAA,CAAA,EACtF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,qDAAqD,SAEtE,mBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOoS,EAAS,QAChB,SAAW/U,GAAMgV,EAAY,CAAE,GAAGD,EAAU,QAAS/U,EAAE,OAAO,MAAO,EACrE,YAAY,mBACZ,UAAU,4IACV,SAAQ,EAAA,CACV,EACC2C,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAElD,wBAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,qDAAqD,SAEtE,sBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOoS,EAAS,YAChB,SAAW/U,GAAMgV,EAAY,CAAE,GAAGD,EAAU,YAAa/U,EAAE,OAAO,MAAO,EACzE,YAAY,UACZ,UAAU,4IACV,SAAQ,EAAA,CACV,EACC2C,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAElD,kBAAA,CAAA,EACF,CAAA,EACF,EAGAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,kCAAkC,SAAW,cAAA,EAC3DgB,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MAAI,CAAA,SAAA,CAAA,KAAEhB,EAAAA,IAAC,UAAO,SAAI,MAAA,CAAA,EAAS,UAAA,EAAQ,SACnC,MAAI,CAAA,SAAA,CAAA,KAAEA,EAAAA,IAAC,UAAO,SAAI,MAAA,CAAA,EAAS,UAAA,EAAQ,SACnC,MAAI,CAAA,SAAA,CAAA,KAAEA,EAAAA,IAAC,UAAO,SAAI,MAAA,CAAA,EAAS,aAAA,EAAW,SACtC,MAAI,CAAA,SAAA,CAAA,KAAEA,EAAAA,IAAC,UAAO,SAAG,KAAA,CAAA,EAAS,YAAA,EAAU,SACpC,MAAI,CAAA,SAAA,CAAA,KAAEA,EAAAA,IAAC,UAAO,SAAI,MAAA,CAAA,EAAS,kBAAA,EAAgB,SAC3C,MAAI,CAAA,SAAA,CAAA,KAAEA,EAAAA,IAAC,UAAO,SAAI,MAAA,CAAA,EAAS,YAAA,EAAU,SACrC,MAAI,CAAA,SAAA,CAAA,KAAEA,EAAAA,IAAC,UAAO,SAAI,MAAA,CAAA,EAAS,YAAA,EAAU,SACrC,MAAI,CAAA,SAAA,CAAA,KAAEA,EAAAA,IAAC,UAAO,SAAE,IAAA,CAAA,EAAS,YAAA,EAAU,CAAA,EACtC,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,8BAA8B,SAE7C,yBAAA,CAAA,EACF,EAEAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAhB,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUtB,EACV,UAAU,6CAET,WAAU,SAAW,QAAA,CACxB,EACAsB,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS+D,EACT,UAAU,wCACX,SAAA,IAAA,CAED,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC7MM0O,EAAgB,CACpB,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,MAAO,OAC5B,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,MAAO,MAAO,MAC5B,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,MAAO,SAAU,UAAW,QAC5B,UAAW,WAAY,UAAW,SACpC,EAGMC,EAAyB,CAC7B,GAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EACtD,GAAM,CAAC,MAAO,UAAW,MAAO,UAAW,SAAS,EACpD,GAAM,CAAC,MAAO,MAAO,MAAO,OAAO,EACnC,GAAM,CAAC,MAAO,MAAO,MAAO,MAAO,QAAQ,EAC3C,GAAM,CAAC,MAAO,MAAO,KAAK,EAC1B,GAAM,CAAC,MAAO,MAAO,MAAM,EAC3B,GAAM,CAAC,MAAO,MAAO,MAAO,UAAW,UAAU,EACjD,GAAM,CAAC,KAAK,CACd,EAEMC,GAA0D,CAAC,CAAE,OAAA7O,EAAQ,QAAAC,KAAc,CACvF,KAAM,CAAE,cAAAsK,EAAe,iBAAAuE,CAAiB,EAAIpD,EAAY,EAElD,CAACqD,EAAcC,CAAe,EAAIvS,EAAA,SACtC8N,GAAiBqE,CAAA,EAGb,CAACK,EAAeC,CAAgB,EAAIzS,WAAS,EAAE,EAGrD,GAAI,CAACuD,EAAe,OAAA,KAGpB,MAAMmP,EAAoB,OAAO,OAAOJ,CAAY,EAAE,KAAK,EAGrDK,EAAsBT,EAAc,OAC5B/D,GAAA,CAACuE,EAAkB,SAASvE,CAAQ,CAAA,EAI5CyE,EAAkB,IAAM,CACxBJ,EAAc,QAAU,CAACF,EAAaE,EAAc,KAAA,CAAM,IAC5CD,EAAA,CACd,GAAGD,EACH,CAACE,EAAc,KAAK,CAAC,EAAG,CAAC,CAAA,CAC1B,EACDC,EAAiB,EAAE,EACrB,EAIII,EAAsB3C,GAAuB,CAC3C,MAAA4C,EAAa,CAAE,GAAGR,GACxB,OAAOQ,EAAW5C,CAAU,EAC5BqC,EAAgBO,CAAU,CAAA,EAItBC,EAA4B,CAAC7C,EAAoB/B,IAAqB,CAEpE,MAAA2E,EAAa,CAAE,GAAGR,GACxB,OAAO,KAAKQ,CAAU,EAAE,QAAkB1S,GAAA,CAC7B0S,EAAA1S,CAAM,EAAI0S,EAAW1S,CAAM,EAAE,OAAQ7D,GAAcA,IAAM4R,CAAQ,CAAA,CAC7E,EAGD2E,EAAW5C,CAAU,EAAI,CAAC,GAAG4C,EAAW5C,CAAU,EAAG/B,CAAQ,EAC7DoE,EAAgBO,CAAU,CAAA,EAItBE,EAAiC,CAAC9C,EAAoB/B,IAAqB,CAC/DoE,EAAA,CACd,GAAGD,EACH,CAACpC,CAAU,EAAGoC,EAAapC,CAAU,EAAE,OAAQ,GAAc,IAAM/B,CAAQ,CAAA,CAC5E,CAAA,EAIG8E,EAAa,IAAM,CACvBZ,EAAiBC,CAAY,EACrB9O,GAAA,EAIJ+N,EAAc,IAAM,CACxBgB,EAAgBJ,CAAsB,CAAA,EAGxC,aACG,MAAI,CAAA,UAAU,iFACb,SAAC1R,EAAA,KAAA,MAAA,CAAI,UAAU,+EAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,wCAAwC,SAAM,SAAA,EAC5DA,EAAA,IAAC,SAAA,CACC,QAAS+D,EACT,UAAU,uDACX,SAAA,GAAA,CAED,CAAA,EACF,EACC/D,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAElD,iCAAA,CAAA,EACF,EAGAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,4CAA4C,SAAI,OAAA,EAC9DgB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAhB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO+S,EACP,SAAW1V,GAAM2V,EAAiB3V,EAAE,OAAO,KAAK,EAChD,YAAY,UACZ,UAAU,wDACV,WAAaA,GAAMA,EAAE,MAAQ,SAAW8V,EAAgB,CAAA,CAC1D,EACAnT,EAAA,IAAC,SAAA,CACC,QAASmT,EACT,UAAU,8CACV,SAAU,CAACJ,EAAc,KAAK,EAC/B,SAAA,MAAA,CAED,CAAA,EACF,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,YACZ,SAAA,OAAO,QAAQF,CAAY,EAAE,IAAI,CAAC,CAACpC,EAAY5B,CAAS,IACtD7N,EAAAA,KAAA,MAAA,CAAqB,UAAU,wCAC9B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,oDACZ,SAAA,CAAAhB,EAAA,IAAC,MAAA,CACC,UAAU,uBACV,MAAO,CACL,gBAAiByT,GAAehD,CAAU,CAC5C,CAAA,CACF,EACCA,EAAW,KAAG5B,EAAU,OAAO,MAAA,EAClC,EACA7O,EAAA,IAAC,SAAA,CACC,QAAS,IAAMoT,EAAmB3C,CAAU,EAC5C,UAAU,0CACX,SAAA,MAAA,CAED,CAAA,EACF,EAEAzP,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACZ,SAAA,CAAA6N,EAAU,IACTH,GAAA1N,EAAA,KAAC,MAAA,CAEC,UAAU,+DAEV,SAAA,CAAAhB,EAAAA,IAAC,QAAM,SAAS0O,CAAA,CAAA,EAChB1O,EAAA,IAAC,SAAA,CACC,QAAS,IAAMuT,EAA+B9C,EAAY/B,CAAQ,EAClE,UAAU,wCACX,SAAA,GAAA,CAED,CAAA,CAAA,EATKA,CAAA,CAWR,EAEAG,EAAU,SAAW,SACnB,MAAI,CAAA,UAAU,+BAA+B,SAE9C,cAAA,CAAA,EAEJ,CAAA,GAxCQ4B,CAyCV,CACD,EACH,CAAA,EACF,EAGAzP,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,4CAA4C,SAAA,CAAA,UAChDkS,EAAoB,OAAO,GAAA,EACrC,EAEAlS,EAAAA,KAAC,MAAI,CAAA,UAAU,qCACZ,SAAA,CAAAkS,EAAoB,IAAIxE,GACtB1N,EAAAA,KAAA,MAAA,CAAmB,UAAU,uEAC5B,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,UAAW,SAAS0O,EAAA,EACpC1N,EAAA,KAAC,SAAA,CACC,MAAM,GACN,SAAW3D,GAAM,CACXA,EAAE,OAAO,OACeiW,EAAAjW,EAAE,OAAO,MAAOqR,CAAQ,CAEtD,EACA,UAAU,mDAEV,SAAA,CAAC1O,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAM,SAAA,EACtB,OAAO,KAAK6S,CAAY,EAAE,IAAIpC,GAC5BzQ,EAAA,IAAA,SAAA,CAAwB,MAAOyQ,EAC7B,SADUA,CAAA,EAAAA,CAEb,CACD,CAAA,CAAA,CACH,CAAA,CAAA,EAjBQ/B,CAkBV,CACD,EAEAwE,EAAoB,SAAW,SAC7B,MAAI,CAAA,UAAU,yCAAyC,SAExD,WAAA,CAAA,EAEJ,CAAA,EACF,CAAA,EACF,EAGAlS,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,iCAAiC,SAAI,OAAA,EACnDgB,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAhB,EAAAA,IAAC,OAAI,UAAU,8BAA+B,gBAAO,KAAK6S,CAAY,EAAE,OAAO,EAC9E7S,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAI,OAAA,CAAA,EACrC,SACC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,8BAA+B,SAAAiT,EAAkB,OAAO,EACtEjT,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAK,QAAA,CAAA,EACtC,SACC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,8BAA+B,SAAAkT,EAAoB,OAAO,EACxElT,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAK,QAAA,CAAA,EACtC,SACC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,8BAA+B,SAAAyS,EAAc,OAAO,EAClEzS,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAI,OAAA,CAAA,EACrC,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAGAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,qEACb,SAAA,CAAAhB,EAAA,IAAC,SAAA,CACC,QAAS8R,EACT,UAAU,wCACX,SAAA,OAAA,CAED,EACA9Q,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAhB,EAAA,IAAC,SAAA,CACC,QAAS+D,EACT,UAAU,wCACX,SAAA,IAAA,CAED,EACA/D,EAAA,IAAC,SAAA,CACC,QAASwT,EACT,UAAU,sCACX,SAAA,MAAA,CAED,CAAA,EACF,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EAGMC,GAAkBhD,IACmB,CACvC,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,SAAA,GAGQA,CAAU,GAAK,UCxRpBiD,EAAN,MAAMA,CAAoB,CAOvB,aAAc,CALd3F,EAAA,qBAAgB,IAEhBA,EAAA,0BACAA,EAAA,wBAEe,CAEvB,OAAc,aAAmC,CAC3C,OAAC2F,EAAoB,WACHA,EAAA,SAAW,IAAIA,GAE9BA,EAAoB,QAC7B,CAKA,MAAa,YAA4B,CACvC,GAAI,MAAK,cAIL,GAAA,CAEE,GAAA,OAAO,OAAO,MAAU,IAAa,CACvC,QAAQ,KAAK,mBAAmB,EAChC,KAAK,aAAa,EAClB,MACF,CAGM,MAAA,OAAO,MAAM,QAGb,MAAA5H,EAAS,MAAM,KAAK,kBAClB,QAAA,IAAI,QAASA,CAAM,EAG3B,KAAK,kBAAkB,EAGvB,KAAK,oBAAoB,EAEzB,KAAK,cAAgB,GACrB,QAAQ,IAAI,WAAW,QAEhB3M,EAAO,CACN,QAAA,MAAM,aAAcA,CAAK,EACjC,KAAK,aAAa,CACpB,CACF,CAKQ,cAAqB,CAC3B,QAAQ,IAAI,QAAQ,EACpB,KAAK,cAAgB,GAGrB,WAAW,IAAM,CACf,KAAK,kBAAkB,GACtB,GAAI,CACT,CAKA,MAAc,iBAAyC,CACjD,GAAA,CACF,GAAI,OAAO,OAAS,OAAO,MAAM,QAGxB,MAAA,CACL,KAFgB,MAAM,OAAO,MAAM,QAAQ,KAAK,eAGhD,MAAO,IACP,OAAQ,GAAA,QAGLA,EAAO,CACN,QAAA,MAAM,YAAaA,CAAK,CAClC,CAEO,MAAA,CACL,MAAO,IACP,OAAQ,GAAA,CAEZ,CAKQ,mBAA0B,CAC1B,MAAAwU,EAAkB,SAAS,eAAe,gBAAgB,EAC5DA,IACFA,EAAgB,MAAM,QAAU,QAEpC,CAKQ,mBAA0B,CAC1B,MAAAA,EAAkB,SAAS,eAAe,gBAAgB,EAC5DA,IACFA,EAAgB,MAAM,QAAU,OAEpC,CAKQ,qBAA4B,CAC5B,MAAAC,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAY,SAAS,eAAe,YAAY,EAElDD,GACSA,EAAA,iBAAiB,QAAS,IAAM,CACzC,KAAK,cAAc,CAAA,CACpB,EAGCC,GACQA,EAAA,iBAAiB,QAAS,IAAM,CACxC,KAAK,aAAa,CAAA,CACnB,CAEL,CAKA,MAAc,eAA+B,CACvC,GAAA,CACF,QAAQ,IAAI,QAAQ,EAGd,MAAAC,EAAc,KAAK,uBAGrB,KAAK,mBACP,KAAK,kBAAkBA,CAAW,EAIhC,OAAO,OACH,MAAA,KAAK,eAAeA,CAAW,EAC/B,MAAA,OAAO,MAAM,OAAO,MAAM,IAG3B,KAAA,YAAY,cAAe,SAAS,EACzC,KAAK,kBAAkB,SAGlB3U,EAAO,CACN,QAAA,MAAM,UAAWA,CAAK,EACzB,KAAA,YAAY,WAAY,OAAO,CACtC,CACF,CAKA,MAAc,cAA8B,CACtC,GAAA,CACF,QAAQ,IAAI,QAAQ,EAGhB,KAAK,kBACP,KAAK,iBAAiB,EAIpB,OAAO,MACH,MAAA,OAAO,MAAM,OAAO,MAAM,GAG3B,KAAA,YAAY,QAAS,MAAM,EAChC,KAAK,kBAAkB,SAGlBA,EAAO,CACN,QAAA,MAAM,UAAWA,CAAK,CAChC,CACF,CAKQ,sBAA4B,CAG3B,MAAA,CACL,UAAW,KAAK,IAAI,EACpB,OAAQ,CACN,WAAY,aAAa,QAAQ,uBAAuB,GAAK,OAC7D,cAAe,KAAK,MAAM,aAAa,QAAQ,oBAAoB,GAAK,IAAI,EAC5E,YAAa,aAAa,QAAQ,mBAAmB,GAAK,SAC5D,CAAA,CAEJ,CAKA,MAAc,eAAetB,EAA0B,CACrD,GAAI,OAAO,OAAS,OAAO,MAAM,QAC3B,GAAA,CAEM,QAAA,IAAI,UAAWA,CAAI,QAEpBsB,EAAO,CACN,cAAA,MAAM,UAAWA,CAAK,EACxBA,CACR,CAEJ,CAKQ,YAAYoL,EAAiBtJ,EAAqC,OAAc,CAEhF,MAAA8S,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUV9S,IAAS,UAAY,UAAYA,IAAS,QAAU,UAAY,SAAS;AAAA,MAEzF8S,EAAU,YAAcxJ,EAEf,SAAA,KAAK,YAAYwJ,CAAS,EAGnC,WAAW,IAAM,CACXA,EAAU,YACFA,EAAA,WAAW,YAAYA,CAAS,GAE3C,GAAI,CACT,CAKO,UAAU7E,EAAqC,CACpD,KAAK,kBAAoBA,CAC3B,CAKO,SAASA,EAA4B,CAC1C,KAAK,iBAAmBA,CAC1B,CAKO,uBAAiC,CAC/B,OAAA,OAAO,OAAO,MAAU,GACjC,CAKA,MAAa,aAA4B,CACvC,GAAI,OAAO,OAAS,OAAO,MAAM,QAC3B,GAAA,CACF,OAAO,MAAM,OAAO,MAAM,QAAQ,OAAO,YAAY,QAC9C/P,EAAO,CACN,eAAA,MAAM,YAAaA,CAAK,EACzB,IACT,CAEK,OAAA,IACT,CAKA,MAAa,gBAA+B,CAC1C,GAAI,OAAO,OAAS,OAAO,MAAM,QAC3B,GAAA,CACF,MAAM6U,EAAY,MAAM,OAAO,MAAM,QAAQ,KAAK,eAC9C,GAAAA,GAAaA,EAAU,QAGlB,OADS,MADF,MAAM,OAAO,MAAM,QAAQ,KAAK,aAAaA,EAAU,OAAO,GAChD,mBAGvB7U,EAAO,CACN,QAAA,MAAM,cAAeA,CAAK,CACpC,CAEK,OAAA,IACT,CACF,EA/SE4O,EADW2F,EACI,YADV,IAAMO,EAANP,EAmTM,MAAAQ,EAAsBD,EAAoB,YAAY,EC7T7DE,GAA8B,IAAM,CAExC,MAAMjU,EAAUwQ,KACV0D,EAAexD,KACflO,EAAamO,KACb,CAAE,YAAAhB,EAAa,kBAAAuB,CAAkB,EAAIL,GAAc,EACnD,CAAE,WAAAtB,GAAeD,IAGjB,CAAC6E,EAAsBC,CAAuB,EAAI/T,WAAS,EAAK,EAChE,CAACgU,EAAyBC,CAA0B,EAAIjU,WAAS,EAAK,EAG5ExB,EAAAA,UAAU,IAAM,EACW,SAAY,CAC/B,GAAA,CAiBE,GAfJ,MAAMmV,EAAoB,aAGNA,EAAA,UAAWrW,GAAS,CAC9B,QAAA,IAAI,aAAcA,CAAI,CAAA,CAC/B,EAEDqW,EAAoB,SAAS,IAAM,CACjC,QAAQ,IAAI,MAAM,CAAA,CACnB,EAGWrE,IAGRqE,EAAoB,wBAAyB,CACzC,MAAAO,EAAc,MAAMP,EAAoB,iBAC1CO,GACM,QAAA,IAAI,aAAcA,CAAW,CAGzC,QAEOtV,EAAO,CACN,QAAA,MAAM,WAAYA,CAAK,EAEnB0Q,GACd,CAAA,IAGe,EAChB,CAACA,CAAW,CAAC,EAEV,MAAA6E,EAAsB5E,GAAqB,CAC/CsB,EAAkBtB,CAAQ,EAClB,QAAA,IAAI,QAASA,CAAQ,CAAA,EAG/B,aACG,MAAI,CAAA,UAAU,oCACb,SAAC9O,EAAA,KAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAhB,EAAAA,IAAC,UAAO,UAAU,OAChB,SAACgB,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAEvD,UAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAElD,oBAAA,CAAA,EACF,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAG,MAAA,QACjD,MAAI,CAAA,UAAU,kCACZ,SAAeyP,IAAA,UAAY,SAAW,OACzC,CAAA,EACF,EACAzO,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAhB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwU,EAA2B,EAAI,EAC9C,UAAU,wCACX,SAAA,UAAA,CAED,EACAxU,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsU,EAAwB,EAAI,EAC3C,UAAU,wCACX,SAAA,QAAA,CAED,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAEAtU,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACgR,GAAA,CACC,QAAA9Q,EACA,QAASkU,EAAa,UACtB,eAAgBM,CAAA,CAAA,EAEpB,EAGCN,EAAa,OACXpU,EAAAA,IAAA,MAAA,CAAI,UAAU,sDACb,SAAAgB,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAChB,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAE,KAAA,SAChC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,MAAA,CAAI,UAAU,2BAA2B,SAAI,OAAA,QAC7C,MAAI,CAAA,UAAU,uBAAwB,SAAAoU,EAAa,MAAM,QAAQ,CAAA,EACpE,CAAA,CAAA,CACF,CACF,CAAA,EAID,CAACA,EAAa,WAAalU,EAAQ,OAAS,GAAKwC,GAChD1B,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,wCACZ,SAAA0C,EAAW,aACd,EACC1C,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAI,OAAA,CAAA,EAC7C,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA0C,EAAW,kBACd,EACC1C,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAI,OAAA,CAAA,EAC7C,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA0C,EAAW,cACd,EACC1C,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAI,OAAA,CAAA,EAC7C,EACAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAhB,EAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA0C,EAAW,mBACd,EACC1C,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAI,OAAA,CAAA,EAC7C,CAAA,EACF,EAIFA,EAAA,IAACiS,GAAA,CACC,OAAQoC,EACR,QAAS,IAAMC,EAAwB,EAAK,CAAA,CAC9C,EAGAtU,EAAA,IAAC2S,GAAA,CACC,OAAQ4B,EACR,QAAS,IAAMC,EAA2B,EAAK,CAAA,CACjD,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECnKA,SAASG,IAAM,CACb,aACG,MAAI,CAAA,UAAU,oCACb,SAAA3U,EAAAA,IAACmU,KAAkB,CACrB,CAAA,CAEJ,CCHAS,EAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,aACnDlP,EAAM,WAAN,CACC,SAAA1F,EAAAA,IAAC2U,IAAI,CAAA,EACP,CACF","x_google_ignoreList":[0,1,2,11,12,13,14,15,16,17]}